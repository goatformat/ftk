{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-52df62d3559cdc26.js","html/sim/swipe.ts","html/sim/sim.ts","node_modules/@parcel/runtime-js/lib/runtime-adde320768490017.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gcU1a\\\":\\\"index.47baf571.js\\\",\\\"4bfU0\\\":\\\"worker.f8fc40e1.js\\\",\\\"ftUP3\\\":\\\"index.e8a2610c.js\\\",\\\"77teK\\\":\\\"index.69b6619e.css\\\",\\\"1Lmeo\\\":\\\"index.ca16cb85.js\\\"}\"));","/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/swiped-events */\n(() => {\n  'use strict';\n\n  const THRESHOLD = 100;\n  const TIMEOUT = 500;\n\n  let downX: number | null = null;\n  let downY: number | null = null;\n  let diffX = 0;\n  let diffY = 0;\n  let timeDown: number | null = null;\n  let startElement: EventTarget | null = null;\n\n  if (typeof window.CustomEvent !== 'function') {\n    // @ts-ignore\n    window.CustomEvent = (event: string, params: any) => {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      const e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return e;\n    };\n\n    // @ts-ignore\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  function handleTouchEnd(e: TouchEvent) {\n    if (startElement !== e.target) return;\n\n    const timeDiff = Date.now() - timeDown!;\n    let eventType = '';\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (Math.abs(diffX) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffX > 0) {\n          eventType = 'swiped-left';\n        } else {\n          eventType = 'swiped-right';\n        }\n      }\n    } else {\n      if (Math.abs(diffY) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffY > 0) {\n          eventType = 'swiped-up';\n        } else {\n          eventType = 'swiped-down';\n        }\n      }\n    }\n\n    if (eventType) {\n      startElement!.dispatchEvent(new CustomEvent(eventType, {bubbles: true, cancelable: true}));\n    }\n\n    downX = null;\n    downY = null;\n    timeDown = null;\n  }\n\n  function handleTouchStart(e: TouchEvent) {\n    startElement = e.target;\n\n    timeDown = Date.now();\n    downX = e.touches[0].clientX;\n    downY = e.touches[0].clientY;\n    diffX = 0;\n    diffY = 0;\n  }\n\n  function handleTouchMove(e: TouchEvent) {\n    if (!downX || !downY) return;\n    diffX = downX - e.touches[0].clientX;\n    diffY = downY - e.touches[0].clientY;\n  }\n\n  document.addEventListener('touchstart', handleTouchStart, false);\n  document.addEventListener('touchmove', handleTouchMove, false);\n  document.addEventListener('touchend', handleTouchEnd, false);\n})();\n","import * as workerpool from 'workerpool';\n\nimport {State, Random, ID, DeckID, Card, DATA, FieldID, Location, Ids} from '../../src';\nimport {createElement, renderState, track, makeCard, CMP} from '../common';\n\nimport './swipe';\n\ntype Action = {\n  type: 'play' | 'win' | 'lose';\n} | ActionState & ({\n  type: 'target';\n} | {\n  type: 'search';\n  options: [Location, number][];\n});\n\ninterface ActionState {\n  origin: {location: Location; i: number};\n  filter: (location: Location, id: FieldID) => boolean;\n  fn: (location: Location, ...j: number[]) => void;\n  num: number;\n  targets: [Location, number][];\n}\n\ninterface Context {\n  state: State;\n  banished: DeckID[];\n  graveyard: ID[];\n  action: Action;\n}\n\nconst NUM = (window.location.hash && +window.location.hash.slice(1)) ||\n  (window.location.search && +window.location.search.slice(1)) ||\n  ~~(Math.random() * (2 ** 31 - 1));\nconsole.log('Seed:', NUM);\n\nconst START = State.create(new Random(Random.seed(NUM)), true);\n\nconst STATE = {\n  stack: [{\n    state: START,\n    banished: [],\n    graveyard: [],\n    action: {type: 'play'},\n  } as Context],\n  index: 0,\n};\n\nfunction update(mutate = true) {\n  const $content = document.getElementById('content')!;\n  while ($content.firstChild) $content.removeChild($content.firstChild);\n\n  const {state: s, banished, graveyard, action} = STATE.stack[STATE.index];\n  const trace = renderTrace(s, banished, graveyard, mutate);\n\n  const wrapper = createElement('div', 'wrapper');\n  wrapper.appendChild(renderState(s, banished, graveyard, handler, transform, true, NUM));\n\n  if (action.type === 'win' || !s.clone().next().length) {\n    const modal = createElement('div', 'modal', 'end', action.type === 'win' ? 'win' : 'lose');\n    const a = createElement('a');\n    a.href = `../trace?${NUM}`;\n    const end = createElement('h1');\n    end.textContent = `You ${action.type === 'win' ? 'Win' : 'Lose'}`;\n    a.appendChild(end);\n    modal.appendChild(a);\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    wrapper.appendChild(overlay);\n\n    // TODO: add restart\n  } else if (action.type === 'search') {\n    const modal = createElement('div', 'modal');\n\n    const zone = createElement('div', 'zone', 'search');\n    for (const [location, i] of action.options.sort((a, b) => s[a[0]][a[1]].localeCompare(s[b[0]][b[1]]))) {\n      const id = s[location][i] as FieldID;\n      const card = ID.decode(id);\n      zone.appendChild(makeCard(card, () => handler(location, id, i), {\n        hold: true,\n        className: transform(location, id, i, true),\n      }));\n    }\n    modal.appendChild(zone);\n\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    overlay.addEventListener('click', () => {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      if (action.num > 1 && action.targets.length) {\n        return action.fn(action.targets[0][0], action.targets[0][1]);\n      } else {\n        update();\n      }\n    }, {once: true});\n    wrapper.appendChild(overlay);\n  }\n\n  $content.appendChild(wrapper);\n  if (trace) {\n    $content.appendChild(trace);\n    trace.scrollTop = trace.scrollHeight;\n  }\n}\n\nfunction renderTrace(s: State, banished: DeckID[], graveyard: ID[], mutate = true) {\n  if (!s.trace?.length) return undefined;\n\n  const trace = createElement('div', 'trace');\n  let p = createElement('p');\n  let ul = createElement('ul');\n\n  let last = '';\n  let major = 0;\n  for (const line of s.trace) {\n    const minor = line.startsWith('  ');\n    if (!minor) {\n      if (major) {\n        p.appendChild(ul);\n        ul = createElement('ul');\n        trace.appendChild(p);\n        p = createElement('p');\n      }\n      last = line;\n      major++;\n\n      const span = createElement('span');\n      span.innerHTML = line.replace(/\"(.*?)\"/g, (_, g: string) => `\"<b>${g}</b>\"`);\n      p.appendChild(span);\n    } else {\n      const li = createElement('li');\n      li.textContent = line;\n      ul.appendChild(li);\n    }\n  }\n\n  p.appendChild(ul);\n  ul = createElement('ul');\n  trace.appendChild(p);\n\n  if (last && mutate) {\n    const activated = last.startsWith('Activate')\n      ? DATA[/\"(.*?)\"/.exec(last)![1]].id\n      : (last.startsWith('Set') && !last.endsWith('face-down'))\n        ? DATA[/then activate(?: face-down)? \"(.*?)\"/.exec(last)![1]].id\n        : undefined;\n    track(s.banished, banished, activated);\n    track(s.graveyard, graveyard, activated);\n  }\n\n  return trace;\n}\n\nfunction SPELL(fn?: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    if (card.type === 'Spell' && card.subType === 'Continuous') {\n      s.add('spells', card.id);\n    } else {\n      s.add('graveyard', card.id);\n    }\n    if (fn) fn(s);\n    s.inc();\n    update();\n  };\n}\n\n// TODO: support guessing\nfunction ARCHFIEND(s: State, location: 'hand' | 'spells', i: number, card: Card) {\n  const play = location === 'hand' || ID.facedown(s[location][i]);\n  const prefix = play\n    ? `Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\" then pay`\n    : 'Pay';\n  s.major(`${prefix} 500 LP (${s.lifepoints} -> ${s.lifepoints - 500}) to activate effect of \"${card.name}\"`);\n  s.lifepoints -= 500;\n  if (s.known()) {\n    s.minor(`Declare \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n    s.draw();\n  } else {\n    s.minor('Declare \"Blue-Eyes White Dragon\"');\n    const reveal = ID.decode(s.deck.pop()!);\n    s.minor(`Excavate \"${reveal.name}\"`);\n    s.add('graveyard', reveal.id);\n  }\n  s.remove(location, i);\n  s.add('spells', `${card.id}1` as FieldID);\n  if (play) s.inc();\n\n  update();\n}\n\nfunction SANGAN_TARGET(location: Location, id: FieldID) {\n  const card = ID.decode(id);\n  return location === 'deck' && card.type === 'Monster' && card.atk <= 1500;\n}\n\nfunction RELOAD(fn: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    const spells = s.spells.length;\n    let max: number;\n    if (location === 'hand') {\n      const hand = s.hand.filter((id, j) => i !== j && ID.decode(id).type !== 'Monster');\n      max = Math.min(5 - spells - 1, hand.length, s.hand.length - 2);\n    } else {\n      const hand = s.hand.filter(id => ID.decode(id).type !== 'Monster');\n      max = Math.min(5 - spells, hand.length, s.hand.length - 1);\n    }\n\n    const before = s.hand.slice();\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type !== 'Monster', (_, ...set) => {\n      // NOTE: if location === 'hand' we need to adjust the offsets of any cards we set!\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n\n      const ids = [];\n      for (const [offset, j] of set.entries()) {\n        const id = before[j];\n        ids.push(id);\n        s.add('spells', `(${id})` as FieldID);\n        s.remove('hand', j - offset - (location === 'hand' && i < j ? 1 : 0));\n      }\n      if (ids.length) {\n        s.major(`Set ${ID.names(ids)} face-down then activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      } else {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      }\n      const len = s.hand.length;\n      fn(s);\n      s.hand = [];\n      s.draw(len);\n      s.inc();\n      update();\n    }, -max);\n  };\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction CAN_QUIZ(s: State) {\n  // NOTE: we have to clone for the termination check because it mutates the final state\n  if (!s.clone().end(false)) return false;\n  // The lookahead parameter only covers the A Feather of the Phoenix, end() will still return true\n  // if Black Pendant isn't actually equipped yet (but is equippable).\n  return s.spells.some(id => ID.id(id) === Ids.BlackPendant && !ID.facedown(id));\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction QUIZ(s: State, location: 'hand' | 'spells') {\n  if (!CAN_QUIZ(s)) return;\n\n  const known = s.known(true)!;\n  // NOTE: We already checked that Black Pendant is equipped\n  s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"Reversal Quiz\"`);\n  // Filter out Reversal Quiz from the messages about what gets sent to the Graveyard\n  const hand = s.hand.filter(id => ID.id(id) !== Ids.ReversalQuiz);\n  if (hand.length) s.minor(`Send ${ID.names(hand)} from hand to Graveyard`);\n  s.graveyard.push(...hand);\n  s.hand = [];\n\n  const ids = s.monsters.map(id => ID.id(id));\n  s.graveyard.push(...ids);\n  s.monsters = [];\n\n  for (const id of s.spells) {\n    const card = ID.decode(id);\n    if (card.id !== Ids.ReversalQuiz) {\n      continue;\n    } else if (!ID.facedown(id)) {\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.graveyard.push(card.id);\n    ids.push(card.id);\n  }\n  s.spells = [];\n  s.graveyard.sort();\n  if (ids.length) s.minor(`Send ${ID.names(ids)} from field to Graveyard`);\n\n  // Reversal Quiz isn't actually in the Graveyard at the point when the game is won\n  s.add('spells', Ids.ReversalQuiz);\n  // TODO: consider visually displaying the revealed card?\n  s.minor(`Call \"${ID.decode(known).type}\", reveal \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n  s.major(`After exchanging Life Points, opponent has ${s.lifepoints} LP and then takes 500 damage from \"Black Pendant\" being sent from the field to the Graveyard`);\n\n  STATE.stack[STATE.index].action = {type: 'win'};\n  update();\n}\n\nconst SPELLS: { [name: string]: any } = {\n  'A Feather of the Phoenix': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'hand', (_, j) => {\n      search({location, i}, loc => loc === 'graveyard', (__, k) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\"`);\n        const gid = s.remove('graveyard', k);\n        s.minor(`Return \"${ID.decode(gid).name}\" in the Graveyard to the top of the Deck`);\n        if (location === 'hand') {\n          s.discard(i < j ? [i, j] : [j, i]);\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.add('graveyard', s.remove('hand', j));\n        }\n        s.deck.push(`(${gid})` as DeckID);\n        s.inc();\n        update();\n      });\n    });\n  },\n  'Archfiend\\'s Oath': SPELL(),\n  'Black Pendant': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'monsters', (_, j) => {\n      s.remove(location, i);\n      s.major(`${location === 'spells' ? `Flip face-down \"${card.name}\" and equip` : `Equip \"${card.name}\"`} to \"${ID.decode(s.monsters[j]).name}\"`);\n      s.add('spells', `${card.id}${j}` as FieldID);\n      s.inc();\n      update();\n    });\n  },\n  'Card Destruction': RELOAD(s => {\n    for (const id of s.hand) {\n      s.add('graveyard', id);\n    }\n    s.minor(`Discard ${ID.names(s.hand)}`);\n  }),\n  'Convulsion of Nature': SPELL(s => s.reverse()),\n  'Different Dimension Capsule': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, loc => loc === 'deck', (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('spells', `${card.id}${s.turn}` as FieldID);\n      s.minor(`Banish ${ID.decode(s.deck[j]).name} from the deck face-down`);\n      s.add('banished', `(${ID.id(s.deck.splice(j, 1)[0])})` as DeckID);\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Giant Trunade': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('hand', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Return ${ID.names(s.spells)} to hand`);\n    s.spells = [];\n  }),\n  'Graceful Charity': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    s.remove(location, i);\n    i = s.add('spells', card.id);\n    s.draw(3);\n    update(); // FIXME bad partial state\n    // NOTE: we deliberately set the wrong index for the card so that it can't be cancelled\n    target({location: 'spells', i: -1}, loc => loc === 'hand', (_, j, k) => {\n      s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n      s.discard([j, k]); // PRECONDITION: j < k\n      s.remove('spells', i);\n      s.add('graveyard', card.id);\n      s.inc();\n      update();\n    }, 2);\n  },\n  'Level Limit - Area B': SPELL(),\n  'Pot of Greed': SPELL(s => s.draw(2)),\n  'Premature Burial': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Monster', (_, j) => {\n      s.major(`Pay 800 LP (${s.lifepoints} -> ${s.lifepoints - 800}) to activate effect of \"${card.name}\"`);\n      s.minor(`Special Summon \"${ID.decode(s.graveyard[j]).name}\" in Attack Position from Graveyard`);\n      s.lifepoints -= 800;\n      const gid = s.remove('graveyard', j);\n      const zone = s.summon(gid, true);\n      s.remove(location, i);\n      s.add('spells', `${card.id}${zone}` as FieldID);\n      s.inc(zone);\n      update();\n    });\n  },\n  'Heavy Storm': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('graveyard', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.BlackPendant) {\n        s.mclear(ID.data(id));\n      } else if (card.id === Ids.PrematureBurial) {\n        const removed = s.mremove(ID.data(id));\n        s.add('graveyard', removed.id);\n        s.minor(`Sending \"${ID.decode(removed.id).name}\" to the Graveyard after its equipped \"${ID.decode(id).name}\" was destroyed`);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Send ${ID.names(s.spells)} to Graveyard`);\n    s.spells = [];\n  }),\n  'Reload': RELOAD(s => {\n    s.deck.push(...s.hand);\n    s.minor(`Return ${ID.names(s.hand)} to Deck`);\n    s.shuffle();\n  }),\n  'Reversal Quiz': (s: State, location: 'hand' | 'spells', i: number, self: Card) => {\n    let sangan = false;\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${self.name}\"`);\n    if (s.hand.length) {\n      s.minor(`Send ${ID.names(s.hand)} from hand to Graveyard`);\n    }\n    if (s.monsters.length || s.spells.length) {\n      s.minor(`Send ${ID.names([...s.monsters, ...s.spells])} from field to Graveyard`);\n    }\n\n    s.graveyard.push(...s.hand);\n    s.hand = [];\n    for (const id of s.monsters) {\n      const card = ID.decode(id);\n      if (card.id === Ids.Sangan) sangan = true;\n      s.graveyard.push(card.id);\n    }\n    s.monsters = [];\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      if (!ID.facedown(id)) {\n        if (card.id === Ids.ConvulsionOfNature) {\n          s.reverse(true);\n        } else if (card.id === Ids.DifferentDimensionCapsule) {\n          s.banish();\n        }\n      }\n      s.graveyard.push(card.id);\n    }\n    s.spells = [];\n    s.graveyard.sort();\n\n    const reveal = s.deck[s.deck.length - 1];\n    if (!ID.known(reveal)) s.deck[s.deck.length - 1] = `(${reveal})` as DeckID;\n    // BUG: we are deliberately peeking here to ensure we call it wrong!\n    const card = ID.decode(reveal);\n    s.minor(`Call \"${card.type === 'Trap' ? 'Monster' : 'Trap'}\", reveal \"${card.name}\"`);\n    if (!sangan) return update();\n\n    search({location, i}, SANGAN_TARGET, (_, j) => {\n      if (j < 0) {\n        s.minor('Fail to find \"Sangan\" target in Deck');\n      } else {\n        const id = ID.id(s.deck.splice(j, 1)[0]);\n        s.minor(`Add \"${ID.decode(id).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n        s.add('hand', id);\n      }\n      s.shuffle();\n      update();\n    });\n  },\n  // TODO: handle flipping Royal Decree in multi-turn scenarios\n  'Royal Decree': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    if (location === 'hand') {\n      s.major(`Set \"${card.name}\" face-down`);\n      s.add('spells', `(${card.id})` as FieldID);\n     } // else {\n    //   s.major(`Activate face-down' \"${card.name}\"`);\n    //   s.add('spells', card.id);\n    // }\n    update();\n  },\n  'Spell Reproduction': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type === 'Spell', (_, j, k) => {\n      search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Spell', (__, g) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n        const gid = s.remove('graveyard', g);\n        if (location === 'hand') {\n          s.discard([i, j, k].sort(CMP));\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.discard([j, k]); // PRECONDITION: j < k\n        }\n        s.minor(`Add \"${ID.decode(gid).name}\" in the Graveyard to hand`);\n        s.add('hand', gid);\n        s.inc();\n        update();\n      });\n    }, 2);\n  },\n  'Toon Table of Contents': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'deck' && ID.decode(id).name.startsWith('Toon'), (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n      if (j < 0) {\n        s.minor('Fail to find \"Toon\" card in Deck');\n      } else {\n        s.minor(`Add \"${ID.decode(s.deck[j]).name}\" from Deck to hand`);\n        s.add('hand', ID.id(s.deck.splice(j, 1)[0]));\n      }\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Toon World': SPELL(s => {\n    s.minor(`Pay 1000 LP (${s.lifepoints} -> ${s.lifepoints - 1000})`);\n    s.lifepoints -= 1000;\n  }),\n  'Upstart Goblin': SPELL(s => s.draw()),\n};\n\nfunction handler(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  console.log(action, location, id, i); // DEBUG\n  switch (action.type) {\n  case 'play': return onPlay(location, id, i);\n  case 'target': return onTarget(location, id, i);\n  case 'search': return onSearch(location, id, i);\n  }\n}\n\nfunction onPlay(location: Location, id: FieldID, i: number) {\n  const state = STATE.stack[STATE.index].state;\n\n  const card = ID.decode(id);\n  switch (location) {\n  case 'monsters': {\n    if (card.id === Ids.RoyalMagicalLibrary) {\n      if (ID.facedown(id) || ID.data(id) !== 3 || !state.deck.length) return;\n      state.major(`Remove 3 Spell Counters from \"${card.name}\"`);\n      state.mclear(i);\n      state.draw();\n      return update();\n    }\n    return;\n  }\n  case 'spells': {\n    if (card.type === 'Monster' || !card.can(state, location)) return;\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (ID.facedown(id)) {\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    } else if (card.id === Ids.ArchfiendsOath && !ID.data(id)) {\n      ARCHFIEND(state, location, i, card);\n    }\n    return;\n  }\n  case 'hand': {\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (card.id === Ids.ThunderDragon) {\n      const find = (s: State) => {\n        search({location, i}, (loc, sid) => loc === 'deck' && ID.id(sid) === Ids.ThunderDragon, (_, ...targets) => {\n          s.major(`Discard \"${card.name}\"`);\n          s.remove('hand', i);\n          s.add('graveyard', card.id);\n          if (targets.length === 2) {\n            s.minor(`Add 2 \"${card.name}\" from Deck to hand`);\n            // PRECONDITION: targets[0] < targets[1]\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n            s.add('hand', ID.id(s.deck.splice(targets[1] - 1, 1)[0]));\n          } else if (targets[0] >= 0) {\n            s.minor(`Add \"${card.name}\" from Deck to hand`);\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n          } else {\n            s.minor(`Fail to find \"${card.name}\" in Deck`);\n          }\n          s.shuffle();\n          update();\n        }, 2);\n      };\n\n      if (state.monsters.length && state.monsters.length < 5 && !state.summoned) {\n        target({location, i}, loc => loc === 'deck' || loc === 'monsters', (loc, j) => {\n          if (loc === 'deck') {\n            find(state);\n          } else {\n            const t = ID.decode(state.monsters[j]);\n            state.major(`Tribute \"${t.name}\" to Summon \"${self.name}\"`);\n            state.tribute(j, i);\n            if (t.id === Ids.Sangan) {\n              search({location: 'graveyard', i: -1}, SANGAN_TARGET, (_, k) => {\n                if (k < 0) {\n                  state.minor('Fail to find \"Sangan\" target in Deck');\n                } else {\n                  const did = ID.id(state.deck.splice(k, 1)[0]);\n                  state.minor(`Add \"${ID.decode(did).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n                  state.add('hand', did);\n                }\n                state.shuffle();\n                update();\n              });\n            } else {\n              update();\n            }\n          }\n        });\n      } else {\n        find(state);\n      }\n    } else if (card.type === 'Monster') {\n      if (state.monsters.length >= 5 || state.summoned) return;\n      state.remove(location, i);\n      state.major(`Summon \"${card.name}\" in Attack Position`);\n      state.summon(card.id);\n      return update();\n    } else {\n      if (state.spells.length >= 5 || !card.can(state, location)) return;\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    }\n  }\n  }\n}\n\nfunction target(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  if (num === 0) return fn(origin.location);\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['hand' | 'spells' | 'monsters' | 'deck', number][] = [];\n  for (const location of ['hand', 'spells', 'monsters'] as const) {\n    for (const [i, id] of state[location].entries()) {\n      if (location === origin.location && i === origin.i) continue;\n      if (filter(location, id)) targets.push([location, i]);\n    }\n  }\n  if (state.deck.length && filter('deck', state.deck[state.deck.length - 1] as FieldID)) {\n    targets.push(['deck', state.deck.length - 1]);\n  }\n\n  if (num > 0 && targets.length === num) {\n    // PRECONDITION: new Set(targets.map(t => t[0])).size === 1\n    return fn(targets[0][0], ...targets.map(t => t[1]).sort(CMP));\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'target',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n    };\n    update();\n  }\n}\n\nfunction onTarget(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'target') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num < 0) {\n      if (action.targets.length) {\n        // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n        return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n      } else {\n        return action.fn(location);\n      }\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nfunction transform(location: Location, id: FieldID, i: number, isSearch = false) {\n  const {state, action} = STATE.stack[STATE.index];\n  if (action.type === 'play') {\n    if (['banished', 'graveyard', 'deck'].includes(location)) return undefined;\n    const card = ID.decode(id);\n    if (card.id === Ids.ReversalQuiz && !CAN_QUIZ(state)) return 'disabled';\n    const can = card.type === 'Monster'\n      ? (location === 'hand'\n        ? ((!state.summoned && state.monsters.length < 5) ||\n          (card.id === Ids.ThunderDragon && state.deck.length))\n        : (ID.data(id) === 3 && state.deck.length))\n      : (location === 'hand'\n        ? state.spells.length < 5 && card.can(state, location)\n        : ID.facedown(id)\n          ? card.can(state, location as 'spells')\n          : (card.id === Ids.ArchfiendsOath && !ID.data(id) && state.deck.length))\n    return can ? undefined : 'disabled';\n  } else if (action.type === 'target' || action.type === 'search') {\n    if (location === action.origin.location && i === action.origin.i) return 'selected';\n    if (['banished', 'graveyard', 'deck'].includes(location)) return undefined;\n    if (!action.filter(location, id)) return 'disabled';\n    if (action.targets.find(([loc, j]) => loc === location && j === i)) {\n      if (!isSearch && action.type === 'search' && location === action.options[0][0]) {\n        return undefined;\n      }\n      return 'option';\n    }\n    return undefined;\n  }\n  return undefined;\n}\n\nfunction search(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['graveyard' | 'deck', number][] = [];\n  const ids = new Set<FieldID>();\n  for (const location of ['graveyard', 'deck'] as const) {\n    for (const [i, id] of state[location].entries()) {\n      if (location === origin.location && i === origin.i || ids.has(id as FieldID)) continue;\n      if (filter(location, id as FieldID)) {\n        if (num === 1) ids.add(id as FieldID);\n        targets.push([location, i]);\n      }\n    }\n  }\n\n  if (targets.length === 0) {\n    fn('hand', -1); // NOTE: we don't actually have a valid location...\n  } else if (targets.length === 1) {\n    return fn(targets[0][0], targets[0][1]);\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'search',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n      options: targets,\n    };\n    update();\n  }\n}\n\nfunction onSearch(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'search') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num > 1 && action.targets.length) {\n      return action.fn(action.targets[0][0], action.targets[0][1]);\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nupdate();\n\nconst undo = () => {\n  // if (STATE.index) {\n  //   STATE.index--;\n  //   update(false);\n  // }\n};\n\nconst redo = () => {\n  // if (STATE.index < STATE.stack.length - 1) {\n  //   STATE.index++;\n  //   update(false);\n  // }\n};\n\nconst cancel = () => {\n  const action = STATE.stack[STATE.index].action;\n  if ((action.type === 'target' || action.type === 'search') && action.origin.i >= 0) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    update();\n  }\n};\n\nconst CLICKABLE = ['modal', 'modal-overlay', 'card'];\ndocument.addEventListener('click', e => {\n  if (e.target instanceof Element) {\n    for (let p: Element | null = e.target; p; p = p.parentElement) {\n      if (CLICKABLE.some(c => p!.classList.contains(c))) {\n        return true;\n      }\n    }\n  }\n  cancel();\n  e.preventDefault();\n  e.stopPropagation();\n  return false;\n});\ndocument.addEventListener('swiped-left', undo);\ndocument.addEventListener('swiped-right', redo);\ndocument.addEventListener('keydown', e => {\n  const key = e.which || e.keyCode;\n  switch (key) {\n  case 27:\n    cancel();\n    break;\n  case 37:\n    undo();\n    break;\n  case 39:\n    redo();\n    break;\n  default:\n    return true;\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n  return false;\n});\n\n/* eslint-disable @typescript-eslint/no-floating-promises */\nconst pool = workerpool.pool(new URL('./worker.ts', import.meta.url).pathname);\npool.exec('search', [START.toString(), 42, 1e6, false, 0.5]).then(r => {\n  console.log('Path:', r);\n}).catch(e => {\n  console.error(e);\n}).then(() => {\n  pool.terminate();\n});\n","module.exports = require('./helpers/bundle-url').getBundleURL('gcU1a') + \"../\" + require('./helpers/bundle-manifest').resolve(\"4bfU0\");"],"names":["parcelRequire","register","JSON","parse","downX","downY","diffX","diffY","timeDown","startElement","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","e","document","createEvent","initCustomEvent","prototype","Event","addEventListener","target","Date","now","touches","clientX","clientY","timeDiff","eventType","Math","abs","dispatchEvent","$365bb179207d3425$var$NUM","location","hash","slice","search","random","console","log","$365bb179207d3425$var$START","$l7khe","State","create","Random","seed","$365bb179207d3425$var$STATE","stack","state","banished","graveyard","action","type","index","$365bb179207d3425$var$update","mutate","$content","getElementById","firstChild","removeChild","s","trace","length","$iPHaw","createElement","p","ul","last","major","line","startsWith","li","textContent","appendChild","span","innerHTML","replace","_","g","activated","DATA","exec","id","endsWith","track","$365bb179207d3425$var$renderTrace","wrapper","renderState","$365bb179207d3425$var$handler","$365bb179207d3425$var$transform","clone","next","modal","zone","i","options","sort","a","b","localeCompare","card","ID","decode","makeCard","hold","className","overlay","num","targets","fn","once","href","end","scrollTop","scrollHeight","$365bb179207d3425$var$SPELL","remove","name","subType","add","inc","$365bb179207d3425$var$SANGAN_TARGET","atk","$365bb179207d3425$var$RELOAD","spells","max","hand","filter","j","min","before","$365bb179207d3425$var$target","loc","set","ids","offset","entries","push","names","len","draw","$365bb179207d3425$var$CAN_QUIZ","some","Ids","BlackPendant","facedown","$365bb179207d3425$var$QUIZ","known","ReversalQuiz","minor","monsters","map","ConvulsionOfNature","reverse","DifferentDimensionCapsule","banish","deck","lifepoints","$365bb179207d3425$var$SPELLS","$365bb179207d3425$var$search","__","k","gid","discard","turn","splice","shuffle","summon","mclear","data","PrematureBurial","removed","mremove","Reload","self","sangan","Sangan","id1","reveal","CMP","RoyalMagicalLibrary","can","spell","ArchfiendsOath","play","prefix","pop","$365bb179207d3425$var$ARCHFIEND","ThunderDragon","find","sid","summoned","t","tribute","did","$365bb179207d3425$var$onPlay","Error","origin","findIndex","$365bb179207d3425$var$onTarget","$365bb179207d3425$var$onSearch","isSearch","includes","Set","has","$365bb179207d3425$var$undo","$365bb179207d3425$var$redo","$365bb179207d3425$var$cancel","$365bb179207d3425$var$CLICKABLE","Element","parentElement","c","classList","contains","preventDefault","stopPropagation","which","keyCode","$13b0d6eb21343cd3$exports","getBundleURL","resolve","$365bb179207d3425$var$pool","$ahpAG","pool","URL","pathname","toString","then","r","catch","error","terminate"],"version":3,"file":"index.47baf571.js.map"}
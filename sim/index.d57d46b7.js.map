{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-52df62d3559cdc26.js","html/sim/sim.ts","html/sim/swipe.ts","node_modules/@parcel/runtime-js/lib/runtime-adde320768490017.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gcU1a\\\":\\\"index.d57d46b7.js\\\",\\\"4bfU0\\\":\\\"worker.63cf1d09.js\\\",\\\"ftUP3\\\":\\\"index.e8a2610c.js\\\",\\\"77teK\\\":\\\"index.69b6619e.css\\\",\\\"1Lmeo\\\":\\\"index.e0dde710.js\\\"}\"));","import * as workerpool from 'workerpool';\n\nimport {State, Random, ID, Formatter, DeckID, Card, DATA, FieldID, Location, Ids, Option, OPTIONS} from '../../src';\nimport {createElement, renderState, track, makeCard, CMP} from '../common';\n\nimport './swipe';\n\ntype Action = {\n  type: 'play' | 'win' | 'lose';\n} | ActionState & ({\n  type: 'target';\n} | {\n  type: 'search';\n  options: [Location, number][];\n  fallback?: Card;\n});\n\ninterface ActionState {\n  origin: {location: Location; i: number};\n  filter: (location: Location, id: DeckID | FieldID, i: number) => boolean;\n  fn: (location: Location, ...j: number[]) => void;\n  num: number;\n  targets: [Location, number][];\n}\n\ninterface Context {\n  state: State;\n  banished: DeckID[];\n  graveyard: ID[];\n  action: Action;\n}\n\nlet STATE!: {\n  option: Option;\n  num: number;\n  start: State;\n  stack: Context[];\n  index: number;\n};\n\nconst BLUE_EYES = {\n  name: 'Blue-Eyes White Dragon',\n  type: 'Monster',\n  attribute: 'Light',\n  level: 8,\n  atk: 3000,\n  def: 2500,\n  text: '<i>Dragon – This legendary dragon is a powerful engine of destruction. Virtually invincible, very few have faced this awesome creature and lived to tell the tale.</i>',\n};\nfunction update(mutate = true) {\n  const $content = document.getElementById('content')!;\n  while ($content.firstChild) $content.removeChild($content.firstChild);\n\n  const {state: s, banished, graveyard, action} = STATE.stack[STATE.index];\n  const trace = renderTrace(s, banished, graveyard, mutate);\n\n  const wrapper = createElement('div', 'wrapper');\n  wrapper.appendChild(renderState(s, banished, graveyard, handler, transform, true, `${STATE.option}${STATE.num}`));\n\n  if (action.type === 'win' || (action.type === 'play' && !s.clone().next().length)) {\n    const modal = createElement('div', 'modal', 'end', action.type === 'win' ? 'win' : 'lose');\n    const a = createElement('a');\n    a.href = `../trace?${encodeURIComponent(STATE.start.encode())}`;\n    const end = createElement('h1');\n    end.textContent = `You ${action.type === 'win' ? 'Win' : 'Lose'}`;\n    a.appendChild(end);\n    modal.appendChild(a);\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    wrapper.appendChild(overlay);\n\n    // TODO: add restart\n  } else if (action.type === 'search') {\n    const modal = createElement('div', 'modal');\n    const zone = createElement('div', 'zone', 'search');\n\n    if (action.fallback) {\n      zone.appendChild(makeCard(action.fallback, () => {\n        STATE.stack[STATE.index].action = {type: 'play'};\n        action.fn('deck', -1);\n        update();\n      }, {hold: true}));\n    }\n    for (const [location, i] of action.options) {\n      const id = s[location][i] as FieldID;\n      const card = ID.decode(id);\n      zone.appendChild(makeCard(card, () => handler(location, id, i), {\n        hold: true,\n        className: transform(location, id, i, true),\n      }));\n    }\n\n    modal.appendChild(zone);\n    wrapper.appendChild(modal);\n\n    const overlay = createElement('div', 'modal-overlay');\n\n    overlay.addEventListener('click', () => {\n      if (action.num < 0) {\n        const {unique, remaining} = uniqueness();\n        console.log(unique, remaining);\n        if (unique.size === 1) {\n          STATE.stack[STATE.index].action = {type: 'play'};\n          // PRECONDITION: all targets have the same location\n          const loc = (action.targets.length ? action.targets : remaining)[0][0];\n          return action.fn(loc, ...[...action.targets.map(t => t[1]), ...remaining.map(t => t[1])]);\n        }\n        return;\n      }\n      STATE.stack[STATE.index].action = {type: 'play'};\n      if (action.num > 1 && action.targets.length) {\n        return action.fn(action.targets[0][0], action.targets[0][1]);\n      } else {\n        update();\n      }\n    }, {once: true});\n\n    wrapper.appendChild(overlay);\n  }\n\n  $content.appendChild(wrapper);\n  if (trace) {\n    $content.appendChild(trace);\n    trace.scrollTop = trace.scrollHeight;\n  }\n}\n\nfunction transform(location: Location, id: FieldID, i: number, isSearch = false) {\n  const {state, action} = STATE.stack[STATE.index];\n  const pile = (['banished', 'graveyard', 'deck'].includes(location));\n  if (action.type === 'play') {\n    if (pile) return undefined;\n    const card = ID.decode(id);\n    if (card.id === Ids.ReversalQuiz && !CAN_QUIZ(state)) return 'disabled';\n    const can = card.type === 'Monster'\n      ? (location === 'hand'\n        ? ((!state.summoned && state.monsters.length < 5) ||\n          (card.id === Ids.ThunderDragon && state.deck.length))\n        : (ID.get(id) === 3 && state.deck.length))\n      : (location === 'hand'\n        ? state.spells.length < 5 && card.can(state, location)\n        : ID.facedown(id)\n          ? card.can(state, location as 'spells')\n          : (card.id === Ids.ArchfiendsOath && !ID.get(id) && state.deck.length));\n    return can ? undefined : 'disabled';\n  } else if (action.type === 'target' || action.type === 'search') {\n    if (location === action.origin.location && i === action.origin.i) return 'selected';\n    if (!action.filter(location, id, i)) return pile ? undefined : 'disabled';\n    if (action.targets.find(([loc, j]) => loc === location && j === i)) {\n      if (!isSearch && action.type === 'search' && location === action.options[0][0]) {\n        return undefined;\n      }\n      return 'option';\n    }\n    return undefined;\n  }\n  return undefined;\n}\n\nfunction renderTrace(s: State, banished: DeckID[], graveyard: ID[], mutate = true) {\n  if (!s.trace?.length) return undefined;\n\n  const trace = createElement('div', 'trace');\n  let p = createElement('p');\n  let ul = createElement('ul');\n\n  let last = '';\n  let major = 0;\n  for (const line of s.trace) {\n    const minor = line.startsWith('  ');\n    if (!minor) {\n      if (major) {\n        p.appendChild(ul);\n        ul = createElement('ul');\n        trace.appendChild(p);\n        p = createElement('p');\n      }\n      last = line;\n      major++;\n\n      const span = createElement('span');\n      span.innerHTML = line.replace(/\"(.*?)\"/g, (_, g: string) => `\"<b>${g}</b>\"`);\n      p.appendChild(span);\n    } else {\n      const li = createElement('li');\n      li.textContent = line;\n      ul.appendChild(li);\n    }\n  }\n\n  p.appendChild(ul);\n  ul = createElement('ul');\n  trace.appendChild(p);\n\n  if (last && mutate) {\n    const activated = last.startsWith('Activate')\n      ? DATA[/\"(.*?)\"/.exec(last)![1]].id\n      : (last.startsWith('Set') && !last.endsWith('face-down'))\n        ? DATA[/then activate(?: face-down)? \"(.*?)\"/.exec(last)![1]].id\n        : undefined;\n    track(s.banished, banished, activated);\n    track(s.graveyard, graveyard, activated);\n  }\n\n  return trace;\n}\n\nfunction SPELL(fn?: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    if (card.type === 'Spell' && card.subType === 'Continuous') {\n      s.add('spells', card.id);\n    } else {\n      s.add('graveyard', card.id);\n    }\n    if (fn) fn(s);\n    s.inc();\n    update();\n  };\n}\n\nfunction ARCHFIEND(s: State, location: 'hand' | 'spells', i: number, card: Card) {\n  const play = location === 'hand' || ID.facedown(s[location][i]);\n  const prefix = play\n    ? `Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\" then pay`\n    : 'Pay';\n  const major = `${prefix} 500 LP (${s.lifepoints} -> ${s.lifepoints - 500}) to activate effect of \"${card.name}\"`;\n  if (s.known()) {\n    s.major(major);\n    s.lifepoints -= 500;\n\n    s.minor(`Declare \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n    s.draw();\n\n    s.remove(location, i);\n    s.add('spells', ID.set(card.id, 1));\n    if (play) s.inc();\n    update();\n  } else {\n    search({location, i}, loc => loc === 'deck', (_, j) => {\n      s.major(major);\n      s.lifepoints -= 500;\n\n      const top = ID.decode(s.deck[s.deck.length - 1]);\n      if (top.id === s.deck[j]) {\n        s.minor(`Declare \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n        s.draw();\n      } else {\n        s.minor(`Declare \"${j < 0 ? 'Blue-Eyes White Dragon' : ID.decode(s.deck[j]).name}\"`);\n        const reveal = ID.decode(s.deck.pop()!);\n        s.minor(`Excavate \"${reveal.name}\"`);\n        s.add('graveyard', reveal.id);\n      }\n\n      s.remove(location, i);\n      s.add('spells', ID.set(card.id, 1));\n      if (play) s.inc();\n      update();\n    }, 1, BLUE_EYES as Card);\n  }\n}\n\nfunction SANGAN_TARGET(location: Location, id: DeckID | FieldID) {\n  const card = ID.decode(id);\n  return location === 'deck' && card.type === 'Monster' && card.atk <= 1500;\n}\n\nfunction RELOAD(fn: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    const spells = s.spells.length;\n    let max: number;\n    if (location === 'hand') {\n      const hand = s.hand.filter((id, j) => i !== j && ID.decode(id).type !== 'Monster');\n      max = Math.min(5 - spells - 1, hand.length, s.hand.length - 2);\n    } else {\n      const hand = s.hand.filter(id => ID.decode(id).type !== 'Monster');\n      max = Math.min(5 - spells, hand.length, s.hand.length - 1);\n    }\n\n    const before = s.hand.slice();\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type !== 'Monster', (_, ...set) => {\n      // NOTE: if location === 'hand' we need to adjust the offsets of any cards we set!\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n\n      const ids = [];\n      for (const [offset, j] of set.entries()) {\n        const id = before[j];\n        ids.push(id);\n        s.add('spells', ID.toggle(id) as FieldID);\n        s.remove('hand', j - offset - (location === 'hand' && i < j ? 1 : 0));\n      }\n      if (ids.length) {\n        s.major(`Set ${Formatter.names(ids)} face-down then activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      } else {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      }\n      const len = s.hand.length;\n      fn(s);\n      s.hand = [];\n      s.draw(len);\n      s.inc();\n      update();\n    }, -max);\n  };\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction CAN_QUIZ(s: State) {\n  // NOTE: we have to clone for the termination check because it mutates the final state\n  if (!s.clone().end(false)) return false;\n  // The lookahead parameter only covers the A Feather of the Phoenix, end() will still return true\n  // if Black Pendant isn't actually equipped yet (but is equippable).\n  return s.spells.some(id => ID.id(id) === Ids.BlackPendant && !ID.facedown(id));\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction QUIZ(s: State, location: 'hand' | 'spells') {\n  if (!CAN_QUIZ(s)) return;\n\n  const known = s.known(true)!;\n  // NOTE: We already checked that Black Pendant is equipped\n  s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"Reversal Quiz\"`);\n  // Filter out Reversal Quiz from the messages about what gets sent to the Graveyard\n  const hand = s.hand.filter(id => ID.id(id) !== Ids.ReversalQuiz);\n  if (hand.length) s.minor(`Send ${Formatter.names(hand)} from hand to Graveyard`);\n  s.graveyard.push(...hand);\n  s.hand = [];\n\n  const ids = s.monsters.map(id => ID.id(id));\n  s.graveyard.push(...ids);\n  s.monsters = [];\n\n  for (const id of s.spells) {\n    const card = ID.decode(id);\n    if (card.id !== Ids.ReversalQuiz) {\n      continue;\n    } else if (!ID.facedown(id)) {\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.graveyard.push(card.id);\n    ids.push(card.id);\n  }\n  s.spells = [];\n  s.graveyard.sort(CMP);\n  if (ids.length) s.minor(`Send ${Formatter.names(ids)} from field to Graveyard`);\n\n  // Reversal Quiz isn't actually in the Graveyard at the point when the game is won\n  s.add('spells', Ids.ReversalQuiz);\n  // TODO: consider visually displaying the revealed card?\n  s.minor(`Call \"${ID.decode(known).type}\", reveal \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n  s.major(`After exchanging Life Points, opponent has ${s.lifepoints} LP and then takes 500 damage from \"Black Pendant\" being sent from the field to the Graveyard`);\n\n  STATE.stack[STATE.index].action = {type: 'win'};\n  update();\n}\n\nconst SPELLS: { [name: string]: any } = {\n  'A Feather of the Phoenix': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'hand', (_, j) => {\n      search({location, i}, loc => loc === 'graveyard', (__, k) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\"`);\n        const gid = s.remove('graveyard', k);\n        s.minor(`Return \"${ID.decode(gid).name}\" in the Graveyard to the top of the Deck`);\n        if (location === 'hand') {\n          s.discard(i < j ? [i, j] : [j, i]);\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.add('graveyard', s.remove('hand', j));\n        }\n        s.deck.push(ID.toggle(gid) as DeckID);\n        s.inc();\n        update();\n      });\n    });\n  },\n  'Archfiend\\'s Oath': SPELL(),\n  'Black Pendant': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'monsters', (_, j) => {\n      s.remove(location, i);\n      s.major(`${location === 'spells' ? `Flip face-down \"${card.name}\" and equip` : `Equip \"${card.name}\"`} to \"${ID.decode(s.monsters[j]).name}\"`);\n      s.add('spells', ID.set(card.id, j));\n      s.inc();\n      update();\n    });\n  },\n  'Card Destruction': RELOAD(s => {\n    for (const id of s.hand) {\n      s.add('graveyard', id);\n    }\n    s.minor(`Discard ${Formatter.names(s.hand)}`);\n  }),\n  'Card Shuffle': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    const reuse = location === 'spells' && !ID.facedown(s[location][i]);\n    if (reuse) {\n      s.major(`Activate effect of \"${card.name}\"`);\n    } else {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    }\n\n    s.remove(location, i);\n    s.add('spells', ID.set(card.id, 1));\n    s.minor(`Pay 300 LP (${s.lifepoints} -> ${s.lifepoints - 300})`);\n    s.lifepoints -= 300;\n    s.shuffle();\n\n    if (!reuse) s.inc();\n    update();\n  },\n  'Convulsion of Nature': SPELL(s => s.reverse()),\n  'Different Dimension Capsule': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, loc => loc === 'deck', (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('spells', card.id);\n      s.minor(`Banish ${ID.decode(s.deck[j]).name} from the deck face-down`);\n      s.add('banished', ID.toggle(ID.id(s.deck.splice(j, 1)[0])) as DeckID);\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Giant Trunade': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('hand', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Return ${Formatter.names(s.spells)} to hand`);\n    s.spells = [];\n  }),\n  'Graceful Charity': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    s.remove(location, i);\n    i = s.add('spells', card.id);\n    s.draw(3);\n    update(); // FIXME bad partial state\n    // NOTE: we deliberately set the wrong index for the card so that it can't be cancelled\n    target({location: 'spells', i: -1}, loc => loc === 'hand', (_, j, k) => {\n      s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n      s.discard([j, k]); // PRECONDITION: j < k\n      s.remove('spells', i);\n      s.add('graveyard', card.id);\n      s.inc();\n      update();\n    }, 2);\n  },\n  'Level Limit - Area B': SPELL(),\n  'Pot of Greed': SPELL(s => s.draw(2)),\n  'Premature Burial': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Monster', (_, j) => {\n      s.major(`Pay 800 LP (${s.lifepoints} -> ${s.lifepoints - 800}) to activate effect of \"${card.name}\"`);\n      s.minor(`Special Summon \"${ID.decode(s.graveyard[j]).name}\" in Attack Position from Graveyard`);\n      s.lifepoints -= 800;\n      const gid = s.remove('graveyard', j);\n      const zone = s.summon(gid, true);\n      s.remove(location, i);\n      s.add('spells', ID.set(card.id, zone));\n      s.inc(zone);\n      update();\n    });\n  },\n  'Heavy Storm': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('graveyard', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.BlackPendant) {\n        s.mset(ID.get(id));\n      } else if (card.id === Ids.PrematureBurial) {\n        const removed = s.mremove(ID.get(id));\n        s.add('graveyard', removed.id);\n        s.minor(`Sending \"${ID.decode(removed.id).name}\" to the Graveyard after its equipped \"${ID.decode(id).name}\" was destroyed`);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Send ${Formatter.names(s.spells)} to Graveyard`);\n    s.spells = [];\n  }),\n  'Reload': RELOAD(s => {\n    s.deck.push(...s.hand);\n    s.minor(`Return ${Formatter.names(s.hand)} to Deck`);\n    s.shuffle();\n  }),\n  'Reversal Quiz': (s: State, location: 'hand' | 'spells', i: number, self: Card) => {\n    let sangan = false;\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${self.name}\"`);\n    if (s.hand.length) {\n      s.minor(`Send ${Formatter.names(s.hand)} from hand to Graveyard`);\n    }\n    if (s.monsters.length || s.spells.length) {\n      s.minor(`Send ${Formatter.names([...s.monsters, ...s.spells])} from field to Graveyard`);\n    }\n\n    s.graveyard.push(...s.hand);\n    s.hand = [];\n    for (const id of s.monsters) {\n      const card = ID.decode(id);\n      if (card.id === Ids.Sangan) sangan = true;\n      s.graveyard.push(card.id);\n    }\n    s.monsters = [];\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      if (!ID.facedown(id)) {\n        if (card.id === Ids.ConvulsionOfNature) {\n          s.reverse(true);\n        } else if (card.id === Ids.DifferentDimensionCapsule) {\n          s.banish();\n        }\n      }\n      s.graveyard.push(card.id);\n    }\n    s.spells = [];\n    s.graveyard.sort(CMP);\n\n    const reveal = s.deck[s.deck.length - 1];\n    if (!ID.known(reveal)) s.deck[s.deck.length - 1] = ID.toggle(reveal) as DeckID;\n    // BUG: we are deliberately peeking here to ensure we call it wrong!\n    const card = ID.decode(reveal);\n    s.minor(`Call \"${card.type === 'Trap' ? 'Monster' : 'Trap'}\", reveal \"${card.name}\"`);\n    if (!sangan) return update();\n\n    search({location, i}, SANGAN_TARGET, (_, j) => {\n      if (j < 0) {\n        s.minor('Fail to find \"Sangan\" target in Deck');\n      } else {\n        const id = ID.id(s.deck.splice(j, 1)[0]);\n        s.minor(`Add \"${ID.decode(id).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n        s.add('hand', id);\n      }\n      s.shuffle();\n      update();\n    });\n  },\n  // TODO: handle flipping Royal Decree in multi-turn scenarios\n  'Royal Decree': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    if (location === 'hand') {\n      s.major(`Set \"${card.name}\" face-down`);\n      s.add('spells', ID.toggle(card.id) as FieldID);\n    } // else {\n    //   s.major(`Activate face-down' \"${card.name}\"`);\n    //   s.add('spells', card.id);\n    // }\n    update();\n  },\n  'Spell Reproduction': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type === 'Spell', (_, j, k) => {\n      search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Spell', (__, g) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n        const gid = s.remove('graveyard', g);\n        if (location === 'hand') {\n          s.discard([i, j, k].sort(CMP));\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.discard([j, k]); // PRECONDITION: j < k\n        }\n        s.minor(`Add \"${ID.decode(gid).name}\" in the Graveyard to hand`);\n        s.add('hand', gid);\n        s.inc();\n        update();\n      });\n    }, 2);\n  },\n  'Spellbook Organization': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i: -1}, (loc, _, j) => loc === 'deck' && j >= s.deck.length - 3, (_, j, k, l) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n      s.minor(`Reveal ${Formatter.names(s.deck.slice(s.deck.length - 3).reverse())}`);\n\n      const ordered = [s.deck[j], s.deck[k], s.deck[l]];\n      s.minor(`Return ${Formatter.names(ordered)} to the Deck`);\n      for (let m = 0; m < ordered.length; m++) {\n        s.deck[s.deck.length - 1 - m] =\n          ID.facedown(ordered[m]) ? ordered[m] : ID.toggle(ordered[m]) as DeckID;\n      }\n\n      s.inc();\n      update();\n    }, -3);\n  },\n  'Toon Table of Contents': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'deck' && ID.decode(id).name.startsWith('Toon'), (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n      if (j < 0) {\n        s.minor('Fail to find \"Toon\" card in Deck');\n      } else {\n        s.minor(`Add \"${ID.decode(s.deck[j]).name}\" from Deck to hand`);\n        s.add('hand', ID.id(s.deck.splice(j, 1)[0]));\n      }\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Toon World': SPELL(s => {\n    s.minor(`Pay 1000 LP (${s.lifepoints} -> ${s.lifepoints - 1000})`);\n    s.lifepoints -= 1000;\n  }),\n  'Upstart Goblin': SPELL(s => s.draw()),\n};\n\nfunction handler(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  console.log(action, location, id, i); // Formatter\n  switch (action.type) {\n  case 'play': return onPlay(location, id, i);\n  case 'target': return onTarget(location, id, i);\n  case 'search': return onSearch(location, id, i);\n  }\n}\n\nfunction onPlay(location: Location, id: FieldID, i: number) {\n  const state = STATE.stack[STATE.index].state;\n\n  const card = ID.decode(id);\n  switch (location) {\n  case 'monsters': {\n    if (card.id === Ids.RoyalMagicalLibrary) {\n      if (ID.facedown(id) || ID.get(id) !== 3 || !state.deck.length) return;\n      state.major(`Remove 3 Spell Counters from \"${card.name}\"`);\n      state.mset(i);\n      state.draw();\n      return update();\n    }\n    return;\n  }\n  case 'spells': {\n    if (card.type === 'Monster' || !card.can(state, location)) return;\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (ID.facedown(id)) {\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    } else if (card.id === Ids.ArchfiendsOath && !ID.get(id)) {\n      ARCHFIEND(state, location, i, card);\n    } else if (card.id === Ids.CardShuffle && !ID.get(id)) {\n      SPELLS[card.name]!(state, location, i, card);\n    }\n    return;\n  }\n  case 'hand': {\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (card.id === Ids.ThunderDragon) {\n      const find = (s: State) => {\n        search({location, i}, (loc, sid) => loc === 'deck' && ID.id(sid) === Ids.ThunderDragon, (_, ...targets) => {\n          s.major(`Discard \"${card.name}\"`);\n          s.remove('hand', i);\n          s.add('graveyard', card.id);\n          if (targets.length === 2) {\n            s.minor(`Add 2 \"${card.name}\" from Deck to hand`);\n            // PRECONDITION: targets[0] < targets[1]\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n            s.add('hand', ID.id(s.deck.splice(targets[1] - 1, 1)[0]));\n          } else if (targets[0] >= 0) {\n            s.minor(`Add \"${card.name}\" from Deck to hand`);\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n          } else {\n            s.minor(`Fail to find \"${card.name}\" in Deck`);\n          }\n          s.shuffle();\n          update();\n        }, 2);\n      };\n\n      if (state.monsters.length && state.monsters.length < 5 && !state.summoned) {\n        target({location, i}, loc => loc === 'deck' || loc === 'monsters', (loc, j) => {\n          if (loc === 'deck') {\n            find(state);\n          } else {\n            const t = ID.decode(state.monsters[j]);\n            state.major(`Tribute \"${t.name}\" to Summon \"${self.name}\"`);\n            state.tribute(j, i);\n            if (t.id === Ids.Sangan) {\n              search({location: 'graveyard', i: -1}, SANGAN_TARGET, (_, k) => {\n                if (k < 0) {\n                  state.minor('Fail to find \"Sangan\" target in Deck');\n                } else {\n                  const did = ID.id(state.deck.splice(k, 1)[0]);\n                  state.minor(`Add \"${ID.decode(did).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n                  state.add('hand', did);\n                }\n                state.shuffle();\n                update();\n              });\n            } else {\n              update();\n            }\n          }\n        });\n      } else {\n        find(state);\n      }\n    } else if (card.type === 'Monster') {\n      if (state.monsters.length >= 5 || state.summoned) return;\n      state.remove(location, i);\n      state.major(`Summon \"${card.name}\" in Attack Position`);\n      state.summon(card.id);\n      return update();\n    } else {\n      if (state.spells.length >= 5 || !card.can(state, location)) return;\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    }\n  }\n  }\n}\n\nfunction target(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: DeckID | FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  if (num === 0) return fn(origin.location);\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['hand' | 'spells' | 'monsters' | 'deck', number][] = [];\n  for (const location of ['hand', 'spells', 'monsters'] as const) {\n    for (const [i, id] of state[location].entries()) {\n      if (location === origin.location && i === origin.i) continue;\n      if (filter(location, id)) targets.push([location, i]);\n    }\n  }\n  if (state.deck.length && filter('deck', state.deck[state.deck.length - 1] as FieldID)) {\n    targets.push(['deck', state.deck.length - 1]);\n  }\n\n  if (num > 0 && targets.length === num) {\n    // PRECONDITION: new Set(targets.map(t => t[0])).size === 1\n    return fn(targets[0][0], ...targets.map(t => t[1]).sort(CMP));\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'target',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n    };\n    update();\n  }\n}\n\nfunction onTarget(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'target') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num < 0) {\n      if (action.targets.length) {\n        // PRECONDITION: all targets have the same location\n        return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n      } else {\n        return action.fn(location);\n      }\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id, i)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: all targets have the same location\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nfunction search(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: DeckID | FieldID, i: number) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1,\n  fallback?: Card,\n) {\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['graveyard' | 'deck', number][] = [];\n  const ids = new Set<ID>();\n  for (const location of ['graveyard', 'deck'] as const) {\n    for (const [i, did] of state[location].entries()) {\n      const id = ID.id(did);\n      if (location === origin.location && i === origin.i || ids.has(id)) continue;\n      if (filter(location, id, i)) {\n        if (num === 1) ids.add(id);\n        targets.push([location, i]);\n      }\n    }\n  }\n\n  if (targets.length === 0) {\n    fn('hand', -1); // NOTE: we don't actually have a valid location...\n  } else if (targets.length === 1) {\n    return fn(targets[0][0], targets[0][1]);\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'search',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n      options: num < 0 ? targets.reverse() : targets.sort((a, b) =>\n        ID.decode(state[a[0]][a[1]]).name.localeCompare(ID.decode(state[b[0]][b[1]]).name)),\n      fallback,\n    };\n    update();\n  }\n}\n\nfunction onSearch(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'search') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num > 1 && action.targets.length) {\n      return action.fn(action.targets[0][0], action.targets[0][1]);\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id, i)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: all targets have the same location\n      const targets = action.targets.map(t => t[1]);\n      return action.fn(action.targets[0][0], ...(action.num > 0 ? targets.sort(CMP) : targets));\n    } else if (action.num < 0) {\n      const {unique, remaining} = uniqueness();\n      if (unique.size === 1) {\n        STATE.stack[STATE.index].action = {type: 'play'};\n        // PRECONDITION: all targets have the same location\n        const loc = (action.targets.length ? action.targets : remaining)[0][0];\n        return action.fn(loc, ...[...action.targets.map(t => t[1]), ...remaining.map(t => t[1])]);\n      } else {\n        update();\n      }\n    } else {\n      update();\n    }\n  }\n}\n\nfunction uniqueness() {\n  const {state, action} = STATE.stack[STATE.index];\n  if (action.type !== 'search') throw new Error(`Bad action type: ${action.type}`);\n  const remaining = action.options.slice();\n  for (const [loc, j] of action.targets) {\n    remaining.splice(remaining.findIndex(([l, k]) => l === loc && k === j), 1);\n  }\n  const unique = new Set(remaining.map(([loc, j]) => ID.id(state[loc][j])));\n  return {remaining, unique};\n}\n\nfunction initialize(option: Option, num: number) {\n  console.log('Seed:', num);\n\n  const state = State.create(State.decklist(option), new Random(Random.seed(num)), true);\n\n  STATE = {\n    option,\n    num,\n    start: state.clone(),\n    stack: [{\n      state,\n      banished: [],\n      graveyard: [],\n      action: {type: 'play'},\n    } as Context],\n    index: 0,\n  };\n\n  const undo = () => {\n    // if (STATE.index) {\n    //   STATE.index--;\n    //   update(false);\n    // }\n  };\n\n  const redo = () => {\n    // if (STATE.index < STATE.stack.length - 1) {\n    //   STATE.index++;\n    //   update(false);\n    // }\n  };\n\n  const cancel = () => {\n    const action = STATE.stack[STATE.index].action;\n    if (action.type === 'target' || action.type === 'search') {\n      if (action.origin.i >= 0) {\n        STATE.stack[STATE.index].action = {type: 'play'};\n      } else {\n        (STATE.stack[STATE.index].action as ActionState).targets = [];\n      }\n      update();\n    }\n  };\n\n  const CLICKABLE = ['modal', 'modal-overlay', 'card'];\n  document.addEventListener('click', e => {\n    if (e.target instanceof Element) {\n      for (let p: Element | null = e.target; p; p = p.parentElement) {\n        if (CLICKABLE.some(c => p!.classList.contains(c))) {\n          return true;\n        }\n      }\n    }\n    cancel();\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n  });\n  document.addEventListener('swiped-left', undo);\n  document.addEventListener('swiped-right', redo);\n  document.addEventListener('keydown', e => {\n    const key = e.which || e.keyCode;\n    switch (key) {\n    case 27:\n      cancel();\n      break;\n    case 37:\n      undo();\n      break;\n    case 39:\n      redo();\n      break;\n    default:\n      return true;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n  });\n\n  /* eslint-disable @typescript-eslint/no-floating-promises */\n  const pool = workerpool.pool(new URL('./worker.ts', import.meta.url).pathname);\n  pool.exec('search', [STATE.start.encode(), 42, 1e6, false, 0.5]).then(r => {\n    console.log('Path:', r);\n  }).catch(e => {\n    console.error(e);\n  }).then(() => {\n    pool.terminate();\n  });\n\n  update();\n}\n\nfunction start() {\n  const arg = (window.location.hash || window.location.search).slice(1);\n  if (OPTIONS.includes(arg[0] as Option)) {\n    const n = arg.slice(1);\n    if (n && !isNaN(+n)) return initialize(arg[0] as Option, +n);\n  }\n  const num = arg && !isNaN(+arg) ? +arg : ~~(Math.random() * (2 ** 31 - 1));\n\n  const $content = document.getElementById('content')!;\n  while ($content.firstChild) $content.removeChild($content.firstChild);\n  const zone = createElement('div', 'zone', 'start');\n  for (const id of OPTIONS) {\n    const card = ID.decode(Formatter.unhuman(id));\n    zone.appendChild(makeCard(card, () => {\n      initialize(id, num);\n    }, {hold: true}));\n  }\n  $content.appendChild(zone);\n}\n\nstart();\n","/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/swiped-events */\n(() => {\n  'use strict';\n\n  const THRESHOLD = 100;\n  const TIMEOUT = 500;\n\n  let downX: number | null = null;\n  let downY: number | null = null;\n  let diffX = 0;\n  let diffY = 0;\n  let timeDown: number | null = null;\n  let startElement: EventTarget | null = null;\n\n  if (typeof window.CustomEvent !== 'function') {\n    // @ts-ignore\n    window.CustomEvent = (event: string, params: any) => {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      const e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return e;\n    };\n\n    // @ts-ignore\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  function handleTouchEnd(e: TouchEvent) {\n    if (startElement !== e.target) return;\n\n    const timeDiff = Date.now() - timeDown!;\n    let eventType = '';\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (Math.abs(diffX) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffX > 0) {\n          eventType = 'swiped-left';\n        } else {\n          eventType = 'swiped-right';\n        }\n      }\n    } else {\n      if (Math.abs(diffY) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffY > 0) {\n          eventType = 'swiped-up';\n        } else {\n          eventType = 'swiped-down';\n        }\n      }\n    }\n\n    if (eventType) {\n      startElement!.dispatchEvent(new CustomEvent(eventType, {bubbles: true, cancelable: true}));\n    }\n\n    downX = null;\n    downY = null;\n    timeDown = null;\n  }\n\n  function handleTouchStart(e: TouchEvent) {\n    startElement = e.target;\n\n    timeDown = Date.now();\n    downX = e.touches[0].clientX;\n    downY = e.touches[0].clientY;\n    diffX = 0;\n    diffY = 0;\n  }\n\n  function handleTouchMove(e: TouchEvent) {\n    if (!downX || !downY) return;\n    diffX = downX - e.touches[0].clientX;\n    diffY = downY - e.touches[0].clientY;\n  }\n\n  document.addEventListener('touchstart', handleTouchStart, false);\n  document.addEventListener('touchmove', handleTouchMove, false);\n  document.addEventListener('touchend', handleTouchEnd, false);\n})();\n","module.exports = require('./helpers/bundle-url').getBundleURL('gcU1a') + \"../\" + require('./helpers/bundle-manifest').resolve(\"4bfU0\");"],"names":["parcelRequire","register","JSON","parse","$365bb179207d3425$var$STATE","downX","downY","diffX","diffY","timeDown","startElement","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","e","document","createEvent","initCustomEvent","prototype","Event","addEventListener","target","Date","now","touches","clientX","clientY","timeDiff","eventType","Math","abs","dispatchEvent","$365bb179207d3425$var$BLUE_EYES","name","type","attribute","level","atk","def","text","$365bb179207d3425$var$update","mutate","$content","getElementById","firstChild","removeChild","state","s","banished","graveyard","action","stack","index","trace","length","$iPHaw","createElement","p","ul","last","major","line","startsWith","li","textContent","appendChild","span","innerHTML","replace","_","g","activated","$l7khe","DATA","exec","id","endsWith","track","$365bb179207d3425$var$renderTrace","wrapper","renderState","$365bb179207d3425$var$handler","$365bb179207d3425$var$transform","option","num","clone","next","modal","a","href","encodeURIComponent","start","encode","end","overlay","zone","fallback","makeCard","fn","hold","location","i","options","card","ID","decode","className","unique","remaining","$365bb179207d3425$var$uniqueness","console","log","size","loc","targets","map","t","once","scrollTop","scrollHeight","isSearch","pile","includes","Ids","ReversalQuiz","$365bb179207d3425$var$CAN_QUIZ","summoned","monsters","ThunderDragon","deck","get","spells","can","facedown","ArchfiendsOath","origin","filter","find","j","$365bb179207d3425$var$SPELL","remove","subType","add","inc","$365bb179207d3425$var$SANGAN_TARGET","$365bb179207d3425$var$RELOAD","max","hand","min","before","slice","$365bb179207d3425$var$target","set","ids","offset","entries","push","toggle","Formatter","names","len","draw","some","BlackPendant","$365bb179207d3425$var$QUIZ","known","minor","ConvulsionOfNature","reverse","DifferentDimensionCapsule","banish","sort","CMP","lifepoints","$365bb179207d3425$var$SPELLS","$365bb179207d3425$var$search","__","k","gid","discard","reuse","shuffle","splice","summon","mset","PrematureBurial","removed","mremove","Reload","self","sangan","Sangan","id1","reveal","l","ordered","m","RoyalMagicalLibrary","spell","CardShuffle","play","pop","$365bb179207d3425$var$ARCHFIEND","sid","tribute","did","$365bb179207d3425$var$onPlay","Error","findIndex","$365bb179207d3425$var$onTarget","$365bb179207d3425$var$onSearch","Set","has","b","localeCompare","$365bb179207d3425$var$initialize","State","create","decklist","Random","seed","undo","redo","cancel","CLICKABLE","Element","parentElement","c","classList","contains","preventDefault","stopPropagation","which","keyCode","pool","$ahpAG","URL","$13b0d6eb21343cd3$exports","pathname","then","r","catch","error","terminate","getBundleURL","resolve","arg","hash","search","OPTIONS","n","isNaN","random","unhuman","$365bb179207d3425$var$start"],"version":3,"file":"index.d57d46b7.js.map"}
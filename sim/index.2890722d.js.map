{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-52df62d3559cdc26.js","html/sim/swipe.ts","html/sim/sim.ts","node_modules/@parcel/runtime-js/lib/runtime-adde320768490017.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gcU1a\\\":\\\"index.2890722d.js\\\",\\\"4bfU0\\\":\\\"worker.f8fc40e1.js\\\",\\\"ftUP3\\\":\\\"index.57cffd17.js\\\",\\\"77teK\\\":\\\"index.69b6619e.css\\\",\\\"1Lmeo\\\":\\\"index.e16936f3.js\\\"}\"));","/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/swiped-events */\n(() => {\n  'use strict';\n\n  const THRESHOLD = 100;\n  const TIMEOUT = 500;\n\n  let downX: number | null = null;\n  let downY: number | null = null;\n  let diffX = 0;\n  let diffY = 0;\n  let timeDown: number | null = null;\n  let startElement: EventTarget | null = null;\n\n  if (typeof window.CustomEvent !== 'function') {\n    // @ts-ignore\n    window.CustomEvent = (event: string, params: any) => {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      const e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return e;\n    };\n\n    // @ts-ignore\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  function handleTouchEnd(e: TouchEvent) {\n    if (startElement !== e.target) return;\n\n    const timeDiff = Date.now() - timeDown!;\n    let eventType = '';\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (Math.abs(diffX) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffX > 0) {\n          eventType = 'swiped-left';\n        } else {\n          eventType = 'swiped-right';\n        }\n      }\n    } else {\n      if (Math.abs(diffY) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffY > 0) {\n          eventType = 'swiped-up';\n        } else {\n          eventType = 'swiped-down';\n        }\n      }\n    }\n\n    if (eventType) {\n      startElement!.dispatchEvent(new CustomEvent(eventType, {bubbles: true, cancelable: true}));\n    }\n\n    downX = null;\n    downY = null;\n    timeDown = null;\n  }\n\n  function handleTouchStart(e: TouchEvent) {\n    startElement = e.target;\n\n    timeDown = Date.now();\n    downX = e.touches[0].clientX;\n    downY = e.touches[0].clientY;\n    diffX = 0;\n    diffY = 0;\n  }\n\n  function handleTouchMove(e: TouchEvent) {\n    if (!downX || !downY) return;\n    diffX = downX - e.touches[0].clientX;\n    diffY = downY - e.touches[0].clientY;\n  }\n\n  document.addEventListener('touchstart', handleTouchStart, false);\n  document.addEventListener('touchmove', handleTouchMove, false);\n  document.addEventListener('touchend', handleTouchEnd, false);\n})();\n","import * as workerpool from 'workerpool';\n\nimport {State, Random, ID, DeckID, Card, DATA, FieldID, Location, Ids} from '../../src';\nimport {createElement, renderState, track, makeCard, CMP} from '../common';\n\nimport './swipe';\n\ntype Action = {\n  type: 'play' | 'win' | 'lose';\n} | ActionState & ({\n  type: 'target';\n} | {\n  type: 'search';\n  options: [Location, number][];\n});\n\ninterface ActionState {\n  origin: {location: Location; i: number};\n  filter: (location: Location, id: DeckID | FieldID) => boolean;\n  fn: (location: Location, ...j: number[]) => void;\n  num: number;\n  targets: [Location, number][];\n}\n\ninterface Context {\n  state: State;\n  banished: DeckID[];\n  graveyard: ID[];\n  action: Action;\n}\n\nconst NUM = (window.location.hash && +window.location.hash.slice(1)) ||\n  (window.location.search && +window.location.search.slice(1)) ||\n  ~~(Math.random() * (2 ** 31 - 1));\nconsole.log('Seed:', NUM);\n\nconst START = State.create(new Random(Random.seed(NUM)), true);\n\nconst STATE = {\n  stack: [{\n    state: START,\n    banished: [],\n    graveyard: [],\n    action: {type: 'play'},\n  } as Context],\n  index: 0,\n};\n\nfunction update(mutate = true) {\n  const $content = document.getElementById('content')!;\n  while ($content.firstChild) $content.removeChild($content.firstChild);\n\n  const {state: s, banished, graveyard, action} = STATE.stack[STATE.index];\n  const trace = renderTrace(s, banished, graveyard, mutate);\n\n  const wrapper = createElement('div', 'wrapper');\n  wrapper.appendChild(renderState(s, banished, graveyard, handler, transform, true, NUM));\n\n  if (action.type === 'win' || (action.type === 'play' && !s.clone().next().length)) {\n    const modal = createElement('div', 'modal', 'end', action.type === 'win' ? 'win' : 'lose');\n    const a = createElement('a');\n    a.href = `../trace?${NUM}`;\n    const end = createElement('h1');\n    end.textContent = `You ${action.type === 'win' ? 'Win' : 'Lose'}`;\n    a.appendChild(end);\n    modal.appendChild(a);\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    wrapper.appendChild(overlay);\n\n    // TODO: add restart\n  } else if (action.type === 'search') {\n    const modal = createElement('div', 'modal');\n\n    const zone = createElement('div', 'zone', 'search');\n    for (const [location, i] of action.options.sort((a, b) => s[a[0]][a[1]].localeCompare(s[b[0]][b[1]]))) {\n      const id = s[location][i] as FieldID;\n      const card = ID.decode(id);\n      zone.appendChild(makeCard(card, () => handler(location, id, i), {\n        hold: true,\n        className: transform(location, id, i, true),\n      }));\n    }\n    modal.appendChild(zone);\n\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    overlay.addEventListener('click', () => {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      if (action.num > 1 && action.targets.length) {\n        return action.fn(action.targets[0][0], action.targets[0][1]);\n      } else {\n        update();\n      }\n    }, {once: true});\n    wrapper.appendChild(overlay);\n  }\n\n  $content.appendChild(wrapper);\n  if (trace) {\n    $content.appendChild(trace);\n    trace.scrollTop = trace.scrollHeight;\n  }\n}\n\nfunction transform(location: Location, id: FieldID, i: number, isSearch = false) {\n  const {state, action} = STATE.stack[STATE.index];\n  const pile = (['banished', 'graveyard', 'deck'].includes(location));\n  if (action.type === 'play') {\n    if (pile) return undefined;\n    const card = ID.decode(id);\n    if (card.id === Ids.ReversalQuiz && !CAN_QUIZ(state)) return 'disabled';\n    const can = card.type === 'Monster'\n      ? (location === 'hand'\n        ? ((!state.summoned && state.monsters.length < 5) ||\n          (card.id === Ids.ThunderDragon && state.deck.length))\n        : (ID.data(id) === 3 && state.deck.length))\n      : (location === 'hand'\n        ? state.spells.length < 5 && card.can(state, location)\n        : ID.facedown(id)\n          ? card.can(state, location as 'spells')\n          : (card.id === Ids.ArchfiendsOath && !ID.data(id) && state.deck.length));\n    return can ? undefined : 'disabled';\n  } else if (action.type === 'target' || action.type === 'search') {\n    if (location === action.origin.location && i === action.origin.i) return 'selected';\n    if (!action.filter(location, id)) return pile ? undefined : 'disabled';\n    if (action.targets.find(([loc, j]) => loc === location && j === i)) {\n      if (!isSearch && action.type === 'search' && location === action.options[0][0]) {\n        return undefined;\n      }\n      return 'option';\n    }\n    return undefined;\n  }\n  return undefined;\n}\n\nfunction renderTrace(s: State, banished: DeckID[], graveyard: ID[], mutate = true) {\n  if (!s.trace?.length) return undefined;\n\n  const trace = createElement('div', 'trace');\n  let p = createElement('p');\n  let ul = createElement('ul');\n\n  let last = '';\n  let major = 0;\n  for (const line of s.trace) {\n    const minor = line.startsWith('  ');\n    if (!minor) {\n      if (major) {\n        p.appendChild(ul);\n        ul = createElement('ul');\n        trace.appendChild(p);\n        p = createElement('p');\n      }\n      last = line;\n      major++;\n\n      const span = createElement('span');\n      span.innerHTML = line.replace(/\"(.*?)\"/g, (_, g: string) => `\"<b>${g}</b>\"`);\n      p.appendChild(span);\n    } else {\n      const li = createElement('li');\n      li.textContent = line;\n      ul.appendChild(li);\n    }\n  }\n\n  p.appendChild(ul);\n  ul = createElement('ul');\n  trace.appendChild(p);\n\n  if (last && mutate) {\n    const activated = last.startsWith('Activate')\n      ? DATA[/\"(.*?)\"/.exec(last)![1]].id\n      : (last.startsWith('Set') && !last.endsWith('face-down'))\n        ? DATA[/then activate(?: face-down)? \"(.*?)\"/.exec(last)![1]].id\n        : undefined;\n    track(s.banished, banished, activated);\n    track(s.graveyard, graveyard, activated);\n  }\n\n  return trace;\n}\n\nfunction SPELL(fn?: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    if (card.type === 'Spell' && card.subType === 'Continuous') {\n      s.add('spells', card.id);\n    } else {\n      s.add('graveyard', card.id);\n    }\n    if (fn) fn(s);\n    s.inc();\n    update();\n  };\n}\n\n// TODO: support guessing\nfunction ARCHFIEND(s: State, location: 'hand' | 'spells', i: number, card: Card) {\n  const play = location === 'hand' || ID.facedown(s[location][i]);\n  const prefix = play\n    ? `Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\" then pay`\n    : 'Pay';\n  s.major(`${prefix} 500 LP (${s.lifepoints} -> ${s.lifepoints - 500}) to activate effect of \"${card.name}\"`);\n  s.lifepoints -= 500;\n  if (s.known()) {\n    s.minor(`Declare \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n    s.draw();\n  } else {\n    s.minor('Declare \"Blue-Eyes White Dragon\"');\n    const reveal = ID.decode(s.deck.pop()!);\n    s.minor(`Excavate \"${reveal.name}\"`);\n    s.add('graveyard', reveal.id);\n  }\n  s.remove(location, i);\n  s.add('spells', `${card.id}1` as FieldID);\n  if (play) s.inc();\n\n  update();\n}\n\nfunction SANGAN_TARGET(location: Location, id: DeckID | FieldID) {\n  const card = ID.decode(id);\n  return location === 'deck' && card.type === 'Monster' && card.atk <= 1500;\n}\n\nfunction RELOAD(fn: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    const spells = s.spells.length;\n    let max: number;\n    if (location === 'hand') {\n      const hand = s.hand.filter((id, j) => i !== j && ID.decode(id).type !== 'Monster');\n      max = Math.min(5 - spells - 1, hand.length, s.hand.length - 2);\n    } else {\n      const hand = s.hand.filter(id => ID.decode(id).type !== 'Monster');\n      max = Math.min(5 - spells, hand.length, s.hand.length - 1);\n    }\n\n    const before = s.hand.slice();\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type !== 'Monster', (_, ...set) => {\n      // NOTE: if location === 'hand' we need to adjust the offsets of any cards we set!\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n\n      const ids = [];\n      for (const [offset, j] of set.entries()) {\n        const id = before[j];\n        ids.push(id);\n        s.add('spells', `(${id})` as FieldID);\n        s.remove('hand', j - offset - (location === 'hand' && i < j ? 1 : 0));\n      }\n      if (ids.length) {\n        s.major(`Set ${ID.names(ids)} face-down then activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      } else {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      }\n      const len = s.hand.length;\n      fn(s);\n      s.hand = [];\n      s.draw(len);\n      s.inc();\n      update();\n    }, -max);\n  };\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction CAN_QUIZ(s: State) {\n  // NOTE: we have to clone for the termination check because it mutates the final state\n  if (!s.clone().end(false)) return false;\n  // The lookahead parameter only covers the A Feather of the Phoenix, end() will still return true\n  // if Black Pendant isn't actually equipped yet (but is equippable).\n  return s.spells.some(id => ID.id(id) === Ids.BlackPendant && !ID.facedown(id));\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction QUIZ(s: State, location: 'hand' | 'spells') {\n  if (!CAN_QUIZ(s)) return;\n\n  const known = s.known(true)!;\n  // NOTE: We already checked that Black Pendant is equipped\n  s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"Reversal Quiz\"`);\n  // Filter out Reversal Quiz from the messages about what gets sent to the Graveyard\n  const hand = s.hand.filter(id => ID.id(id) !== Ids.ReversalQuiz);\n  if (hand.length) s.minor(`Send ${ID.names(hand)} from hand to Graveyard`);\n  s.graveyard.push(...hand);\n  s.hand = [];\n\n  const ids = s.monsters.map(id => ID.id(id));\n  s.graveyard.push(...ids);\n  s.monsters = [];\n\n  for (const id of s.spells) {\n    const card = ID.decode(id);\n    if (card.id !== Ids.ReversalQuiz) {\n      continue;\n    } else if (!ID.facedown(id)) {\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.graveyard.push(card.id);\n    ids.push(card.id);\n  }\n  s.spells = [];\n  s.graveyard.sort();\n  if (ids.length) s.minor(`Send ${ID.names(ids)} from field to Graveyard`);\n\n  // Reversal Quiz isn't actually in the Graveyard at the point when the game is won\n  s.add('spells', Ids.ReversalQuiz);\n  // TODO: consider visually displaying the revealed card?\n  s.minor(`Call \"${ID.decode(known).type}\", reveal \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n  s.major(`After exchanging Life Points, opponent has ${s.lifepoints} LP and then takes 500 damage from \"Black Pendant\" being sent from the field to the Graveyard`);\n\n  STATE.stack[STATE.index].action = {type: 'win'};\n  update();\n}\n\nconst SPELLS: { [name: string]: any } = {\n  'A Feather of the Phoenix': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'hand', (_, j) => {\n      search({location, i}, loc => loc === 'graveyard', (__, k) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\"`);\n        const gid = s.remove('graveyard', k);\n        s.minor(`Return \"${ID.decode(gid).name}\" in the Graveyard to the top of the Deck`);\n        if (location === 'hand') {\n          s.discard(i < j ? [i, j] : [j, i]);\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.add('graveyard', s.remove('hand', j));\n        }\n        s.deck.push(`(${gid})` as DeckID);\n        s.inc();\n        update();\n      });\n    });\n  },\n  'Archfiend\\'s Oath': SPELL(),\n  'Black Pendant': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'monsters', (_, j) => {\n      s.remove(location, i);\n      s.major(`${location === 'spells' ? `Flip face-down \"${card.name}\" and equip` : `Equip \"${card.name}\"`} to \"${ID.decode(s.monsters[j]).name}\"`);\n      s.add('spells', `${card.id}${j}` as FieldID);\n      s.inc();\n      update();\n    });\n  },\n  'Card Destruction': RELOAD(s => {\n    for (const id of s.hand) {\n      s.add('graveyard', id);\n    }\n    s.minor(`Discard ${ID.names(s.hand)}`);\n  }),\n  'Convulsion of Nature': SPELL(s => s.reverse()),\n  'Different Dimension Capsule': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, loc => loc === 'deck', (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('spells', `${card.id}${s.turn}` as FieldID);\n      s.minor(`Banish ${ID.decode(s.deck[j]).name} from the deck face-down`);\n      s.add('banished', `(${ID.id(s.deck.splice(j, 1)[0])})` as DeckID);\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Giant Trunade': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('hand', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Return ${ID.names(s.spells)} to hand`);\n    s.spells = [];\n  }),\n  'Graceful Charity': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    s.remove(location, i);\n    i = s.add('spells', card.id);\n    s.draw(3);\n    update(); // FIXME bad partial state\n    // NOTE: we deliberately set the wrong index for the card so that it can't be cancelled\n    target({location: 'spells', i: -1}, loc => loc === 'hand', (_, j, k) => {\n      s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n      s.discard([j, k]); // PRECONDITION: j < k\n      s.remove('spells', i);\n      s.add('graveyard', card.id);\n      s.inc();\n      update();\n    }, 2);\n  },\n  'Level Limit - Area B': SPELL(),\n  'Pot of Greed': SPELL(s => s.draw(2)),\n  'Premature Burial': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Monster', (_, j) => {\n      s.major(`Pay 800 LP (${s.lifepoints} -> ${s.lifepoints - 800}) to activate effect of \"${card.name}\"`);\n      s.minor(`Special Summon \"${ID.decode(s.graveyard[j]).name}\" in Attack Position from Graveyard`);\n      s.lifepoints -= 800;\n      const gid = s.remove('graveyard', j);\n      const zone = s.summon(gid, true);\n      s.remove(location, i);\n      s.add('spells', `${card.id}${zone}` as FieldID);\n      s.inc(zone);\n      update();\n    });\n  },\n  'Heavy Storm': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('graveyard', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.BlackPendant) {\n        s.mclear(ID.data(id));\n      } else if (card.id === Ids.PrematureBurial) {\n        const removed = s.mremove(ID.data(id));\n        s.add('graveyard', removed.id);\n        s.minor(`Sending \"${ID.decode(removed.id).name}\" to the Graveyard after its equipped \"${ID.decode(id).name}\" was destroyed`);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Send ${ID.names(s.spells)} to Graveyard`);\n    s.spells = [];\n  }),\n  'Reload': RELOAD(s => {\n    s.deck.push(...s.hand);\n    s.minor(`Return ${ID.names(s.hand)} to Deck`);\n    s.shuffle();\n  }),\n  'Reversal Quiz': (s: State, location: 'hand' | 'spells', i: number, self: Card) => {\n    let sangan = false;\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${self.name}\"`);\n    if (s.hand.length) {\n      s.minor(`Send ${ID.names(s.hand)} from hand to Graveyard`);\n    }\n    if (s.monsters.length || s.spells.length) {\n      s.minor(`Send ${ID.names([...s.monsters, ...s.spells])} from field to Graveyard`);\n    }\n\n    s.graveyard.push(...s.hand);\n    s.hand = [];\n    for (const id of s.monsters) {\n      const card = ID.decode(id);\n      if (card.id === Ids.Sangan) sangan = true;\n      s.graveyard.push(card.id);\n    }\n    s.monsters = [];\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      if (!ID.facedown(id)) {\n        if (card.id === Ids.ConvulsionOfNature) {\n          s.reverse(true);\n        } else if (card.id === Ids.DifferentDimensionCapsule) {\n          s.banish();\n        }\n      }\n      s.graveyard.push(card.id);\n    }\n    s.spells = [];\n    s.graveyard.sort();\n\n    const reveal = s.deck[s.deck.length - 1];\n    if (!ID.known(reveal)) s.deck[s.deck.length - 1] = `(${reveal})` as DeckID;\n    // BUG: we are deliberately peeking here to ensure we call it wrong!\n    const card = ID.decode(reveal);\n    s.minor(`Call \"${card.type === 'Trap' ? 'Monster' : 'Trap'}\", reveal \"${card.name}\"`);\n    if (!sangan) return update();\n\n    search({location, i}, SANGAN_TARGET, (_, j) => {\n      if (j < 0) {\n        s.minor('Fail to find \"Sangan\" target in Deck');\n      } else {\n        const id = ID.id(s.deck.splice(j, 1)[0]);\n        s.minor(`Add \"${ID.decode(id).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n        s.add('hand', id);\n      }\n      s.shuffle();\n      update();\n    });\n  },\n  // TODO: handle flipping Royal Decree in multi-turn scenarios\n  'Royal Decree': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    if (location === 'hand') {\n      s.major(`Set \"${card.name}\" face-down`);\n      s.add('spells', `(${card.id})` as FieldID);\n    } // else {\n    //   s.major(`Activate face-down' \"${card.name}\"`);\n    //   s.add('spells', card.id);\n    // }\n    update();\n  },\n  'Spell Reproduction': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type === 'Spell', (_, j, k) => {\n      search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Spell', (__, g) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n        const gid = s.remove('graveyard', g);\n        if (location === 'hand') {\n          s.discard([i, j, k].sort(CMP));\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.discard([j, k]); // PRECONDITION: j < k\n        }\n        s.minor(`Add \"${ID.decode(gid).name}\" in the Graveyard to hand`);\n        s.add('hand', gid);\n        s.inc();\n        update();\n      });\n    }, 2);\n  },\n  'Toon Table of Contents': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'deck' && ID.decode(id).name.startsWith('Toon'), (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n      if (j < 0) {\n        s.minor('Fail to find \"Toon\" card in Deck');\n      } else {\n        s.minor(`Add \"${ID.decode(s.deck[j]).name}\" from Deck to hand`);\n        s.add('hand', ID.id(s.deck.splice(j, 1)[0]));\n      }\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Toon World': SPELL(s => {\n    s.minor(`Pay 1000 LP (${s.lifepoints} -> ${s.lifepoints - 1000})`);\n    s.lifepoints -= 1000;\n  }),\n  'Upstart Goblin': SPELL(s => s.draw()),\n};\n\nfunction handler(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  console.log(action, location, id, i); // DEBUG\n  switch (action.type) {\n  case 'play': return onPlay(location, id, i);\n  case 'target': return onTarget(location, id, i);\n  case 'search': return onSearch(location, id, i);\n  }\n}\n\nfunction onPlay(location: Location, id: FieldID, i: number) {\n  const state = STATE.stack[STATE.index].state;\n\n  const card = ID.decode(id);\n  switch (location) {\n  case 'monsters': {\n    if (card.id === Ids.RoyalMagicalLibrary) {\n      if (ID.facedown(id) || ID.data(id) !== 3 || !state.deck.length) return;\n      state.major(`Remove 3 Spell Counters from \"${card.name}\"`);\n      state.mclear(i);\n      state.draw();\n      return update();\n    }\n    return;\n  }\n  case 'spells': {\n    if (card.type === 'Monster' || !card.can(state, location)) return;\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (ID.facedown(id)) {\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    } else if (card.id === Ids.ArchfiendsOath && !ID.data(id)) {\n      ARCHFIEND(state, location, i, card);\n    }\n    return;\n  }\n  case 'hand': {\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (card.id === Ids.ThunderDragon) {\n      const find = (s: State) => {\n        search({location, i}, (loc, sid) => loc === 'deck' && ID.id(sid) === Ids.ThunderDragon, (_, ...targets) => {\n          s.major(`Discard \"${card.name}\"`);\n          s.remove('hand', i);\n          s.add('graveyard', card.id);\n          if (targets.length === 2) {\n            s.minor(`Add 2 \"${card.name}\" from Deck to hand`);\n            // PRECONDITION: targets[0] < targets[1]\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n            s.add('hand', ID.id(s.deck.splice(targets[1] - 1, 1)[0]));\n          } else if (targets[0] >= 0) {\n            s.minor(`Add \"${card.name}\" from Deck to hand`);\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n          } else {\n            s.minor(`Fail to find \"${card.name}\" in Deck`);\n          }\n          s.shuffle();\n          update();\n        }, 2);\n      };\n\n      if (state.monsters.length && state.monsters.length < 5 && !state.summoned) {\n        target({location, i}, loc => loc === 'deck' || loc === 'monsters', (loc, j) => {\n          if (loc === 'deck') {\n            find(state);\n          } else {\n            const t = ID.decode(state.monsters[j]);\n            state.major(`Tribute \"${t.name}\" to Summon \"${self.name}\"`);\n            state.tribute(j, i);\n            if (t.id === Ids.Sangan) {\n              search({location: 'graveyard', i: -1}, SANGAN_TARGET, (_, k) => {\n                if (k < 0) {\n                  state.minor('Fail to find \"Sangan\" target in Deck');\n                } else {\n                  const did = ID.id(state.deck.splice(k, 1)[0]);\n                  state.minor(`Add \"${ID.decode(did).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n                  state.add('hand', did);\n                }\n                state.shuffle();\n                update();\n              });\n            } else {\n              update();\n            }\n          }\n        });\n      } else {\n        find(state);\n      }\n    } else if (card.type === 'Monster') {\n      if (state.monsters.length >= 5 || state.summoned) return;\n      state.remove(location, i);\n      state.major(`Summon \"${card.name}\" in Attack Position`);\n      state.summon(card.id);\n      return update();\n    } else {\n      if (state.spells.length >= 5 || !card.can(state, location)) return;\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    }\n  }\n  }\n}\n\nfunction target(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: DeckID | FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  if (num === 0) return fn(origin.location);\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['hand' | 'spells' | 'monsters' | 'deck', number][] = [];\n  for (const location of ['hand', 'spells', 'monsters'] as const) {\n    for (const [i, id] of state[location].entries()) {\n      if (location === origin.location && i === origin.i) continue;\n      if (filter(location, id)) targets.push([location, i]);\n    }\n  }\n  if (state.deck.length && filter('deck', state.deck[state.deck.length - 1] as FieldID)) {\n    targets.push(['deck', state.deck.length - 1]);\n  }\n\n  if (num > 0 && targets.length === num) {\n    // PRECONDITION: new Set(targets.map(t => t[0])).size === 1\n    return fn(targets[0][0], ...targets.map(t => t[1]).sort(CMP));\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'target',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n    };\n    update();\n  }\n}\n\nfunction onTarget(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'target') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num < 0) {\n      if (action.targets.length) {\n        // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n        return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n      } else {\n        return action.fn(location);\n      }\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nfunction search(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: DeckID | FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['graveyard' | 'deck', number][] = [];\n  const ids = new Set<ID>();\n  for (const location of ['graveyard', 'deck'] as const) {\n    for (const [i, did] of state[location].entries()) {\n      const id = ID.id(did);\n      if (location === origin.location && i === origin.i || ids.has(id)) continue;\n      if (filter(location, id)) {\n        if (num === 1) ids.add(id);\n        targets.push([location, i]);\n      }\n    }\n  }\n\n  if (targets.length === 0) {\n    fn('hand', -1); // NOTE: we don't actually have a valid location...\n  } else if (targets.length === 1) {\n    return fn(targets[0][0], targets[0][1]);\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'search',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n      options: targets,\n    };\n    update();\n  }\n}\n\nfunction onSearch(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'search') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num > 1 && action.targets.length) {\n      return action.fn(action.targets[0][0], action.targets[0][1]);\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nupdate();\n\nconst undo = () => {\n  // if (STATE.index) {\n  //   STATE.index--;\n  //   update(false);\n  // }\n};\n\nconst redo = () => {\n  // if (STATE.index < STATE.stack.length - 1) {\n  //   STATE.index++;\n  //   update(false);\n  // }\n};\n\nconst cancel = () => {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type === 'target' || action.type === 'search') {\n    if (action.origin.i >= 0) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n    } else {\n      (STATE.stack[STATE.index].action as ActionState).targets = [];\n    }\n    update();\n  }\n};\n\nconst CLICKABLE = ['modal', 'modal-overlay', 'card'];\ndocument.addEventListener('click', e => {\n  if (e.target instanceof Element) {\n    for (let p: Element | null = e.target; p; p = p.parentElement) {\n      if (CLICKABLE.some(c => p!.classList.contains(c))) {\n        return true;\n      }\n    }\n  }\n  cancel();\n  e.preventDefault();\n  e.stopPropagation();\n  return false;\n});\ndocument.addEventListener('swiped-left', undo);\ndocument.addEventListener('swiped-right', redo);\ndocument.addEventListener('keydown', e => {\n  const key = e.which || e.keyCode;\n  switch (key) {\n  case 27:\n    cancel();\n    break;\n  case 37:\n    undo();\n    break;\n  case 39:\n    redo();\n    break;\n  default:\n    return true;\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n  return false;\n});\n\n/* eslint-disable @typescript-eslint/no-floating-promises */\nconst pool = workerpool.pool(new URL('./worker.ts', import.meta.url).pathname);\npool.exec('search', [START.toString(), 42, 1e6, false, 0.5]).then(r => {\n  console.log('Path:', r);\n}).catch(e => {\n  console.error(e);\n}).then(() => {\n  pool.terminate();\n});\n","module.exports = require('./helpers/bundle-url').getBundleURL('gcU1a') + \"../\" + require('./helpers/bundle-manifest').resolve(\"4bfU0\");"],"names":["parcelRequire","register","JSON","parse","downX","downY","diffX","diffY","timeDown","startElement","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","e","document","createEvent","initCustomEvent","prototype","Event","addEventListener","target","Date","now","touches","clientX","clientY","timeDiff","eventType","Math","abs","dispatchEvent","$365bb179207d3425$var$NUM","location","hash","slice","search","random","console","log","$365bb179207d3425$var$START","$l7khe","State","create","Random","seed","$365bb179207d3425$var$STATE","stack","state","banished","graveyard","action","type","index","$365bb179207d3425$var$update","mutate","$content","getElementById","firstChild","removeChild","s","trace","length","$iPHaw","createElement","p","ul","last","major","line","startsWith","li","textContent","appendChild","span","innerHTML","replace","_","g","activated","DATA","exec","id","endsWith","track","$365bb179207d3425$var$renderTrace","wrapper","renderState","$365bb179207d3425$var$handler","$365bb179207d3425$var$transform","clone","next","modal","a","href","end","overlay","zone","i","options","sort","b","localeCompare","card","ID","decode","makeCard","hold","className","num","targets","fn","once","scrollTop","scrollHeight","isSearch","pile","includes","Ids","ReversalQuiz","$365bb179207d3425$var$CAN_QUIZ","summoned","monsters","ThunderDragon","deck","data","spells","can","facedown","ArchfiendsOath","origin","filter","find","loc","j","$365bb179207d3425$var$SPELL","remove","name","subType","add","inc","$365bb179207d3425$var$SANGAN_TARGET","atk","$365bb179207d3425$var$RELOAD","max","hand","min","before","$365bb179207d3425$var$target","set","ids","offset","entries","push","names","len","draw","some","BlackPendant","$365bb179207d3425$var$QUIZ","known","minor","map","ConvulsionOfNature","reverse","DifferentDimensionCapsule","banish","lifepoints","$365bb179207d3425$var$SPELLS","$365bb179207d3425$var$search","__","k","gid","discard","turn","splice","shuffle","summon","mclear","PrematureBurial","removed","mremove","Reload","self","sangan","Sangan","id1","reveal","CMP","RoyalMagicalLibrary","spell","play","prefix","pop","$365bb179207d3425$var$ARCHFIEND","sid","t","tribute","did","$365bb179207d3425$var$onPlay","Error","findIndex","$365bb179207d3425$var$onTarget","$365bb179207d3425$var$onSearch","Set","has","$365bb179207d3425$var$undo","$365bb179207d3425$var$redo","$365bb179207d3425$var$cancel","$365bb179207d3425$var$CLICKABLE","Element","parentElement","c","classList","contains","preventDefault","stopPropagation","which","keyCode","$13b0d6eb21343cd3$exports","getBundleURL","resolve","$365bb179207d3425$var$pool","$ahpAG","pool","URL","pathname","toString","then","r","catch","error","terminate"],"version":3,"file":"index.2890722d.js.map"}
{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-52df62d3559cdc26.js","html/sim/sim.ts","html/sim/swipe.ts","node_modules/@parcel/runtime-js/lib/runtime-adde320768490017.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gcU1a\\\":\\\"index.d0da8d1a.js\\\",\\\"4bfU0\\\":\\\"worker.f8fc40e1.js\\\",\\\"ftUP3\\\":\\\"index.57cffd17.js\\\",\\\"77teK\\\":\\\"index.69b6619e.css\\\",\\\"1Lmeo\\\":\\\"index.feaefe70.js\\\"}\"));","import * as workerpool from 'workerpool';\n\nimport {State, Random, ID, DeckID, Card, DATA, FieldID, Location, Ids, Option, OPTIONS} from '../../src';\nimport {createElement, renderState, track, makeCard, CMP} from '../common';\n\nimport './swipe';\n\ntype Action = {\n  type: 'start' | 'play' | 'win' | 'lose';\n} | ActionState & ({\n  type: 'target';\n} | {\n  type: 'search';\n  options: [Location, number][];\n});\n\ninterface ActionState {\n  origin: {location: Location; i: number};\n  filter: (location: Location, id: DeckID | FieldID) => boolean;\n  fn: (location: Location, ...j: number[]) => void;\n  num: number;\n  targets: [Location, number][];\n}\n\ninterface Context {\n  state: State;\n  banished: DeckID[];\n  graveyard: ID[];\n  action: Action;\n}\n\nlet STATE!: {\n  option: Option;\n  num: number;\n  start: State;\n  stack: Context[];\n  index: number;\n};\n\nfunction update(mutate = true) {\n  const $content = document.getElementById('content')!;\n  while ($content.firstChild) $content.removeChild($content.firstChild);\n\n  const {state: s, banished, graveyard, action} = STATE.stack[STATE.index];\n  const trace = renderTrace(s, banished, graveyard, mutate);\n\n  const wrapper = createElement('div', 'wrapper');\n  wrapper.appendChild(renderState(s, banished, graveyard, handler, transform, true, `${STATE.option}${STATE.num}`));\n\n  if (action.type === 'win' || (action.type === 'play' && !s.clone().next().length)) {\n    const modal = createElement('div', 'modal', 'end', action.type === 'win' ? 'win' : 'lose');\n    const a = createElement('a');\n    a.href = `../trace?${encodeURIComponent(STATE.start.toString())}`;\n    const end = createElement('h1');\n    end.textContent = `You ${action.type === 'win' ? 'Win' : 'Lose'}`;\n    a.appendChild(end);\n    modal.appendChild(a);\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    wrapper.appendChild(overlay);\n\n    // TODO: add restart\n  } else if (action.type === 'search') {\n    const modal = createElement('div', 'modal');\n\n    const zone = createElement('div', 'zone', 'search');\n    for (const [location, i] of action.options.sort((a, b) => s[a[0]][a[1]].localeCompare(s[b[0]][b[1]]))) {\n      const id = s[location][i] as FieldID;\n      const card = ID.decode(id);\n      zone.appendChild(makeCard(card, () => handler(location, id, i), {\n        hold: true,\n        className: transform(location, id, i, true),\n      }));\n    }\n    modal.appendChild(zone);\n\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    overlay.addEventListener('click', () => {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      if (action.num > 1 && action.targets.length) {\n        return action.fn(action.targets[0][0], action.targets[0][1]);\n      } else {\n        update();\n      }\n    }, {once: true});\n    wrapper.appendChild(overlay);\n  }\n\n  $content.appendChild(wrapper);\n  if (trace) {\n    $content.appendChild(trace);\n    trace.scrollTop = trace.scrollHeight;\n  }\n}\n\nfunction transform(location: Location, id: FieldID, i: number, isSearch = false) {\n  const {state, action} = STATE.stack[STATE.index];\n  const pile = (['banished', 'graveyard', 'deck'].includes(location));\n  if (action.type === 'play') {\n    if (pile) return undefined;\n    const card = ID.decode(id);\n    if (card.id === Ids.ReversalQuiz && !CAN_QUIZ(state)) return 'disabled';\n    const can = card.type === 'Monster'\n      ? (location === 'hand'\n        ? ((!state.summoned && state.monsters.length < 5) ||\n          (card.id === Ids.ThunderDragon && state.deck.length))\n        : (ID.data(id) === 3 && state.deck.length))\n      : (location === 'hand'\n        ? state.spells.length < 5 && card.can(state, location)\n        : ID.facedown(id)\n          ? card.can(state, location as 'spells')\n          : (card.id === Ids.ArchfiendsOath && !ID.data(id) && state.deck.length));\n    return can ? undefined : 'disabled';\n  } else if (action.type === 'target' || action.type === 'search') {\n    if (location === action.origin.location && i === action.origin.i) return 'selected';\n    if (!action.filter(location, id)) return pile ? undefined : 'disabled';\n    if (action.targets.find(([loc, j]) => loc === location && j === i)) {\n      if (!isSearch && action.type === 'search' && location === action.options[0][0]) {\n        return undefined;\n      }\n      return 'option';\n    }\n    return undefined;\n  }\n  return undefined;\n}\n\nfunction renderTrace(s: State, banished: DeckID[], graveyard: ID[], mutate = true) {\n  if (!s.trace?.length) return undefined;\n\n  const trace = createElement('div', 'trace');\n  let p = createElement('p');\n  let ul = createElement('ul');\n\n  let last = '';\n  let major = 0;\n  for (const line of s.trace) {\n    const minor = line.startsWith('  ');\n    if (!minor) {\n      if (major) {\n        p.appendChild(ul);\n        ul = createElement('ul');\n        trace.appendChild(p);\n        p = createElement('p');\n      }\n      last = line;\n      major++;\n\n      const span = createElement('span');\n      span.innerHTML = line.replace(/\"(.*?)\"/g, (_, g: string) => `\"<b>${g}</b>\"`);\n      p.appendChild(span);\n    } else {\n      const li = createElement('li');\n      li.textContent = line;\n      ul.appendChild(li);\n    }\n  }\n\n  p.appendChild(ul);\n  ul = createElement('ul');\n  trace.appendChild(p);\n\n  if (last && mutate) {\n    const activated = last.startsWith('Activate')\n      ? DATA[/\"(.*?)\"/.exec(last)![1]].id\n      : (last.startsWith('Set') && !last.endsWith('face-down'))\n        ? DATA[/then activate(?: face-down)? \"(.*?)\"/.exec(last)![1]].id\n        : undefined;\n    track(s.banished, banished, activated);\n    track(s.graveyard, graveyard, activated);\n  }\n\n  return trace;\n}\n\nfunction SPELL(fn?: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    if (card.type === 'Spell' && card.subType === 'Continuous') {\n      s.add('spells', card.id);\n    } else {\n      s.add('graveyard', card.id);\n    }\n    if (fn) fn(s);\n    s.inc();\n    update();\n  };\n}\n\n// TODO: support guessing\nfunction ARCHFIEND(s: State, location: 'hand' | 'spells', i: number, card: Card) {\n  const play = location === 'hand' || ID.facedown(s[location][i]);\n  const prefix = play\n    ? `Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\" then pay`\n    : 'Pay';\n  s.major(`${prefix} 500 LP (${s.lifepoints} -> ${s.lifepoints - 500}) to activate effect of \"${card.name}\"`);\n  s.lifepoints -= 500;\n  if (s.known()) {\n    s.minor(`Declare \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n    s.draw();\n  } else {\n    s.minor('Declare \"Blue-Eyes White Dragon\"');\n    const reveal = ID.decode(s.deck.pop()!);\n    s.minor(`Excavate \"${reveal.name}\"`);\n    s.add('graveyard', reveal.id);\n  }\n  s.remove(location, i);\n  s.add('spells', `${card.id}1` as FieldID);\n  if (play) s.inc();\n\n  update();\n}\n\nfunction SANGAN_TARGET(location: Location, id: DeckID | FieldID) {\n  const card = ID.decode(id);\n  return location === 'deck' && card.type === 'Monster' && card.atk <= 1500;\n}\n\nfunction RELOAD(fn: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    const spells = s.spells.length;\n    let max: number;\n    if (location === 'hand') {\n      const hand = s.hand.filter((id, j) => i !== j && ID.decode(id).type !== 'Monster');\n      max = Math.min(5 - spells - 1, hand.length, s.hand.length - 2);\n    } else {\n      const hand = s.hand.filter(id => ID.decode(id).type !== 'Monster');\n      max = Math.min(5 - spells, hand.length, s.hand.length - 1);\n    }\n\n    const before = s.hand.slice();\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type !== 'Monster', (_, ...set) => {\n      // NOTE: if location === 'hand' we need to adjust the offsets of any cards we set!\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n\n      const ids = [];\n      for (const [offset, j] of set.entries()) {\n        const id = before[j];\n        ids.push(id);\n        s.add('spells', `(${id})` as FieldID);\n        s.remove('hand', j - offset - (location === 'hand' && i < j ? 1 : 0));\n      }\n      if (ids.length) {\n        s.major(`Set ${ID.names(ids)} face-down then activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      } else {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      }\n      const len = s.hand.length;\n      fn(s);\n      s.hand = [];\n      s.draw(len);\n      s.inc();\n      update();\n    }, -max);\n  };\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction CAN_QUIZ(s: State) {\n  // NOTE: we have to clone for the termination check because it mutates the final state\n  if (!s.clone().end(false)) return false;\n  // The lookahead parameter only covers the A Feather of the Phoenix, end() will still return true\n  // if Black Pendant isn't actually equipped yet (but is equippable).\n  return s.spells.some(id => ID.id(id) === Ids.BlackPendant && !ID.facedown(id));\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction QUIZ(s: State, location: 'hand' | 'spells') {\n  if (!CAN_QUIZ(s)) return;\n\n  const known = s.known(true)!;\n  // NOTE: We already checked that Black Pendant is equipped\n  s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"Reversal Quiz\"`);\n  // Filter out Reversal Quiz from the messages about what gets sent to the Graveyard\n  const hand = s.hand.filter(id => ID.id(id) !== Ids.ReversalQuiz);\n  if (hand.length) s.minor(`Send ${ID.names(hand)} from hand to Graveyard`);\n  s.graveyard.push(...hand);\n  s.hand = [];\n\n  const ids = s.monsters.map(id => ID.id(id));\n  s.graveyard.push(...ids);\n  s.monsters = [];\n\n  for (const id of s.spells) {\n    const card = ID.decode(id);\n    if (card.id !== Ids.ReversalQuiz) {\n      continue;\n    } else if (!ID.facedown(id)) {\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.graveyard.push(card.id);\n    ids.push(card.id);\n  }\n  s.spells = [];\n  s.graveyard.sort();\n  if (ids.length) s.minor(`Send ${ID.names(ids)} from field to Graveyard`);\n\n  // Reversal Quiz isn't actually in the Graveyard at the point when the game is won\n  s.add('spells', Ids.ReversalQuiz);\n  // TODO: consider visually displaying the revealed card?\n  s.minor(`Call \"${ID.decode(known).type}\", reveal \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n  s.major(`After exchanging Life Points, opponent has ${s.lifepoints} LP and then takes 500 damage from \"Black Pendant\" being sent from the field to the Graveyard`);\n\n  STATE.stack[STATE.index].action = {type: 'win'};\n  update();\n}\n\nconst SPELLS: { [name: string]: any } = {\n  'A Feather of the Phoenix': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'hand', (_, j) => {\n      search({location, i}, loc => loc === 'graveyard', (__, k) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\"`);\n        const gid = s.remove('graveyard', k);\n        s.minor(`Return \"${ID.decode(gid).name}\" in the Graveyard to the top of the Deck`);\n        if (location === 'hand') {\n          s.discard(i < j ? [i, j] : [j, i]);\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.add('graveyard', s.remove('hand', j));\n        }\n        s.deck.push(`(${gid})` as DeckID);\n        s.inc();\n        update();\n      });\n    });\n  },\n  'Archfiend\\'s Oath': SPELL(),\n  'Black Pendant': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'monsters', (_, j) => {\n      s.remove(location, i);\n      s.major(`${location === 'spells' ? `Flip face-down \"${card.name}\" and equip` : `Equip \"${card.name}\"`} to \"${ID.decode(s.monsters[j]).name}\"`);\n      s.add('spells', `${card.id}${j}` as FieldID);\n      s.inc();\n      update();\n    });\n  },\n  'Card Destruction': RELOAD(s => {\n    for (const id of s.hand) {\n      s.add('graveyard', id);\n    }\n    s.minor(`Discard ${ID.names(s.hand)}`);\n  }),\n  'Convulsion of Nature': SPELL(s => s.reverse()),\n  'Different Dimension Capsule': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, loc => loc === 'deck', (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('spells', `${card.id}${s.turn}` as FieldID);\n      s.minor(`Banish ${ID.decode(s.deck[j]).name} from the deck face-down`);\n      s.add('banished', `(${ID.id(s.deck.splice(j, 1)[0])})` as DeckID);\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Giant Trunade': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('hand', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Return ${ID.names(s.spells)} to hand`);\n    s.spells = [];\n  }),\n  'Graceful Charity': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    s.remove(location, i);\n    i = s.add('spells', card.id);\n    s.draw(3);\n    update(); // FIXME bad partial state\n    // NOTE: we deliberately set the wrong index for the card so that it can't be cancelled\n    target({location: 'spells', i: -1}, loc => loc === 'hand', (_, j, k) => {\n      s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n      s.discard([j, k]); // PRECONDITION: j < k\n      s.remove('spells', i);\n      s.add('graveyard', card.id);\n      s.inc();\n      update();\n    }, 2);\n  },\n  'Level Limit - Area B': SPELL(),\n  'Pot of Greed': SPELL(s => s.draw(2)),\n  'Premature Burial': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Monster', (_, j) => {\n      s.major(`Pay 800 LP (${s.lifepoints} -> ${s.lifepoints - 800}) to activate effect of \"${card.name}\"`);\n      s.minor(`Special Summon \"${ID.decode(s.graveyard[j]).name}\" in Attack Position from Graveyard`);\n      s.lifepoints -= 800;\n      const gid = s.remove('graveyard', j);\n      const zone = s.summon(gid, true);\n      s.remove(location, i);\n      s.add('spells', `${card.id}${zone}` as FieldID);\n      s.inc(zone);\n      update();\n    });\n  },\n  'Heavy Storm': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('graveyard', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.BlackPendant) {\n        s.mclear(ID.data(id));\n      } else if (card.id === Ids.PrematureBurial) {\n        const removed = s.mremove(ID.data(id));\n        s.add('graveyard', removed.id);\n        s.minor(`Sending \"${ID.decode(removed.id).name}\" to the Graveyard after its equipped \"${ID.decode(id).name}\" was destroyed`);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Send ${ID.names(s.spells)} to Graveyard`);\n    s.spells = [];\n  }),\n  'Reload': RELOAD(s => {\n    s.deck.push(...s.hand);\n    s.minor(`Return ${ID.names(s.hand)} to Deck`);\n    s.shuffle();\n  }),\n  'Reversal Quiz': (s: State, location: 'hand' | 'spells', i: number, self: Card) => {\n    let sangan = false;\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${self.name}\"`);\n    if (s.hand.length) {\n      s.minor(`Send ${ID.names(s.hand)} from hand to Graveyard`);\n    }\n    if (s.monsters.length || s.spells.length) {\n      s.minor(`Send ${ID.names([...s.monsters, ...s.spells])} from field to Graveyard`);\n    }\n\n    s.graveyard.push(...s.hand);\n    s.hand = [];\n    for (const id of s.monsters) {\n      const card = ID.decode(id);\n      if (card.id === Ids.Sangan) sangan = true;\n      s.graveyard.push(card.id);\n    }\n    s.monsters = [];\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      if (!ID.facedown(id)) {\n        if (card.id === Ids.ConvulsionOfNature) {\n          s.reverse(true);\n        } else if (card.id === Ids.DifferentDimensionCapsule) {\n          s.banish();\n        }\n      }\n      s.graveyard.push(card.id);\n    }\n    s.spells = [];\n    s.graveyard.sort();\n\n    const reveal = s.deck[s.deck.length - 1];\n    if (!ID.known(reveal)) s.deck[s.deck.length - 1] = `(${reveal})` as DeckID;\n    // BUG: we are deliberately peeking here to ensure we call it wrong!\n    const card = ID.decode(reveal);\n    s.minor(`Call \"${card.type === 'Trap' ? 'Monster' : 'Trap'}\", reveal \"${card.name}\"`);\n    if (!sangan) return update();\n\n    search({location, i}, SANGAN_TARGET, (_, j) => {\n      if (j < 0) {\n        s.minor('Fail to find \"Sangan\" target in Deck');\n      } else {\n        const id = ID.id(s.deck.splice(j, 1)[0]);\n        s.minor(`Add \"${ID.decode(id).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n        s.add('hand', id);\n      }\n      s.shuffle();\n      update();\n    });\n  },\n  // TODO: handle flipping Royal Decree in multi-turn scenarios\n  'Royal Decree': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    if (location === 'hand') {\n      s.major(`Set \"${card.name}\" face-down`);\n      s.add('spells', `(${card.id})` as FieldID);\n    } // else {\n    //   s.major(`Activate face-down' \"${card.name}\"`);\n    //   s.add('spells', card.id);\n    // }\n    update();\n  },\n  'Spell Reproduction': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type === 'Spell', (_, j, k) => {\n      search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Spell', (__, g) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n        const gid = s.remove('graveyard', g);\n        if (location === 'hand') {\n          s.discard([i, j, k].sort(CMP));\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.discard([j, k]); // PRECONDITION: j < k\n        }\n        s.minor(`Add \"${ID.decode(gid).name}\" in the Graveyard to hand`);\n        s.add('hand', gid);\n        s.inc();\n        update();\n      });\n    }, 2);\n  },\n  'Toon Table of Contents': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'deck' && ID.decode(id).name.startsWith('Toon'), (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n      if (j < 0) {\n        s.minor('Fail to find \"Toon\" card in Deck');\n      } else {\n        s.minor(`Add \"${ID.decode(s.deck[j]).name}\" from Deck to hand`);\n        s.add('hand', ID.id(s.deck.splice(j, 1)[0]));\n      }\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Toon World': SPELL(s => {\n    s.minor(`Pay 1000 LP (${s.lifepoints} -> ${s.lifepoints - 1000})`);\n    s.lifepoints -= 1000;\n  }),\n  'Upstart Goblin': SPELL(s => s.draw()),\n};\n\nfunction handler(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  console.log(action, location, id, i); // DEBUG\n  switch (action.type) {\n  case 'play': return onPlay(location, id, i);\n  case 'target': return onTarget(location, id, i);\n  case 'search': return onSearch(location, id, i);\n  }\n}\n\nfunction onPlay(location: Location, id: FieldID, i: number) {\n  const state = STATE.stack[STATE.index].state;\n\n  const card = ID.decode(id);\n  switch (location) {\n  case 'monsters': {\n    if (card.id === Ids.RoyalMagicalLibrary) {\n      if (ID.facedown(id) || ID.data(id) !== 3 || !state.deck.length) return;\n      state.major(`Remove 3 Spell Counters from \"${card.name}\"`);\n      state.mclear(i);\n      state.draw();\n      return update();\n    }\n    return;\n  }\n  case 'spells': {\n    if (card.type === 'Monster' || !card.can(state, location)) return;\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (ID.facedown(id)) {\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    } else if (card.id === Ids.ArchfiendsOath && !ID.data(id)) {\n      ARCHFIEND(state, location, i, card);\n    }\n    return;\n  }\n  case 'hand': {\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (card.id === Ids.ThunderDragon) {\n      const find = (s: State) => {\n        search({location, i}, (loc, sid) => loc === 'deck' && ID.id(sid) === Ids.ThunderDragon, (_, ...targets) => {\n          s.major(`Discard \"${card.name}\"`);\n          s.remove('hand', i);\n          s.add('graveyard', card.id);\n          if (targets.length === 2) {\n            s.minor(`Add 2 \"${card.name}\" from Deck to hand`);\n            // PRECONDITION: targets[0] < targets[1]\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n            s.add('hand', ID.id(s.deck.splice(targets[1] - 1, 1)[0]));\n          } else if (targets[0] >= 0) {\n            s.minor(`Add \"${card.name}\" from Deck to hand`);\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n          } else {\n            s.minor(`Fail to find \"${card.name}\" in Deck`);\n          }\n          s.shuffle();\n          update();\n        }, 2);\n      };\n\n      if (state.monsters.length && state.monsters.length < 5 && !state.summoned) {\n        target({location, i}, loc => loc === 'deck' || loc === 'monsters', (loc, j) => {\n          if (loc === 'deck') {\n            find(state);\n          } else {\n            const t = ID.decode(state.monsters[j]);\n            state.major(`Tribute \"${t.name}\" to Summon \"${self.name}\"`);\n            state.tribute(j, i);\n            if (t.id === Ids.Sangan) {\n              search({location: 'graveyard', i: -1}, SANGAN_TARGET, (_, k) => {\n                if (k < 0) {\n                  state.minor('Fail to find \"Sangan\" target in Deck');\n                } else {\n                  const did = ID.id(state.deck.splice(k, 1)[0]);\n                  state.minor(`Add \"${ID.decode(did).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n                  state.add('hand', did);\n                }\n                state.shuffle();\n                update();\n              });\n            } else {\n              update();\n            }\n          }\n        });\n      } else {\n        find(state);\n      }\n    } else if (card.type === 'Monster') {\n      if (state.monsters.length >= 5 || state.summoned) return;\n      state.remove(location, i);\n      state.major(`Summon \"${card.name}\" in Attack Position`);\n      state.summon(card.id);\n      return update();\n    } else {\n      if (state.spells.length >= 5 || !card.can(state, location)) return;\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    }\n  }\n  }\n}\n\nfunction target(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: DeckID | FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  if (num === 0) return fn(origin.location);\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['hand' | 'spells' | 'monsters' | 'deck', number][] = [];\n  for (const location of ['hand', 'spells', 'monsters'] as const) {\n    for (const [i, id] of state[location].entries()) {\n      if (location === origin.location && i === origin.i) continue;\n      if (filter(location, id)) targets.push([location, i]);\n    }\n  }\n  if (state.deck.length && filter('deck', state.deck[state.deck.length - 1] as FieldID)) {\n    targets.push(['deck', state.deck.length - 1]);\n  }\n\n  if (num > 0 && targets.length === num) {\n    // PRECONDITION: new Set(targets.map(t => t[0])).size === 1\n    return fn(targets[0][0], ...targets.map(t => t[1]).sort(CMP));\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'target',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n    };\n    update();\n  }\n}\n\nfunction onTarget(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'target') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num < 0) {\n      if (action.targets.length) {\n        // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n        return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n      } else {\n        return action.fn(location);\n      }\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nfunction search(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: DeckID | FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['graveyard' | 'deck', number][] = [];\n  const ids = new Set<ID>();\n  for (const location of ['graveyard', 'deck'] as const) {\n    for (const [i, did] of state[location].entries()) {\n      const id = ID.id(did);\n      if (location === origin.location && i === origin.i || ids.has(id)) continue;\n      if (filter(location, id)) {\n        if (num === 1) ids.add(id);\n        targets.push([location, i]);\n      }\n    }\n  }\n\n  if (targets.length === 0) {\n    fn('hand', -1); // NOTE: we don't actually have a valid location...\n  } else if (targets.length === 1) {\n    return fn(targets[0][0], targets[0][1]);\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'search',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n      options: targets,\n    };\n    update();\n  }\n}\n\nfunction onSearch(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'search') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num > 1 && action.targets.length) {\n      return action.fn(action.targets[0][0], action.targets[0][1]);\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nfunction initialize(option: Option, num: number) {\n  console.log('Seed:', num);\n\n  const state = State.create(option, new Random(Random.seed(num)), true);\n  STATE = {\n    option,\n    num,\n    start: state.clone(),\n    stack: [{\n      state,\n      banished: [],\n      graveyard: [],\n      action: {type: 'play'},\n    } as Context],\n    index: 0,\n  };\n\n  const undo = () => {\n    // if (STATE.index) {\n    //   STATE.index--;\n    //   update(false);\n    // }\n  };\n\n  const redo = () => {\n    // if (STATE.index < STATE.stack.length - 1) {\n    //   STATE.index++;\n    //   update(false);\n    // }\n  };\n\n  const cancel = () => {\n    const action = STATE.stack[STATE.index].action;\n    if (action.type === 'target' || action.type === 'search') {\n      if (action.origin.i >= 0) {\n        STATE.stack[STATE.index].action = {type: 'play'};\n      } else {\n        (STATE.stack[STATE.index].action as ActionState).targets = [];\n      }\n      update();\n    }\n  };\n\n  const CLICKABLE = ['modal', 'modal-overlay', 'card'];\n  document.addEventListener('click', e => {\n    if (e.target instanceof Element) {\n      for (let p: Element | null = e.target; p; p = p.parentElement) {\n        if (CLICKABLE.some(c => p!.classList.contains(c))) {\n          return true;\n        }\n      }\n    }\n    cancel();\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n  });\n  document.addEventListener('swiped-left', undo);\n  document.addEventListener('swiped-right', redo);\n  document.addEventListener('keydown', e => {\n    const key = e.which || e.keyCode;\n    switch (key) {\n    case 27:\n      cancel();\n      break;\n    case 37:\n      undo();\n      break;\n    case 39:\n      redo();\n      break;\n    default:\n      return true;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    return false;\n  });\n\n  /* eslint-disable @typescript-eslint/no-floating-promises */\n  const pool = workerpool.pool(new URL('./worker.ts', import.meta.url).pathname);\n  pool.exec('search', [STATE.start.toString(), 42, 1e6, false, 0.5]).then(r => {\n    console.log('Path:', r);\n  }).catch(e => {\n    console.error(e);\n  }).then(() => {\n    pool.terminate();\n  });\n\n  update();\n}\n\nfunction start() {\n  const arg = (window.location.hash || window.location.search).slice(1);\n  if (OPTIONS.includes(arg[0] as ID)) {\n    const n = arg.slice(1);\n    if (n && !isNaN(+n)) return initialize(arg[0] as ID, +n);\n  }\n  const num = arg && !isNaN(+arg) ? +arg : ~~(Math.random() * (2 ** 31 - 1));\n\n  const $content = document.getElementById('content')!;\n  while ($content.firstChild) $content.removeChild($content.firstChild);\n  const zone = createElement('div', 'zone', 'start');\n  for (const id of OPTIONS) {\n    const card = ID.decode(id);\n    zone.appendChild(makeCard(card, () => {\n      initialize(id, num);\n    }, {hold: true}));\n  }\n  $content.appendChild(zone);\n}\n\nstart();\n","/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/swiped-events */\n(() => {\n  'use strict';\n\n  const THRESHOLD = 100;\n  const TIMEOUT = 500;\n\n  let downX: number | null = null;\n  let downY: number | null = null;\n  let diffX = 0;\n  let diffY = 0;\n  let timeDown: number | null = null;\n  let startElement: EventTarget | null = null;\n\n  if (typeof window.CustomEvent !== 'function') {\n    // @ts-ignore\n    window.CustomEvent = (event: string, params: any) => {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      const e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return e;\n    };\n\n    // @ts-ignore\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  function handleTouchEnd(e: TouchEvent) {\n    if (startElement !== e.target) return;\n\n    const timeDiff = Date.now() - timeDown!;\n    let eventType = '';\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (Math.abs(diffX) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffX > 0) {\n          eventType = 'swiped-left';\n        } else {\n          eventType = 'swiped-right';\n        }\n      }\n    } else {\n      if (Math.abs(diffY) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffY > 0) {\n          eventType = 'swiped-up';\n        } else {\n          eventType = 'swiped-down';\n        }\n      }\n    }\n\n    if (eventType) {\n      startElement!.dispatchEvent(new CustomEvent(eventType, {bubbles: true, cancelable: true}));\n    }\n\n    downX = null;\n    downY = null;\n    timeDown = null;\n  }\n\n  function handleTouchStart(e: TouchEvent) {\n    startElement = e.target;\n\n    timeDown = Date.now();\n    downX = e.touches[0].clientX;\n    downY = e.touches[0].clientY;\n    diffX = 0;\n    diffY = 0;\n  }\n\n  function handleTouchMove(e: TouchEvent) {\n    if (!downX || !downY) return;\n    diffX = downX - e.touches[0].clientX;\n    diffY = downY - e.touches[0].clientY;\n  }\n\n  document.addEventListener('touchstart', handleTouchStart, false);\n  document.addEventListener('touchmove', handleTouchMove, false);\n  document.addEventListener('touchend', handleTouchEnd, false);\n})();\n","module.exports = require('./helpers/bundle-url').getBundleURL('gcU1a') + \"../\" + require('./helpers/bundle-manifest').resolve(\"4bfU0\");"],"names":["parcelRequire","register","JSON","parse","$365bb179207d3425$var$STATE","$365bb179207d3425$var$update","mutate","$content","document","getElementById","firstChild","removeChild","state","s","banished","graveyard","action","stack","index","trace","length","$iPHaw","createElement","p","ul","last","major","line","startsWith","li","textContent","appendChild","span","innerHTML","replace","_","g","activated","$l7khe","DATA","exec","id","endsWith","undefined","track","$365bb179207d3425$var$renderTrace","wrapper","renderState","$365bb179207d3425$var$handler","$365bb179207d3425$var$transform","option","num","type","clone","next","modal","a","href","encodeURIComponent","start","toString","end","overlay","zone","location","i","options","sort","b","localeCompare","card","ID","decode","makeCard","hold","className","addEventListener","targets","fn","once","scrollTop","scrollHeight","isSearch","pile","includes","Ids","ReversalQuiz","$365bb179207d3425$var$CAN_QUIZ","summoned","monsters","ThunderDragon","deck","data","spells","can","facedown","ArchfiendsOath","origin","filter","find","loc","j","$365bb179207d3425$var$SPELL","remove","name","subType","add","inc","$365bb179207d3425$var$SANGAN_TARGET","atk","$365bb179207d3425$var$RELOAD","max","hand","Math","min","before","slice","$365bb179207d3425$var$target","set","ids","offset","entries","push","names","len","draw","some","BlackPendant","$365bb179207d3425$var$QUIZ","known","minor","map","ConvulsionOfNature","reverse","DifferentDimensionCapsule","banish","lifepoints","downX","downY","diffX","diffY","timeDown","startElement","window","CustomEvent","event","params","bubbles","cancelable","detail","e","createEvent","initCustomEvent","prototype","Event","target","Date","now","touches","clientX","clientY","timeDiff","eventType","abs","dispatchEvent","$365bb179207d3425$var$SPELLS","$365bb179207d3425$var$search","__","k","gid","discard","turn","splice","shuffle","summon","mclear","PrematureBurial","removed","mremove","Reload","self","sangan","Sangan","id1","reveal","CMP","console","log","RoyalMagicalLibrary","spell","play","prefix","pop","$365bb179207d3425$var$ARCHFIEND","sid","t","tribute","did","$365bb179207d3425$var$onPlay","Error","findIndex","$365bb179207d3425$var$onTarget","$365bb179207d3425$var$onSearch","Set","has","$365bb179207d3425$var$initialize","State","create","Random","seed","undo","redo","cancel","CLICKABLE","Element","parentElement","c","classList","contains","preventDefault","stopPropagation","which","keyCode","pool","$ahpAG","URL","$13b0d6eb21343cd3$exports","pathname","then","r","catch","error","terminate","getBundleURL","resolve","arg","hash","search","OPTIONS","n","isNaN","random","$365bb179207d3425$var$start"],"version":3,"file":"index.d0da8d1a.js.map"}
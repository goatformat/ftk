{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-52df62d3559cdc26.js","html/sim/swipe.ts","html/sim/sim.ts","node_modules/@parcel/runtime-js/lib/runtime-adde320768490017.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gcU1a\\\":\\\"index.0be02ab5.js\\\",\\\"4bfU0\\\":\\\"worker.f8fc40e1.js\\\",\\\"ftUP3\\\":\\\"index.57cffd17.js\\\",\\\"77teK\\\":\\\"index.69b6619e.css\\\",\\\"1Lmeo\\\":\\\"index.6ae41682.js\\\"}\"));","/* ! Modified from John Doherty's MIT-licensed https://github.com/john-doherty/swiped-events */\n(() => {\n  'use strict';\n\n  const THRESHOLD = 100;\n  const TIMEOUT = 500;\n\n  let downX: number | null = null;\n  let downY: number | null = null;\n  let diffX = 0;\n  let diffY = 0;\n  let timeDown: number | null = null;\n  let startElement: EventTarget | null = null;\n\n  if (typeof window.CustomEvent !== 'function') {\n    // @ts-ignore\n    window.CustomEvent = (event: string, params: any) => {\n      params = params || {bubbles: false, cancelable: false, detail: undefined};\n      const e = document.createEvent('CustomEvent');\n      e.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return e;\n    };\n\n    // @ts-ignore\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n\n  function handleTouchEnd(e: TouchEvent) {\n    if (startElement !== e.target) return;\n\n    const timeDiff = Date.now() - timeDown!;\n    let eventType = '';\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (Math.abs(diffX) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffX > 0) {\n          eventType = 'swiped-left';\n        } else {\n          eventType = 'swiped-right';\n        }\n      }\n    } else {\n      if (Math.abs(diffY) > THRESHOLD && timeDiff < TIMEOUT) {\n        if (diffY > 0) {\n          eventType = 'swiped-up';\n        } else {\n          eventType = 'swiped-down';\n        }\n      }\n    }\n\n    if (eventType) {\n      startElement!.dispatchEvent(new CustomEvent(eventType, {bubbles: true, cancelable: true}));\n    }\n\n    downX = null;\n    downY = null;\n    timeDown = null;\n  }\n\n  function handleTouchStart(e: TouchEvent) {\n    startElement = e.target;\n\n    timeDown = Date.now();\n    downX = e.touches[0].clientX;\n    downY = e.touches[0].clientY;\n    diffX = 0;\n    diffY = 0;\n  }\n\n  function handleTouchMove(e: TouchEvent) {\n    if (!downX || !downY) return;\n    diffX = downX - e.touches[0].clientX;\n    diffY = downY - e.touches[0].clientY;\n  }\n\n  document.addEventListener('touchstart', handleTouchStart, false);\n  document.addEventListener('touchmove', handleTouchMove, false);\n  document.addEventListener('touchend', handleTouchEnd, false);\n})();\n","import * as workerpool from 'workerpool';\n\nimport {State, Random, ID, DeckID, Card, DATA, FieldID, Location, Ids} from '../../src';\nimport {createElement, renderState, track, makeCard, CMP} from '../common';\n\nimport './swipe';\n\ntype Action = {\n  type: 'play' | 'win' | 'lose';\n} | ActionState & ({\n  type: 'target';\n} | {\n  type: 'search';\n  options: [Location, number][];\n});\n\ninterface ActionState {\n  origin: {location: Location; i: number};\n  filter: (location: Location, id: FieldID) => boolean;\n  fn: (location: Location, ...j: number[]) => void;\n  num: number;\n  targets: [Location, number][];\n}\n\ninterface Context {\n  state: State;\n  banished: DeckID[];\n  graveyard: ID[];\n  action: Action;\n}\n\nconst NUM = (window.location.hash && +window.location.hash.slice(1)) ||\n  (window.location.search && +window.location.search.slice(1)) ||\n  ~~(Math.random() * (2 ** 31 - 1));\nconsole.log('Seed:', NUM);\n\nconst START = State.create(new Random(Random.seed(NUM)), true);\n\nconst STATE = {\n  stack: [{\n    state: START,\n    banished: [],\n    graveyard: [],\n    action: {type: 'play'},\n  } as Context],\n  index: 0,\n};\n\nfunction update(mutate = true) {\n  const $content = document.getElementById('content')!;\n  while ($content.firstChild) $content.removeChild($content.firstChild);\n\n  const {state: s, banished, graveyard, action} = STATE.stack[STATE.index];\n  const trace = renderTrace(s, banished, graveyard, mutate);\n\n  const wrapper = createElement('div', 'wrapper');\n  wrapper.appendChild(renderState(s, banished, graveyard, handler, transform, true, NUM));\n\n  if (action.type === 'win' || !s.clone().next().length) {\n    const modal = createElement('div', 'modal', 'end', action.type === 'win' ? 'win' : 'lose');\n    const a = createElement('a');\n    a.href = `../trace?${NUM}`;\n    const end = createElement('h1');\n    end.textContent = `You ${action.type === 'win' ? 'Win' : 'Lose'}`;\n    a.appendChild(end);\n    modal.appendChild(a);\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    wrapper.appendChild(overlay);\n\n    // TODO: add restart\n  } else if (action.type === 'search') {\n    const modal = createElement('div', 'modal');\n\n    const zone = createElement('div', 'zone', 'search');\n    for (const [location, i] of action.options.sort((a, b) => s[a[0]][a[1]].localeCompare(s[b[0]][b[1]]))) {\n      const id = s[location][i] as FieldID;\n      const card = ID.decode(id);\n      zone.appendChild(makeCard(card, () => handler(location, id, i), {\n        hold: true,\n        className: transform(location, id, i, true),\n      }));\n    }\n    modal.appendChild(zone);\n\n    wrapper.appendChild(modal);\n    const overlay = createElement('div', 'modal-overlay');\n    overlay.addEventListener('click', () => {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      if (action.num > 1 && action.targets.length) {\n        return action.fn(action.targets[0][0], action.targets[0][1]);\n      } else {\n        update();\n      }\n    }, {once: true});\n    wrapper.appendChild(overlay);\n  }\n\n  $content.appendChild(wrapper);\n  if (trace) {\n    $content.appendChild(trace);\n    trace.scrollTop = trace.scrollHeight;\n  }\n}\n\nfunction renderTrace(s: State, banished: DeckID[], graveyard: ID[], mutate = true) {\n  if (!s.trace?.length) return undefined;\n\n  const trace = createElement('div', 'trace');\n  let p = createElement('p');\n  let ul = createElement('ul');\n\n  let last = '';\n  let major = 0;\n  for (const line of s.trace) {\n    const minor = line.startsWith('  ');\n    if (!minor) {\n      if (major) {\n        p.appendChild(ul);\n        ul = createElement('ul');\n        trace.appendChild(p);\n        p = createElement('p');\n      }\n      last = line;\n      major++;\n\n      const span = createElement('span');\n      span.innerHTML = line.replace(/\"(.*?)\"/g, (_, g: string) => `\"<b>${g}</b>\"`);\n      p.appendChild(span);\n    } else {\n      const li = createElement('li');\n      li.textContent = line;\n      ul.appendChild(li);\n    }\n  }\n\n  p.appendChild(ul);\n  ul = createElement('ul');\n  trace.appendChild(p);\n\n  if (last && mutate) {\n    const activated = (last.startsWith('Activate') ? DATA[/\"(.*?)\"/.exec(last)![1]].id\n      : last.startsWith('Set') ? DATA[/then activate(?: face-down)? \"(.*?)\"/.exec(last)![1]].id\n      : undefined);\n    track(s.banished, banished, activated);\n    track(s.graveyard, graveyard, activated);\n  }\n\n  return trace;\n}\n\nfunction SPELL(fn?: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.remove(location, i);\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    if (card.type === 'Spell' && card.subType === 'Continuous') {\n      s.add('spells', card.id);\n    } else {\n      s.add('graveyard', card.id);\n    }\n    if (fn) fn(s);\n    s.inc();\n    update();\n  };\n}\n\n// TODO: support guessing\nfunction ARCHFIEND(s: State, location: 'hand' | 'spells', i: number, card: Card) {\n  const play = location === 'hand' || ID.facedown(s[location][i]);\n  const prefix = play\n    ? `Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\" then pay`\n    : 'Pay';\n  s.major(`${prefix} 500 LP (${s.lifepoints} -> ${s.lifepoints - 500}) to activate effect of \"${card.name}\"`);\n  s.lifepoints -= 500;\n  if (s.known()) {\n    s.minor(`Declare \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n    s.draw();\n  } else {\n    s.minor('Declare \"Blue-Eyes White Dragon\"');\n    const reveal = ID.decode(s.deck.pop()!);\n    s.minor(`Excavate \"${reveal.name}\"`);\n    s.add('graveyard', reveal.id);\n  }\n  s.remove(location, i);\n  s.add('spells', `${card.id}1` as FieldID);\n  if (play) s.inc();\n\n  update();\n}\n\nfunction SANGAN_TARGET(location: Location, id: FieldID) {\n  const card = ID.decode(id);\n  return location === 'deck' && card.type === 'Monster' && card.atk <= 1500;\n}\n\nfunction RELOAD(fn: (s: State) => void) {\n  return (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    const spells = s.spells.length;\n    let max: number;\n    if (location === 'hand') {\n      const hand = s.hand.filter((id, j) => i !== j && ID.decode(id).type === 'Spell');\n      max = Math.min(5 - spells - 1, hand.length, s.hand.length - 2);\n    } else {\n      const hand = s.hand.filter(id => ID.decode(id).type === 'Spell');\n      max = Math.min(5 - spells, hand.length, s.hand.length - 1);\n    }\n\n    const before = s.hand.slice();\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type === 'Spell', (_, ...set) => {\n      // NOTE: if location === 'hand' we need to adjust the offsets of any cards we set!\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n\n      const ids = [];\n      for (const [offset, j] of set.entries()) {\n        const id = before[j];\n        ids.push(id);\n        s.add('spells', `(${id})` as FieldID);\n        s.remove('hand', j - offset - (location === 'hand' && i < j ? 1 : 0));\n      }\n      if (ids.length) {\n        s.major(`Set ${ID.names(ids)} face-down then activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      } else {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      }\n      const len = s.hand.length;\n      fn(s);\n      s.hand = [];\n      s.draw(len);\n      s.inc();\n      update();\n    }, -max);\n  };\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction CAN_QUIZ(s: State) {\n  // NOTE: we have to clone for the termination check because it mutates the final state\n  if (!s.clone().end(false)) return false;\n  // The lookahead parameter only covers the A Feather of the Phoenix, end() will still return true\n  // if Black Pendant isn't actually equipped yet (but is equippable).\n  return s.spells.some(id => ID.id(id) === Ids.BlackPendant && !ID.facedown(id));\n}\n\n// TODO: allow playing if multi-turn is supported\nfunction QUIZ(s: State, location: 'hand' | 'spells') {\n  if (!CAN_QUIZ(s)) return;\n\n  const known = s.known(true)!;\n  // NOTE: We already checked that Black Pendant is equipped\n  s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"Reversal Quiz\"`);\n  // Filter out Reversal Quiz from the messages about what gets sent to the Graveyard\n  const hand = s.hand.filter(id => ID.id(id) !== Ids.ReversalQuiz);\n  if (hand.length) s.minor(`Send ${ID.names(hand)} from hand to Graveyard`);\n  s.graveyard.push(...hand);\n  s.hand = [];\n\n  const ids = s.monsters.map(id => ID.id(id));\n  s.graveyard.push(...ids);\n  s.monsters = [];\n\n  for (const id of s.spells) {\n    const card = ID.decode(id);\n    if (card.id !== Ids.ReversalQuiz) {\n      continue;\n    } else if (!ID.facedown(id)) {\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.graveyard.push(card.id);\n    ids.push(card.id);\n  }\n  s.spells = [];\n  s.graveyard.sort();\n  if (ids.length) s.minor(`Send ${ID.names(ids)} from field to Graveyard`);\n\n  // Reversal Quiz isn't actually in the Graveyard at the point when the game is won\n  s.add('spells', Ids.ReversalQuiz);\n  // TODO: consider visually displaying the revealed card?\n  s.minor(`Call \"${ID.decode(known).type}\", reveal \"${ID.decode(s.deck[s.deck.length - 1]).name}\"`);\n  s.major(`After exchanging Life Points, opponent has ${s.lifepoints} LP and then takes 500 damage from \"Black Pendant\" being sent from the field to the Graveyard`);\n\n  STATE.stack[STATE.index].action = {type: 'win'};\n  update();\n}\n\nconst SPELLS: { [name: string]: any } = {\n  'A Feather of the Phoenix': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'hand', (_, j) => {\n      search({location, i}, loc => loc === 'graveyard', (__, k) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\"`);\n        const gid = s.remove('graveyard', k);\n        s.minor(`Return \"${ID.decode(gid).name}\" in the Graveyard to the top of the Deck`);\n        if (location === 'hand') {\n          s.discard(i < j ? [i, j] : [j, i]);\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.add('graveyard', s.remove('hand', j));\n        }\n        s.deck.push(`(${gid})` as DeckID);\n        s.inc();\n        update();\n      });\n    });\n  },\n  'Archfiend\\'s Oath': SPELL(),\n  'Black Pendant': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, loc => loc === 'monsters', (_, j) => {\n      s.remove(location, i);\n      s.major(`${location === 'spells' ? `Flip face-down \"${card.name}\" and equip` : `Equip \"${card.name}\"`} to \"${ID.decode(s.monsters[j]).name}\"`);\n      s.add('spells', `${card.id}${j}` as FieldID);\n      s.inc();\n      update();\n    });\n  },\n  'Card Destruction': RELOAD(s => {\n    for (const id of s.hand) {\n      s.add('graveyard', id);\n    }\n    s.minor(`Discard ${ID.names(s.hand)}`);\n  }),\n  'Convulsion of Nature': SPELL(s => s.reverse()),\n  'Different Dimension Capsule': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, loc => loc === 'deck', (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('spells', `${card.id}${s.turn}` as FieldID);\n      s.minor(`Banish ${ID.decode(s.deck[j]).name} from the deck face-down`);\n      s.add('banished', `(${ID.id(s.deck.splice(j, 1)[0])})` as DeckID);\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Giant Trunade': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('hand', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Return ${ID.names(s.spells)} to hand`);\n    s.spells = [];\n  }),\n  'Graceful Charity': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    s.remove(location, i);\n    i = s.add('spells', card.id);\n    s.draw(3);\n    update(); // FIXME bad partial state\n    // NOTE: we deliberately set the wrong index for the card so that it can't be cancelled\n    target({location: 'spells', i: -1}, loc => loc === 'hand', (_, j, k) => {\n      s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n      s.discard([j, k]); // PRECONDITION: j < k\n      s.remove('spells', i);\n      s.add('graveyard', card.id);\n      s.inc();\n      update();\n    }, 2);\n  },\n  'Level Limit - Area B': SPELL(),\n  'Pot of Greed': SPELL(s => s.draw(2)),\n  'Premature Burial': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Monster', (_, j) => {\n      s.major(`Pay 800 LP (${s.lifepoints} -> ${s.lifepoints - 800}) to activate effect of \"${card.name}\"`);\n      s.minor(`Special Summon \"${ID.decode(s.graveyard[j]).name}\" in Attack Position from Graveyard`);\n      s.lifepoints -= 800;\n      const gid = s.remove('graveyard', j);\n      const zone = s.summon(gid, true);\n      s.remove(location, i);\n      s.add('spells', `${card.id}${zone}` as FieldID);\n      s.inc(zone);\n      update();\n    });\n  },\n  'Heavy Storm': SPELL(s => {\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      s.add('graveyard', card.id);\n      if (ID.facedown(id)) continue;\n      if (card.id === Ids.ConvulsionOfNature) {\n        s.reverse(true);\n      } else if (card.id === Ids.BlackPendant) {\n        s.mclear(ID.data(id));\n      } else if (card.id === Ids.PrematureBurial) {\n        const removed = s.mremove(ID.data(id));\n        s.add('graveyard', removed.id);\n        s.minor(`Sending \"${ID.decode(removed.id).name}\" to the Graveyard after its equipped \"${ID.decode(id).name}\" was destroyed`);\n      } else if (card.id === Ids.DifferentDimensionCapsule) {\n        s.banish();\n      }\n    }\n    s.minor(`Send ${ID.names(s.spells)} to Graveyard`);\n    s.spells = [];\n  }),\n  'Reload': RELOAD(s => {\n    s.deck.push(...s.hand);\n    s.minor(`Return ${ID.names(s.hand)} to Deck`);\n    s.shuffle();\n  }),\n  'Reversal Quiz': (s: State, location: 'hand' | 'spells', i: number, self: Card) => {\n    let sangan = false;\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${self.name}\"`);\n    if (s.hand.length) {\n      s.minor(`Send ${ID.names(s.hand)} from hand to Graveyard`);\n    }\n    if (s.monsters.length || s.spells.length) {\n      s.minor(`Send ${ID.names([...s.monsters, ...s.spells])} from field to Graveyard`);\n    }\n\n    s.graveyard.push(...s.hand);\n    s.hand = [];\n    for (const id of s.monsters) {\n      const card = ID.decode(id);\n      if (card.id === Ids.Sangan) sangan = true;\n      s.graveyard.push(card.id);\n    }\n    s.monsters = [];\n    for (const id of s.spells) {\n      const card = ID.decode(id);\n      if (!ID.facedown(id)) {\n        if (card.id === Ids.ConvulsionOfNature) {\n          s.reverse(true);\n        } else if (card.id === Ids.DifferentDimensionCapsule) {\n          s.banish();\n        }\n      }\n      s.graveyard.push(card.id);\n    }\n    s.spells = [];\n    s.graveyard.sort();\n\n    const reveal = s.deck[s.deck.length - 1];\n    if (!ID.known(reveal)) s.deck[s.deck.length - 1] = `(${reveal})` as DeckID;\n    s.minor(`Call \"Trap\", reveal \"${ID.decode(reveal).name}\"`);\n    if (!sangan) return update();\n\n    search({location, i}, SANGAN_TARGET, (_, j) => {\n      if (j < 0) {\n        s.minor('Fail to find \"Sangan\" target in Deck');\n      } else {\n        const id = ID.id(s.deck.splice(j, 1)[0]);\n        s.minor(`Add \"${ID.decode(id).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n        s.add('hand', id);\n      }\n      s.shuffle();\n      update();\n    });\n  },\n  'Spell Reproduction': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    target({location, i}, (loc, id) => loc === 'hand' && ID.decode(id).type === 'Spell', (_, j, k) => {\n      search({location, i}, (loc, id) => loc === 'graveyard' && ID.decode(id).type === 'Spell', (__, g) => {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n        const gid = s.remove('graveyard', g);\n        if (location === 'hand') {\n          s.discard([i, j, k].sort(CMP));\n        } else {\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.discard([j, k]); // PRECONDITION: j < k\n        }\n        s.minor(`Add \"${ID.decode(gid).name}\" in the Graveyard to hand`);\n        s.add('hand', gid);\n        s.inc();\n        update();\n      });\n    }, 2);\n  },\n  'Toon Table of Contents': (s: State, location: 'hand' | 'spells', i: number, card: Card) => {\n    search({location, i}, (loc, id) => loc === 'deck' && ID.decode(id).name.startsWith('Toon'), (_, j) => {\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n      if (j < 0) {\n        s.minor('Fail to find \"Toon\" card in Deck');\n      } else {\n        s.minor(`Add \"${ID.decode(s.deck[j]).name}\" from Deck to hand`);\n        s.add('hand', ID.id(s.deck.splice(j, 1)[0]));\n      }\n      s.shuffle();\n      s.inc();\n      update();\n    });\n  },\n  'Toon World': SPELL(s => {\n    s.minor(`Pay 1000 LP (${s.lifepoints} -> ${s.lifepoints - 1000})`);\n    s.lifepoints -= 1000;\n  }),\n  'Upstart Goblin': SPELL(s => s.draw()),\n};\n\nfunction handler(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  console.log(action, location, id, i); // DEBUG\n  switch (action.type) {\n  case 'play': return onPlay(location, id, i);\n  case 'target': return onTarget(location, id, i);\n  case 'search': return onSearch(location, id, i);\n  }\n}\n\nfunction onPlay(location: Location, id: FieldID, i: number) {\n  const state = STATE.stack[STATE.index].state;\n\n  const card = ID.decode(id);\n  switch (location) {\n  case 'monsters': {\n    if (card.id === Ids.RoyalMagicalLibrary) {\n      if (ID.facedown(id) || ID.data(id) !== 3 || !state.deck.length) return;\n      state.major(`Remove 3 Spell Counters from \"${card.name}\"`);\n      state.mclear(i);\n      state.draw();\n      return update();\n    }\n    return;\n  }\n  case 'spells': {\n    if (card.type !== 'Spell' || !card.can(state, location)) return;\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (ID.facedown(id)) {\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    } else if (card.id === Ids.ArchfiendsOath && !ID.data(id)) {\n      ARCHFIEND(state, location, i, card);\n    }\n    return;\n  }\n  case 'hand': {\n    if (card.id === Ids.ReversalQuiz) {\n      QUIZ(state, location);\n    } else if (card.id === Ids.ThunderDragon) {\n      const find = (s: State) => {\n        search({location, i}, (loc, sid) => loc === 'deck' && ID.id(sid) === Ids.ThunderDragon, (_, ...targets) => {\n          s.major(`Discard \"${card.name}\"`);\n          s.remove('hand', i);\n          s.add('graveyard', card.id);\n          if (targets.length === 2) {\n            s.minor(`Add 2 \"${card.name}\" from Deck to hand`);\n            // PRECONDITION: targets[0] < targets[1]\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n            s.add('hand', ID.id(s.deck.splice(targets[1] - 1, 1)[0]));\n          } else if (targets[0] >= 0) {\n            s.minor(`Add \"${card.name}\" from Deck to hand`);\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n          } else {\n            s.minor(`Fail to find \"${card.name}\" in Deck`);\n          }\n          s.shuffle();\n          update();\n        }, 2);\n      };\n\n      if (state.monsters.length && state.monsters.length < 5 && !state.summoned) {\n        target({location, i}, loc => loc === 'deck' || loc === 'monsters', (loc, j) => {\n          if (loc === 'deck') {\n            find(state);\n          } else {\n            const t = ID.decode(state.monsters[j]);\n            state.major(`Tribute \"${t.name}\" to Summon \"${self.name}\"`);\n            state.tribute(j, i);\n            if (t.id === Ids.Sangan) {\n              search({location, i}, SANGAN_TARGET, (_, k) => {\n                if (k < 0) {\n                  state.minor('Fail to find \"Sangan\" target in Deck');\n                } else {\n                  const did = ID.id(state.deck.splice(k, 1)[0]);\n                  state.minor(`Add \"${ID.decode(did).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n                  state.add('hand', did);\n                }\n                state.shuffle();\n                update();\n              });\n            } else {\n              update();\n            }\n          }\n        });\n      } else {\n        find(state);\n      }\n    } else if (card.type === 'Monster') {\n      if (state.monsters.length >= 5 || state.summoned) return;\n      state.remove(location, i);\n      state.major(`Summon \"${card.name}\" in Attack Position`);\n      state.summon(card.id);\n      return update();\n    } else {\n      if (state.spells.length >= 5 || !card.can(state, location)) return;\n      const spell = SPELLS[card.name];\n      if (spell) spell(state, location, i, card);\n    }\n  }\n  }\n}\n\nfunction target(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  if (num === 0) return fn(origin.location);\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['hand' | 'spells' | 'monsters' | 'deck', number][] = [];\n  for (const location of ['hand', 'spells', 'monsters'] as const) {\n    for (const [i, id] of state[location].entries()) {\n      if (location === origin.location && i === origin.i) continue;\n      if (filter(location, id)) targets.push([location, i]);\n    }\n  }\n  if (state.deck.length && filter('deck', state.deck[state.deck.length - 1] as FieldID)) {\n    targets.push(['deck', state.deck.length - 1]);\n  }\n\n  if (num > 0 && targets.length === num) {\n    // PRECONDITION: new Set(targets.map(t => t[0])).size === 1\n    return fn(targets[0][0], ...targets.map(t => t[1]).sort(CMP));\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'target',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n    };\n    update();\n  }\n}\n\nfunction onTarget(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'target') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num < 0) {\n      if (action.targets.length) {\n        // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n        return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n      } else {\n        return action.fn(location);\n      }\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nfunction transform(location: Location, id: FieldID, i: number, isSearch = false) {\n  const {state, action} = STATE.stack[STATE.index];\n  if (action.type === 'play') {\n    const card = ID.decode(id);\n    if (card.id === Ids.ReversalQuiz && !CAN_QUIZ(state)) return 'disabled';\n    const can = card.type === 'Spell'\n      ? (location === 'hand'\n        ? state.spells.length < 5 && card.can(state, location)\n        : ID.facedown(id)\n          ? card.can(state, location as 'spells')\n          : (card.id === Ids.ArchfiendsOath && !ID.data(id) && state.deck.length))\n      : (location === 'hand'\n        ? ((!state.summoned && state.monsters.length < 5) ||\n          (card.id === Ids.ThunderDragon && state.deck.length))\n        : (ID.data(id) === 3 && state.deck.length));\n    return can ? undefined : 'disabled';\n  } else if (action.type === 'target' || action.type === 'search') {\n    if (location === action.origin.location && i === action.origin.i) return 'selected';\n    if (!action.filter(location, id)) return 'disabled';\n    if (action.targets.find(([loc, j]) => loc === location && j === i)) {\n      if (!isSearch && action.type === 'search' && location === action.options[0][0]) {\n        return undefined;\n      }\n      return 'option';\n    }\n    return undefined;\n  }\n  return undefined;\n}\n\nfunction search(\n  origin: {location: Location; i: number},\n  filter: (location: Location, id: FieldID) => boolean,\n  fn: (location: Location, ...j: number[]) => void,\n  num = 1\n) {\n  const state = STATE.stack[STATE.index].state;\n\n  const targets: ['graveyard' | 'deck', number][] = [];\n  const ids = new Set<FieldID>();\n  for (const location of ['graveyard', 'deck'] as const) {\n    for (const [i, id] of state[location].entries()) {\n      if (location === origin.location && i === origin.i || ids.has(id as FieldID)) continue;\n      if (filter(location, id as FieldID)) {\n        if (num === 1) ids.add(id as FieldID);\n        targets.push([location, i]);\n      }\n    }\n  }\n\n  if (targets.length === 0) {\n    fn('hand', -1); // NOTE: we don't actually have a valid location...\n  } else if (targets.length === 1) {\n    return fn(targets[0][0], targets[0][1]);\n  } else {\n    STATE.stack[STATE.index].action = {\n      type: 'search',\n      origin,\n      filter,\n      fn,\n      num,\n      targets: [],\n      options: targets,\n    };\n    update();\n  }\n}\n\nfunction onSearch(location: Location, id: FieldID, i: number) {\n  const action = STATE.stack[STATE.index].action;\n  if (action.type !== 'search') throw new Error(`Invalid action type ${action.type}`);\n\n  if (location === action.origin.location && i === action.origin.i) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    if (action.num > 1 && action.targets.length) {\n      return action.fn(action.targets[0][0], action.targets[0][1]);\n    } else {\n      update();\n    }\n  } else if (action.filter(location, id)) {\n    const remove = action.targets.findIndex(([loc, j]) => loc === location && j === i);\n    if (remove >= 0) {\n      action.targets.splice(remove, 1);\n    } else {\n      action.targets.push([location, i]);\n    }\n\n    if (action.targets.length === Math.abs(action.num)) {\n      STATE.stack[STATE.index].action = {type: 'play'};\n      // PRECONDITION: new Set(action.targets.map(t => t[0])).size === 1\n      return action.fn(action.targets[0][0], ...action.targets.map(t => t[1]).sort(CMP));\n    } else {\n      update();\n    }\n  }\n}\n\nupdate();\n\nconst undo = () => {\n  // if (STATE.index) {\n  //   STATE.index--;\n  //   update(false);\n  // }\n};\n\nconst redo = () => {\n  // if (STATE.index < STATE.stack.length - 1) {\n  //   STATE.index++;\n  //   update(false);\n  // }\n};\n\nconst cancel = () => {\n  const action = STATE.stack[STATE.index].action;\n  if ((action.type === 'target' || action.type === 'search') && action.origin.i >= 0) {\n    STATE.stack[STATE.index].action = {type: 'play'};\n    update();\n  }\n};\n\nconst CLICKABLE = ['modal', 'modal-overlay', 'card'];\ndocument.addEventListener('click', e => {\n  if (e.target instanceof Element) {\n    for (let p: Element | null = e.target; p; p = p.parentElement) {\n      if (CLICKABLE.some(c => p!.classList.contains(c))) {\n        return true;\n      }\n    }\n  }\n  cancel();\n  e.preventDefault();\n  e.stopPropagation();\n  return false;\n});\ndocument.addEventListener('swiped-left', undo);\ndocument.addEventListener('swiped-right', redo);\ndocument.addEventListener('keydown', e => {\n  const key = e.which || e.keyCode;\n  switch (key) {\n  case 27:\n    cancel();\n    break;\n  case 37:\n    undo();\n    break;\n  case 39:\n    redo();\n    break;\n  default:\n    return true;\n  }\n\n  e.preventDefault();\n  e.stopPropagation();\n  return false;\n});\n\n/* eslint-disable @typescript-eslint/no-floating-promises */\nconst pool = workerpool.pool(new URL('./worker.ts', import.meta.url).pathname);\npool.exec('search', [START.toString(), 42, 1e6, false, 0.5]).then(r => {\n  console.log('Path:', r);\n}).catch(e => {\n  console.error(e);\n}).then(() => {\n  pool.terminate();\n});\n","module.exports = require('./helpers/bundle-url').getBundleURL('gcU1a') + \"../\" + require('./helpers/bundle-manifest').resolve(\"4bfU0\");"],"names":["parcelRequire","register","JSON","parse","downX","downY","diffX","diffY","timeDown","startElement","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","e","document","createEvent","initCustomEvent","prototype","Event","addEventListener","target","Date","now","touches","clientX","clientY","timeDiff","eventType","Math","abs","dispatchEvent","$365bb179207d3425$var$NUM","location","hash","slice","search","random","console","log","$365bb179207d3425$var$START","$l7khe","State","create","Random","seed","$365bb179207d3425$var$STATE","stack","state","banished","graveyard","action","type","index","$365bb179207d3425$var$update","mutate","$content","getElementById","firstChild","removeChild","s","trace","length","$iPHaw","createElement","p","ul","last","major","line","startsWith","li","textContent","appendChild","span","innerHTML","replace","_","g","activated","DATA","exec","id","track","$365bb179207d3425$var$renderTrace","wrapper","renderState","$365bb179207d3425$var$handler","$365bb179207d3425$var$transform","clone","next","modal","zone","i","options","sort","a","b","localeCompare","card","ID","decode","makeCard","hold","className","overlay","num","targets","fn","once","href","end","scrollTop","scrollHeight","$365bb179207d3425$var$SPELL","remove","name","subType","add","inc","$365bb179207d3425$var$SANGAN_TARGET","atk","$365bb179207d3425$var$RELOAD","spells","max","hand","filter","j","min","before","$365bb179207d3425$var$target","loc","set","ids","offset","entries","push","names","len","draw","$365bb179207d3425$var$CAN_QUIZ","some","Ids","BlackPendant","facedown","$365bb179207d3425$var$QUIZ","known","ReversalQuiz","minor","monsters","map","ConvulsionOfNature","reverse","DifferentDimensionCapsule","banish","deck","lifepoints","$365bb179207d3425$var$SPELLS","$365bb179207d3425$var$search","__","k","gid","discard","turn","splice","shuffle","summon","mclear","data","PrematureBurial","removed","mremove","Reload","self","sangan","Sangan","id1","reveal","CMP","RoyalMagicalLibrary","can","spell","ArchfiendsOath","play","prefix","pop","$365bb179207d3425$var$ARCHFIEND","ThunderDragon","find","sid","summoned","t","tribute","did","$365bb179207d3425$var$onPlay","Error","origin","findIndex","$365bb179207d3425$var$onTarget","$365bb179207d3425$var$onSearch","isSearch","Set","has","$365bb179207d3425$var$undo","$365bb179207d3425$var$redo","$365bb179207d3425$var$cancel","$365bb179207d3425$var$CLICKABLE","Element","parentElement","c","classList","contains","preventDefault","stopPropagation","which","keyCode","$13b0d6eb21343cd3$exports","getBundleURL","resolve","$365bb179207d3425$var$pool","$ahpAG","pool","URL","pathname","toString","then","r","catch","error","terminate"],"version":3,"file":"index.0be02ab5.js.map"}
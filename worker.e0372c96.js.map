{"mappings":"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","sources":[".parcel/workerpool/index.js","node_modules/process/browser.js",".parcel/src/ids.ts",".parcel/src/random.ts",".parcel/src/search.ts",".parcel/src/deck.json",".parcel/src/weights.json",".parcel/src/state.ts",".parcel/src/data.ts","html/sim/worker.ts"],"sourcesContent":["/**\n * workerpool.js\n * https://github.com/josdejong/workerpool\n *\n * Offload tasks to a pool of workers on node.js and in the browser.\n *\n * @version 6.1.5\n * @date    2021-06-17\n *\n * @license\n * Copyright (C) 2014-2020 Jos de Jong <wjosdejong@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy\n * of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"workerpool\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"workerpool\"] = factory();\n\telse\n\t\troot[\"workerpool\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 345:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar Promise = __webpack_require__(219);\n\nvar WorkerHandler = __webpack_require__(751);\n\nvar environment = __webpack_require__(828);\n\nvar DebugPortAllocator = __webpack_require__(833);\n\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers\n * @param {String} [script]   Optional worker script\n * @param {WorkerPoolOptions} [options]  See docs\n * @constructor\n */\n\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    this.script = script || null;\n  } else {\n    this.script = null;\n    options = script;\n  }\n\n  this.workers = []; // queue with all workers\n\n  this.tasks = []; // queue with tasks awaiting execution\n\n  options = options || {};\n  this.forkArgs = options.forkArgs || [];\n  this.forkOpts = options.forkOpts || {};\n  this.debugPortStart = options.debugPortStart || 43210;\n  this.nodeWorker = options.nodeWorker;\n  this.workerType = options.workerType || options.nodeWorker || 'auto';\n  this.maxQueueSize = options.maxQueueSize || Infinity; // configuration\n\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    this.maxWorkers = options.maxWorkers;\n  } else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if (options.minWorkers === 'max') {\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers); // in case minWorkers is higher than maxWorkers\n    }\n\n    this._ensureMinWorkers();\n  }\n\n  this._boundNext = this._next.bind(this);\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n *\n * @param {String | Function} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Array} [params]  Function arguments applied when calling the function\n * @param {ExecOptions} [options]  Options object\n * @return {Promise.<*, Error>} result\n */\n\n\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    } // add a new task to the queue\n\n\n    var tasks = this.tasks;\n    var task = {\n      method: method,\n      params: params,\n      resolver: resolver,\n      timeout: null,\n      options: options\n    };\n    tasks.push(task); // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n\n    var originalTimeout = resolver.promise.timeout;\n\n    resolver.promise.timeout = function timeout(delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      } else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    }; // trigger task execution\n\n\n    this._next();\n\n    return resolver.promise;\n  } else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params]);\n  } else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. The methods always return a promise.\n *\n * @return {Promise.<Object, Error>} proxy\n */\n\n\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods').then(function (methods) {\n    var proxy = {};\n    methods.forEach(function (method) {\n      proxy[method] = function () {\n        return pool.exec(method, Array.prototype.slice.call(arguments));\n      };\n    });\n    return proxy;\n  });\n};\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @protected\n */\n\n\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n    // find an available worker\n    var worker = this._getWorker();\n\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift(); // check if the task is still pending (and not cancelled -> promise rejected)\n\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver, task.options).then(me._boundNext)[\"catch\"](function () {\n          // if the worker crashed and terminated, remove it from the pool\n          if (worker.terminated) {\n            return me._removeWorker(worker);\n          }\n        }).then(function () {\n          me._next(); // trigger next task in the queue\n\n        }); // start queued timer now\n\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\n\n\nPool.prototype._getWorker = function () {\n  // find a non-busy worker\n  var workers = this.workers;\n\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @protected\n */\n\n\nPool.prototype._removeWorker = function (worker) {\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort); // _removeWorker will call this, but we need it to be removed synchronously\n\n  this._removeWorkerFromList(worker); // If minWorkers set, spin up new workers to replace the crashed ones\n\n\n  this._ensureMinWorkers(); // terminate the worker (if not already terminated)\n\n\n  return new Promise(function (resolve, reject) {\n    worker.terminate(false, function (err) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @protected\n */\n\n\nPool.prototype._removeWorkerFromList = function (worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\n\n\nPool.prototype.terminate = function (force, timeout) {\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function f(worker) {\n    this._removeWorkerFromList(worker);\n  };\n\n  var removeWorker = f.bind(this);\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout).then(removeWorker);\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\n\n\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n  return {\n    totalWorkers: totalWorkers,\n    busyWorkers: busyWorkers,\n    idleWorkers: totalWorkers - busyWorkers,\n    pendingTasks: this.tasks.length,\n    activeTasks: busyWorkers\n  };\n};\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @protected\n */\n\n\nPool.prototype._ensureMinWorkers = function () {\n  if (this.minWorkers) {\n    for (var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\n\n\nPool.prototype._createWorkerHandler = function () {\n  return new WorkerHandler(this.script, {\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType\n  });\n};\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\n\n\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\n\n\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\n\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\n\n\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n\n/***/ }),\n\n/***/ 219:\n/***/ (function(module) {\n\n\"use strict\";\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n *\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\n\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = []; // status\n\n  this.resolved = false;\n  this.rejected = false;\n  this.pending = true;\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolve, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n\n  var _process = function _process(onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n\n    _onFail.push(onFail);\n  };\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @param {Function} onSuccess\n   * @param {Function} [onFail]\n   * @returns {Promise} promise\n   */\n\n\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail ? _then(onFail, resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n\n\n  var _resolve2 = function _resolve(result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function _process(onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve2 = _reject2 = function _reject() {};\n\n    return me;\n  };\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n\n\n  var _reject2 = function _reject(error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function _process(onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve2 = _reject2 = function _reject() {};\n\n    return me;\n  };\n  /**\n   * Cancel te promise. This will reject the promise with a CancellationError\n   * @returns {Promise} self\n   */\n\n\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    } else {\n      _reject2(new CancellationError());\n    }\n\n    return me;\n  };\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {Promise} self\n   */\n\n\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    } else {\n      var timer = setTimeout(function () {\n        _reject2(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  }; // attach handler passing the resolve and reject functions\n\n\n  handler(function (result) {\n    _resolve2(result);\n  }, function (error) {\n    _reject2(error);\n  });\n}\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\n\n\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      } else {\n        resolve(res);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  };\n}\n/**\n * Add an onFail callback to the Promise\n * @param {Function} onFail\n * @returns {Promise} promise\n */\n\n\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n}; // TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @param {Function} fn\n * @returns {Promise} promise\n */\n\n\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise} promise\n */\n\n\nPromise.all = function (promises) {\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    } else {\n      resolve(results);\n    }\n  });\n};\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\n\n\nPromise.defer = function () {\n  var resolver = {};\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n  return resolver;\n};\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\n\n\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = new Error().stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\nPromise.CancellationError = CancellationError;\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\n\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = new Error().stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\nPromise.TimeoutError = TimeoutError;\nmodule.exports = Promise;\n\n/***/ }),\n\n/***/ 751:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar Promise = __webpack_require__(219);\n\nvar environment = __webpack_require__(828);\n\nvar requireFoolWebpack = __webpack_require__(397);\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\n\n\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n/**\n * If sending `TERMINATE_METHOD_ID` does not cause the child process to exit in this many milliseconds,\n * force-kill the child process.\n */\n\nvar CHILD_PROCESS_EXIT_TIMEOUT = 1000;\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads();\n\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required');\n  }\n\n  return WorkerThreads;\n} // check whether Worker is supported by the browser\n\n\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && ((typeof Worker === \"undefined\" ? \"undefined\" : _typeof(Worker)) !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return requireFoolWebpack('worker_threads');\n  } catch (error) {\n    if (_typeof(error) === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n} // get the default worker script\n\n\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    } // use embedded worker.js\n\n\n    var blob = new Blob([__webpack_require__(670)], {\n      type: 'text/javascript'\n    });\n    return window.URL.createObjectURL(blob);\n  } else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') {\n    // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, Worker);\n  } else if (options.workerType === 'thread') {\n    // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads);\n  } else if (options.workerType === 'process' || !options.workerType) {\n    // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), requireFoolWebpack('child_process'));\n  } else {\n    // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, Worker);\n    } else {\n      // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), requireFoolWebpack('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, Worker) {\n  // create the web worker\n  var worker = new Worker(script);\n  worker.isBrowserWorker = true; // add node.js API to the web worker\n\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n\n  worker.send = function (message) {\n    this.postMessage(message);\n  };\n\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads) {\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: false,\n    // automatically pipe worker.STDOUT to process.STDOUT\n    stderr: false // automatically pipe worker.STDERR to process.STDERR\n\n  });\n  worker.isWorkerThread = true; // make the worker mimic a child_process\n\n  worker.send = function (message) {\n    this.postMessage(message);\n  };\n\n  worker.kill = function () {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function () {\n    this.terminate();\n  };\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(script, options.forkArgs, options.forkOpts);\n  worker.isChildProcess = true;\n  return worker;\n} // add debug flags to child processes if the node inspector is active\n\n\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n  var execArgv = [];\n\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function (arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg);\n    }\n  });\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || []).concat(execArgv)\n    })\n  });\n}\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\n\n\nfunction objectToError(obj) {\n  var temp = new Error('');\n  var props = Object.keys(obj);\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]];\n  }\n\n  return temp;\n}\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {WorkerPoolOptions} _options See docs\n * @constructor\n */\n\n\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort; // The ready message is only sent if the worker.add method is called (And the default script is not used)\n\n  if (!script) {\n    this.worker.ready = true;\n  } // queue for requests that are received before the worker is ready\n\n\n  this.requestQueue = [];\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n\n      if (task !== undefined) {\n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id]; // test if we need to terminate\n\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          } // resolve the task's promise\n\n\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          } else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      }\n    }\n  }); // reject all running tasks on worker error\n\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n\n    me.processing = Object.create(null);\n  } // send all queued requests to worker\n\n\n  function dispatchQueuedRequests() {\n    var _iterator = _createForOfIteratorHelper(me.requestQueue.splice(0)),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var request = _step.value;\n        me.worker.send(request);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  var worker = this.worker; // listen for worker messages error and exit\n\n  this.worker.on('error', onError);\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n    message += '    workerpool.script: `' + me.script + '`\\n';\n    message += '    spawnArgs: `' + worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n';\n    message += '    stdout: `' + worker.stdout + '`\\n';\n    message += '    stderr: `' + worker.stderr + '`\\n';\n    onError(new Error(message));\n  });\n  this.processing = Object.create(null); // queue with tasks currently in progress\n\n  this.terminating = false;\n  this.terminated = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\n\n\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\n\n\nWorkerHandler.prototype.exec = function (method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  } // generate a unique id for the task\n\n\n  var id = ++this.lastId; // register a new task as being in progress\n\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  }; // build a JSON-RPC request\n\n  var request = {\n    id: id,\n    method: method,\n    params: params\n  };\n\n  if (this.terminated) {\n    resolver.reject(new Error('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request);\n  } else {\n    this.requestQueue.push(request);\n  } // on cancellation, force the worker to terminate\n\n\n  var me = this;\n  return resolver.promise[\"catch\"](function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id]; // terminate worker\n\n      return me.terminateAndNotify(true).then(function () {\n        throw error;\n      }, function (err) {\n        throw err;\n      });\n    } else {\n      throw error;\n    }\n  });\n};\n/**\n * Test whether the worker is working or not\n * @return {boolean} Returns true if the worker is busy\n */\n\n\nWorkerHandler.prototype.busy = function () {\n  return Object.keys(this.processing).length > 0;\n};\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\n\n\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n\n    this.processing = Object.create(null);\n  }\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function cleanup(err) {\n      me.terminated = true;\n\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n\n      me.worker = null;\n      me.terminating = false;\n\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    };\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        if (this.worker.isChildProcess) {\n          var cleanExitTimeout = setTimeout(function () {\n            me.worker.kill();\n          }, CHILD_PROCESS_EXIT_TIMEOUT);\n          this.worker.once('exit', function () {\n            clearTimeout(cleanExitTimeout);\n            me.worker.killed = true;\n            cleanup();\n          });\n\n          if (this.worker.ready) {\n            this.worker.send(TERMINATE_METHOD_ID);\n          } else {\n            this.worker.requestQueue.push(TERMINATE_METHOD_ID);\n          }\n        } else {\n          // worker_thread\n          this.worker.kill();\n          this.worker.killed = true;\n          cleanup();\n        }\n\n        return;\n      } else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n\n        this.worker.killed = true;\n      } else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n\n    cleanup();\n  } else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\n\n\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n\n  if (timeout) {\n    resolver.promise.timeout = timeout;\n  }\n\n  this.terminate(force, function (err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\n\n/***/ }),\n\n/***/ 833:\n/***/ (function(module) {\n\n\"use strict\";\n\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\n\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function (starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS);\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function (port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n/***/ }),\n\n/***/ 828:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar requireFoolWebpack = __webpack_require__(397); // source: https://github.com/flexdinesh/browser-or-node\n\n\nvar isNode = function isNode(nodeProcess) {\n  return typeof nodeProcess !== 'undefined' && nodeProcess.versions != null && nodeProcess.versions.node != null;\n};\n\nmodule.exports.isNode = isNode; // determines the JavaScript platform: browser or node\n\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process) ? 'node' : 'browser'; // determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\n\nvar worker_threads = tryRequireFoolWebpack('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node' ? (!worker_threads || worker_threads.isMainThread) && !process.connected : typeof Window !== 'undefined'; // determines the number of cpus available\n\nmodule.exports.cpus = module.exports.platform === 'browser' ? self.navigator.hardwareConcurrency : requireFoolWebpack('os').cpus().length;\n\nfunction tryRequireFoolWebpack(module) {\n  try {\n    return requireFoolWebpack(module);\n  } catch (err) {\n    return null;\n  }\n}\n\n/***/ }),\n\n/***/ 670:\n/***/ (function(module) {\n\n/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(){var __webpack_exports__={};!function(){var exports=__webpack_exports__,__webpack_unused_export__;function _typeof(r){return(_typeof=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\\\"function\\\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\\\"symbol\\\":typeof r})(r)}var requireFoolWebpack=eval(\\\"typeof require !== 'undefined' ? require : function (module) { throw new Error('Module \\\\\\\" + module + \\\\\\\" not found.') }\\\"),TERMINATE_METHOD_ID=\\\"__workerpool-terminate__\\\",worker={exit:function(){}},WorkerThreads,parentPort;if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)worker.on=function(r,e){addEventListener(r,function(r){e(r.data)})},worker.send=function(r){postMessage(r)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");try{WorkerThreads=requireFoolWebpack(\\\"worker_threads\\\")}catch(error){if(\\\"object\\\"!==_typeof(error)||null===error||\\\"MODULE_NOT_FOUND\\\"!==error.code)throw error}WorkerThreads&&null!==WorkerThreads.parentPort?(parentPort=WorkerThreads.parentPort,worker.send=parentPort.postMessage.bind(parentPort),worker.on=parentPort.on.bind(parentPort)):(worker.on=process.on.bind(process),worker.send=process.send.bind(process),worker.on(\\\"disconnect\\\",function(){process.exit(1)}),worker.exit=process.exit.bind(process))}function convertError(o){return Object.getOwnPropertyNames(o).reduce(function(r,e){return Object.defineProperty(r,e,{value:o[e],enumerable:!0})},{})}function isPromise(r){return r&&\\\"function\\\"==typeof r.then&&\\\"function\\\"==typeof r.catch}worker.methods={},worker.methods.run=function(r,e){r=new Function(\\\"return (\\\"+r+\\\").apply(null, arguments);\\\");return r.apply(r,e)},worker.methods.methods=function(){return Object.keys(worker.methods)};var currentRequestId=null;worker.on(\\\"message\\\",function(e){if(e===TERMINATE_METHOD_ID)return worker.exit(0);try{var r=worker.methods[e.method];if(!r)throw new Error('Unknown method \\\"'+e.method+'\\\"');currentRequestId=e.id;var o=r.apply(r,e.params);isPromise(o)?o.then(function(r){worker.send({id:e.id,result:r,error:null}),currentRequestId=null}).catch(function(r){worker.send({id:e.id,result:null,error:convertError(r)}),currentRequestId=null}):(worker.send({id:e.id,result:o,error:null}),currentRequestId=null)}catch(r){worker.send({id:e.id,result:null,error:convertError(r)})}}),worker.register=function(r){if(r)for(var e in r)r.hasOwnProperty(e)&&(worker.methods[e]=r[e]);worker.send(\\\"ready\\\")},worker.emit=function(r){currentRequestId&&worker.send({id:currentRequestId,isEvent:!0,payload:r})},__webpack_unused_export__=worker.register,__webpack_unused_export__=worker.emit}()}();\";\n\n/***/ }),\n\n/***/ 397:\n/***/ (function(module) {\n\n// source of inspiration: https://github.com/sindresorhus/require-fool-webpack\nvar requireFoolWebpack = eval('typeof require !== \\'undefined\\' ' + '? require ' + ': function (module) { throw new Error(\\'Module \" + module + \" not found.\\') }');\nmodule.exports = requireFoolWebpack;\n\n/***/ }),\n\n/***/ 744:\n/***/ (function(__unused_webpack_module, exports) {\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\n// source of inspiration: https://github.com/sindresorhus/require-fool-webpack\nvar requireFoolWebpack = eval('typeof require !== \\'undefined\\'' + ' ? require' + ' : function (module) { throw new Error(\\'Module \" + module + \" not found.\\') }');\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\n\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__'; // var nodeOSPlatform = require('./environment').nodeOSPlatform;\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\n\nvar worker = {\n  exit: function exit() {}\n};\n\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n\n  worker.send = function (message) {\n    postMessage(message);\n  };\n} else if (typeof process !== 'undefined') {\n  // node.js\n  var WorkerThreads;\n\n  try {\n    WorkerThreads = requireFoolWebpack('worker_threads');\n  } catch (error) {\n    if (_typeof(error) === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {// no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n  /* if there is a parentPort, we are in a WorkerThread */\n  WorkerThreads.parentPort !== null) {\n    var parentPort = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n  } else {\n    worker.on = process.on.bind(process);\n    worker.send = process.send.bind(process); // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n} else {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  return Object.getOwnPropertyNames(error).reduce(function (product, name) {\n    return Object.defineProperty(product, name, {\n      value: error[name],\n      enumerable: true\n    });\n  }, {});\n}\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\n\n\nfunction isPromise(value) {\n  return value && typeof value.then === 'function' && typeof value[\"catch\"] === 'function';\n} // functions available externally\n\n\nworker.methods = {};\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\n\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(null, arguments);');\n  return f.apply(f, args);\n};\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\n\n\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\nvar currentRequestId = null;\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.exit(0);\n  }\n\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id; // execute the function\n\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result.then(function (result) {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n          currentRequestId = null;\n        })[\"catch\"](function (err) {\n          worker.send({\n            id: request.id,\n            result: null,\n            error: convertError(err)\n          });\n          currentRequestId = null;\n        });\n      } else {\n        // immediate result\n        worker.send({\n          id: request.id,\n          result: result,\n          error: null\n        });\n        currentRequestId = null;\n      }\n    } else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  } catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n/**\n * Register methods to the worker\n * @param {Object} methods\n */\n\nworker.register = function (methods) {\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n      }\n    }\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  if (currentRequestId) {\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload: payload\n    });\n  }\n};\n\nif (true) {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n!function() {\nvar exports = __webpack_exports__;\nvar environment = __webpack_require__(828);\n/**\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\n\n\nexports.pool = function pool(script, options) {\n  var Pool = __webpack_require__(345);\n\n  return new Pool(script, options);\n};\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {Object} [methods]\n */\n\n\nexports.worker = function worker(methods) {\n  var worker = __webpack_require__(744);\n\n  worker.add(methods);\n};\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\n\n\nexports.workerEmit = function workerEmit(payload) {\n  var worker = __webpack_require__(744);\n\n  worker.emit(payload);\n};\n/**\n * Create a promise.\n * @type {Promise} promise\n */\n\n\nexports.Promise = __webpack_require__(219);\nexports.platform = environment.platform;\nexports.isMainThread = environment.isMainThread;\nexports.cpus = environment.cpus;\n}();\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=workerpool.js.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import {CARDS} from './data';\n\n// All cards are stored internal as an 'ID', which is a single character code in the ASCII range\n// that encodes not only the card in question but also its state (ie. whether its face down, whether\n// its been activated, how many counters it has, etc). This encoding is *not* generic - each ID is\n// carefully chosen and can only be used to represent that cards and states that are used by Library\n// FTK.\n//\n// Choosing an efficient representation for IDs is crucial - by encoding most of the simulator's\n// data types as small integers we become eligible for V8's Smi optimizations (eg. all of our\n// locations get to be PACKED_SMI_ELEMENTS) and use the fastest operations. Importantly, it also\n// reduces memory overhead which is important as GC dominates the run time cost of search due to\n// the amount of encodes States we need to keep around tp dedupe.\n//\n// For type-safety, we brand the character codes:\n//\n//  - An ID represents a card in any location with no additional state (eg. face up on the field)\n//  - A DeckID is an ID or a facedown / known ID, represented by the lower-case character (or in\n//    human-readable encoding, by the ID being surrounded by parentheses)\n//  - A FieldID further extends the concept of the DeckID, optionally allowing for a number to be\n//    associated with the ID in question to indicate additional state (eg. whether a card has been\n//    activated, which monster an Equip Spell is attached to, the number of Spell Counters on a\n//    card, etc)\n//\ninterface As<T> { __brand: T }\nexport type ID = number & As<'ID'>;\nexport type DeckID = ID | number & As<'DeckID'>;\nexport type FieldID = ID | number & As<'FieldID'>;\n\n// The table of character codes which represent each card. Most of these were chosen to be based off\n// of the card name, though conflicts mean some cards have less than memorable encodings. Several\n// cards have additional encodings for when then store data - these all need to be handled specially\n// in the functions above. One unfortunate side effect of this encoding is that cards with data may\n// 'jump around', as their sort order changes when activated, but finding relatively\n// readable/debuggable sequential encodings is difficult in the ASCII range and a consitent and\n// logical encoding scheme is more valuable then complete stable sorting of cards across state\n// changes.\nconst LevelLimitAreaB = 65 as ID; // A\nconst BlackPendant = 66 as ID; // B (0 1 2 3 4 5)\nconst CardDestruction = 67 as ID; // C\nconst DifferentDimensionCapsule = 68 as ID; // D (*)\nconst RoyalDecree = 69 as ID; // E\nconst AFeatherOfThePhoenix = 70 as ID; // F\nconst GracefulCharity = 71 as ID; // G\nconst HeavyStorm = 72 as ID; // H\nconst CyberJar = 74 as ID; // J\nconst PrematureBurial = 75 as ID; // K (5 6 7 8 9)\nconst RoyalMagicalLibrary = 76 as ID; // L (< = >)\nconst SpellbookOrganization = 77 as ID; // M\nconst CardShuffle = 78 as ID; // N (#)\nconst ArchfiendsOath = 79 as ID; // O (@)\nconst PotOfGreed = 80 as ID; // P\nconst ReversalQuiz = 81 as ID; // Q\nconst Reload = 82 as ID; // R\nconst Sangan = 83 as ID; // S\nconst GiantTrunade = 84 as ID; // T\nconst UpstartGoblin = 85 as ID; // U\nconst ConvulsionOfNature = 86 as ID; // V\nconst ToonWorld = 87 as ID; // W\nconst ToonTableOfContents = 88 as ID; // X\nconst ThunderDragon = 89 as ID; // Y\nconst SpellReproduction = 90 as ID; // Z\n\nconst RoyalMagicalLibrary1 = 60 as FieldID; // <\nconst RoyalMagicalLibrary2 = 61 as FieldID; // =\nconst RoyalMagicalLibrary3 = 62 as FieldID; // >\nconst LIBRARY = [\n  RoyalMagicalLibrary, RoyalMagicalLibrary1, RoyalMagicalLibrary2, RoyalMagicalLibrary3,\n];\n\nconst ArchfiendsOath1 = 64 as FieldID; // @\nconst CardShuffle1 = 35 as FieldID; // #\nconst DifferentDimensionCapsule1 = 42 as FieldID; // *\n\nconst BlackPendant0 = 48 as FieldID; // 0\nconst BlackPendant4 = 52 as FieldID; // 4\nconst PrematureBurial0 = 53 as FieldID; // 5\nconst PrematureBurial4 = 57 as FieldID; // 9\n\n// Drops the data associated with a FieldID, returning the 'raw' ID\nconst raw = (id: FieldID) => {\n  if (id >= RoyalMagicalLibrary1 && id <= RoyalMagicalLibrary3) return RoyalMagicalLibrary;\n  if (id === ArchfiendsOath1) return ArchfiendsOath;\n  if (id >= BlackPendant0 && id <= BlackPendant4) return BlackPendant;\n  if (id >= PrematureBurial0 && id <= PrematureBurial4) return PrematureBurial;\n  if (id === DifferentDimensionCapsule1) return DifferentDimensionCapsule;\n  if (id === CardShuffle1) return CardShuffle;\n  throw new RangeError(`Invalid ID: ${id}`);\n};\n\n// Utilities for handling IDs\nexport const ID = new class {\n  // Determines whether an ID represents a face-down card\n  facedown(this: void, id?: FieldID | DeckID) {\n    return !!id && id >= 97 /* a */ && id <= 122;\n  }\n  // Flips a card from face-up to face-down or vice-versa. If a card had state it loses it when it\n  // gets flipped down (NB: face-down cards cannot have state due to the rules of Yu-Gi-Oh!)\n  toggle(this: void, id: FieldID | DeckID): ID | DeckID | FieldID {\n    return (((id >= 65 /* A */ && id <= 90 /* Z */ || id >= 97 /* a */ && id <= 122 /* z */)\n      ? id : raw(id as FieldID)) ^ 0x20) as ID | DeckID | FieldID;\n  }\n  // Determines whether an ID represents a known card in the Deck (or a card banished face-down)\n  known(this: void, id?: DeckID) {\n    return ID.facedown(id);\n  }\n  // Retrieves data associated with the card - this might be a Spell Counter, an indication of\n  // whether a card was activated, a bit used for counting turns, or an index of Zone the Monster an\n  // Equip Spell is equipped to is located\n  get(this: void, id: FieldID) {\n    if (id >= 65 /* A */ && id <= 90 /* Z */ || id >= 97 /* a */ && id <= 122 /* z */) return 0;\n    if (id >= RoyalMagicalLibrary1 && id <= RoyalMagicalLibrary3) return id - RoyalMagicalLibrary1 + 1;\n    if (id === ArchfiendsOath1 || id === DifferentDimensionCapsule1 || id === CardShuffle1) return 1;\n    if (id >= BlackPendant0 && id <= PrematureBurial4) return (id - BlackPendant0) % 5;\n    return 0;\n  }\n  // Sets data associated with a card\n  // PRECONDITION: data is in valid range for the ID in question\n  set(this: void, id: ID, data: number) {\n    switch (id) {\n    case RoyalMagicalLibrary: return LIBRARY[data];\n    case ArchfiendsOath: return data ? ArchfiendsOath1 : ArchfiendsOath;\n    case BlackPendant: return (BlackPendant0 + data) as FieldID;\n    case PrematureBurial: return (PrematureBurial0 + data) as FieldID;\n    case DifferentDimensionCapsule: return data ? DifferentDimensionCapsule : DifferentDimensionCapsule1;\n    case CardShuffle: return data ? CardShuffle1 : CardShuffle;\n    }\n\n    throw new RangeError(`Invalid ID: ${id}`);\n  }\n  // Returns the raw ID given an ID of any type\n  id(this: void, id: ID | FieldID | DeckID) {\n    if (id >= 65 /* A */ && id <= 90 /* Z */) return id as ID;\n    if (id >= 97 /* a */ && id <= 122 /* z */) return (id ^ 0x20) as ID;\n    return raw(id as FieldID);\n  }\n  // Determines the Card that an ID is meant to represent\n  decode(this: void, id: ID | FieldID | DeckID) {\n    return CARDS[ID.id(id)];\n  }\n};\n\n// Formatter supports alternate (more human readable) ways of encoding/displaying IDs\nexport const Formatter = new class {\n  // Encodes ids in a more human friendly (but still compact) format\n  encode(this: void, ids: (ID | FieldID | DeckID)[]) {\n    let s = '';\n    for (const id of ids) s += Formatter.human(id);\n    return s;\n  }\n  // Decodes an array of IDs that were encoded in the human readable format described below\n  decode(this: void, s: string) {\n    const ids: (ID | FieldID | DeckID)[] = [];\n    let id = '';\n    let ok = true;\n    for (let i = 0; i < s.length; i++) {\n      if (ok && id) {\n        ids.push(Formatter.unhuman(id));\n        id = '';\n      }\n      id += s[i];\n      ok = i < s.length - 1 && s[i + 1] === '(' ||\n        (id[0] === '(' ? id[id.length - 1] === ')' : (s[i + 1] >= 'A' && s[i + 1] <= 'Z'));\n    }\n    if (id) ids.push(Formatter.unhuman(id));\n    return ids;\n  }\n  // Encodes an ID in a more human-readable format than the default encoding. Raw IDs are encoded\n  // the same way, but face-down/known IDs get wrapped in parentheses instead of being turned to\n  // lower-case, and additional data gets appended as a number instead of being represented by an\n  // entirely different character. The IDs are still compact but are less efficient and only should\n  // be used for debugging purposes.\n  human(this: void, id: ID | FieldID | DeckID) {\n    if (id >= 65 /* A */ && id <= 90 /* Z */) return String.fromCharCode(id);\n    if (id >= 97 /* a */ && id <= 122 /* z */) return `(${String.fromCharCode((id ^ 0x20))})`;\n    if (id >= RoyalMagicalLibrary1 && id <= RoyalMagicalLibrary3) return `L${id - RoyalMagicalLibrary1 + 1}`;\n    if (id === ArchfiendsOath1) return 'O1';\n    if (id >= BlackPendant0 && id <= BlackPendant4) return `B${id - BlackPendant0}`;\n    if (id >= PrematureBurial0 && id <= PrematureBurial4) return `K${id - PrematureBurial0}`;\n    if (id === DifferentDimensionCapsule1) return 'D1';\n    if (id === CardShuffle1) return 'N1';\n    throw new RangeError(`Invalid ID: ${String.fromCharCode(id)}`);\n  }\n  // Decodes an ID encoded in the human readable format\n  unhuman(this: void, s: string) {\n    if (s.length === 1) return s[0].charCodeAt(0) as ID;\n    if (s.startsWith('(')) return (s[1].charCodeAt(0) ^ 0x20) as DeckID | FieldID;\n    switch (s[0]) {\n    case 'L': return LIBRARY[+s[1]];\n    case 'O': return ArchfiendsOath1;\n    case 'B': return (BlackPendant0 + +s[1]) as FieldID;\n    case 'K': return (PrematureBurial0 + +s[1]) as FieldID;\n    case 'D': return DifferentDimensionCapsule1;\n    case 'N': return CardShuffle1;\n    }\n    throw new RangeError(`Invalid legacy ID: ${s}`);\n  }\n  // Takes the human encoding one step further by additionally rendering the name of the card\n  // encoded instead of the ID\n  pretty(this: void, id: ID | FieldID | DeckID) {\n    const card = ID.decode(id);\n    const data = ID.get(id as FieldID);\n    const name = data ? `${card.name}:${data}` : card.name;\n    return ID.facedown(id) ? `(${name})` : name;\n  }\n  // Turns an array of IDs into a displayable string with the card's names\n  names(this: void, ids: (ID | FieldID | DeckID)[]) {\n    if (!ids.length) throw new RangeError();\n    const names = ids.map(id => `\"${ID.decode(id).name}\"`);\n    if (names.length === 1) return names[0];\n    const last = names.pop()!;\n    return `${names.join(', ')} and ${last}`;\n  }\n};\n\n// Export all of the IDs under a namespace to avoid having ugly imports\nexport const Ids = {\n  LevelLimitAreaB: LevelLimitAreaB,\n  BlackPendant: BlackPendant,\n  CardDestruction: CardDestruction,\n  DifferentDimensionCapsule: DifferentDimensionCapsule,\n  RoyalDecree: RoyalDecree,\n  AFeatherOfThePhoenix: AFeatherOfThePhoenix,\n  GracefulCharity: GracefulCharity,\n  HeavyStorm: HeavyStorm,\n  CyberJar: CyberJar,\n  PrematureBurial: PrematureBurial,\n  RoyalMagicalLibrary: RoyalMagicalLibrary,\n  SpellbookOrganization: SpellbookOrganization,\n  CardShuffle: CardShuffle,\n  ArchfiendsOath: ArchfiendsOath,\n  PotOfGreed: PotOfGreed,\n  ReversalQuiz: ReversalQuiz,\n  Reload: Reload,\n  Sangan: Sangan,\n  GiantTrunade: GiantTrunade,\n  UpstartGoblin: UpstartGoblin,\n  ConvulsionOfNature: ConvulsionOfNature,\n  ToonWorld: ToonWorld,\n  ToonTableOfContents: ToonTableOfContents,\n  ThunderDragon: ThunderDragon,\n  SpellReproduction: SpellReproduction,\n};\n","export class Random {\n  seed: number;\n\n  static seed(n = 4 /* https://xkcd.com/221/ */) {\n    // Hash: https://burtleburtle.net/bob/hash/integer.html\n    n = n ^ 61 ^ (n >>> 16);\n    n = n + (n << 3);\n    n = n ^ (n >>> 4);\n    n = Math.imul(n, 0x27d4eb2d);\n    n = n ^ (n >>> 15);\n    return n >>> 0;\n  }\n\n  constructor(seed = Random.seed()) {\n    this.seed = seed;\n  }\n\n  // Mulberry32: https://gist.github.com/tommyettinger/46a874533244883189143505d203312c\n  next(min?: number, max?: number) {\n    if (min) min = Math.floor(min);\n    if (max) max = Math.floor(max);\n\n    let z = (this.seed += 0x6d2b79f5 | 0);\n    z = Math.imul(z ^ (z >>> 15), z | 1);\n    z = z ^ (z + Math.imul(z ^ (z >>> 7), z | 61));\n    z = (z ^ (z >>> 14)) >>> 0;\n    const n = z / 2 ** 32;\n\n    if (min === undefined) return n;\n    if (!max) return Math.floor(n * min);\n    return Math.floor(n * (max - min)) + min;\n  }\n\n  shuffle<T>(arr: T[]) {\n    for (let i = arr.length - 1; i > 0; i--) {\n      const j = Math.floor(this.next() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  sample<T>(arr: T[], remove = false) {\n    if (arr.length === 0) throw new RangeError('Cannot sample an empty array');\n    const index = this.next(arr.length);\n    const val = arr[index];\n    if (remove) {\n      arr[index] = arr[arr.length - 1];\n      arr.pop();\n    }\n    if (val === undefined && !Object.prototype.hasOwnProperty.call(arr, index)) {\n      throw new RangeError('Cannot sample a sparse array');\n    }\n    return val;\n  }\n}\n","import {IState} from './state';\n\n// Use State.display() to actually turn these results into something useful\nexport interface SearchResult {\n  // Encoded array of State objects which represent each step required to win - note that\n  // the final state will be possibly several actions *before* Reversal Quiz is played\n  path: string[];\n  // The trace of the final State object - the human readable description of the playout\n  trace?: string[];\n}\n\n// Simplistic Map-compatible interface that we can implement with BigMap below\nexport interface Hash<K, V> {\n  size: number;\n  has(k: K): boolean;\n  get(k: K): V | undefined;\n  set(k: K, v: V): this;\n}\n\n// V8 Sets/Maps throw a RangeError at 2^24 entries\n// https://bugs.chromium.org/p/v8/issues/detail?id=11852\nconst LIMIT = Math.pow(2, 24) - 1;\n\n// Workaround for V8's system limits - please note that if you are storing enough states that you\n// need this you will probably also need to set --max-old-space-size=8092 or higher to avoid OOMs.\nclass BigMap<K, V> implements Hash<K, V> {\n  private readonly maps: Map<K, V>[];\n\n  constructor() {\n    this.maps = [new Map<K, V>()];\n  }\n\n  get size() {\n    let size = 0;\n    for (const map of this.maps) {\n      size += map.size;\n    }\n    return size;\n  }\n\n  has(k: K) {\n    for (let i = this.maps.length - 1; i >= 0; i--) {\n      if (this.maps[i].has(k)) return true;\n    }\n    return false;\n  }\n\n  get(k: K) {\n    for (let i = this.maps.length - 1; i >= 0; i--) {\n      const v = this.maps[i].get(k);\n      if (v !== undefined) return v;\n    }\n    return undefined;\n  }\n\n  set(k: K, v: V) {\n    let map!: Map<K, V>;\n    for (const m of this.maps) {\n      if (m.has(k)) return this;\n      map = m;\n    }\n\n    if (map.size === LIMIT) {\n      map = new Map();\n      this.maps.push(map);\n    }\n    map.set(k, v);\n\n    return this;\n  }\n}\n\n// Standard best-first search - most game trees have far too many children to exhaustively search\n// with BFS or even uninformed DFS (consider trees of depth 50-100 with 5-20+ nodes at each level...).\n// cutoff should probably be set to around 10M to avoid running out of memory. This can perform\n// better than BULB search when the heuristic is good, especially since it can more effectively\n// take advantage of caching. Note that while tracking each state isn't strictly required for\n// correctness reasons (nothing should cause a true cycle), in large trees 95%+ of the nodes are\n// duplicates (sometimes seen 1000s of times), so removing the cache would effectively result in a\n// 20-100x performance hit (ie. we trade memory for latency).\nexport function bestFirstSearch(\n  node: IState, cutoff?: number, prescient?: boolean\n): {visited: number} | SearchResult & {visited: number} {\n  const hash: Hash<string, number> = cutoff && cutoff > LIMIT ? new BigMap() : new Map();\n  const result = bestFirstProbe(node, hash, [], cutoff, prescient);\n  return {visited: hash.size, ...result};\n}\n\nfunction bestFirstProbe(\n  node: IState,\n  visited: Hash<string, number>,\n  path: string[],\n  cutoff?: number,\n  prescient?: boolean\n): SearchResult | undefined {\n  visited.set(node.key, 1);\n  path.push(node.key);\n  if (cutoff && visited.size > cutoff) throw new RangeError();\n  const children = node.state.next(prescient);\n  for (const child of children) {\n    if (child.score >= Infinity) {\n      path.push(child.key);\n      return {path, trace: child.state.trace};\n    }\n    if (!visited.has(child.key)) {\n      const result = bestFirstProbe(child, visited, path.slice(), cutoff, prescient);\n      if (result) return result;\n    }\n  }\n  return undefined;\n}\n\nconst enum Status {\n  // The first slice of this node has been visited (which implies the first slices of all of the\n  // first slice's children's nodes have been visited)\n  PARTIAL = 1,\n  // All children of this node have been completely visited (which implies that all children of its\n  // children's nodes have been completely visited)\n  COMPLETE = 2,\n}\n\n// A modified Limited Discrepancy Beam Search (BULB) implementation. In the original paper\n// (http://idm-lab.org/bib/abstracts/papers/ijcai05a.pdf) the hash table is used to ensure\n// correctness in the presence of cycles (which as stated above, is not possible here), and a\n// solution is always assumed to exist. The latter isn't the case, so we need to track each visited\n// node in order to determine when we have completed the search in the case of failure (as opposed\n// to continually trying with more and more discrepancies). More importantly, due to the nature of\n// the game tree having so many duplicated states, we rely on being able to leverage the hash to\n// dedupe for performance reasons. Because of how the search works we need to be more careful about\n// tracking the visited status of the node to know whether it is safe to use the cache or not, but\n// ultimately it still pays off tremendously performance-wise.\n//\n// The beam width B is typically a fixed width, but this implementation also allows for having the\n// beam width change dynamically depending on the number of children a node has. This is very useful\n// given that some states have 1-5 children while others (eg. Reload / Card Destruction / Spell\n// Reproduction / Different Dimension Capsule) can result in tens if not 100+ children meaning\n// a fractional width is generally more useful.\nexport function bulbSearch(\n  node: IState, B = 5, cutoff?: number, prescient?: boolean\n): {visited: number} | SearchResult & {visited: number} {\n  if (B <= 0) throw new RangeError(`Width B must be > 0 but is ${B}`);\n  const visited: Hash<string, Status> = cutoff && cutoff > LIMIT ? new BigMap() : new Map();\n  for (let discrepancies = 0; visited.get(node.key) !== Status.COMPLETE; discrepancies++) {\n    const result = bulbProbe(node, B, discrepancies, visited, [], cutoff, prescient);\n    if (result) return {visited: visited.size, ...result};\n  }\n  return {visited: visited.size};\n}\n\nfunction bulbProbe(\n  node: IState,\n  B: number,\n  discrepancies: number,\n  visited: Hash<string, Status>,\n  path: string[],\n  cutoff?: number,\n  prescient?: boolean\n): SearchResult | undefined {\n  path.push(node.key);\n\n  // No matter what, we will at least be visiting all of the first slice,\n  // thus we can mark this node as partially visited\n  visited.set(node.key, Status.PARTIAL);\n  if (cutoff && visited.size > cutoff) throw new RangeError();\n\n  let children = node.state.next(prescient);\n  const num = children.length;\n  const split = B >= 1 ? B : Math.ceil(num * B);\n  if (!discrepancies) {\n    // If we don't have any discrepancies we visit just the first slice (though\n    // this could be all of the children)\n    if (num > split) children = children.slice(0, split);\n\n    let complete = 0;\n    for (const child of children) {\n      if (child.score >= Infinity) {\n        path.push(child.key);\n        return {path, trace: child.state.trace};\n      }\n\n      const v = visited.get(child.key);\n      if (v === Status.COMPLETE) {\n        // Track how many of our children are actually COMPLETE - if they all are\n        // and we're visiting all of our children than we can mark this node as COMPLETE\n        complete++;\n      } else if (!v) {\n        // If this node was visited at all we can skip visiting it further, as we will only\n        // ever be looking in the first slice anyway since we have no discrepancies\n        const result = bulbProbe(child, B, 0, visited, path.slice(), cutoff, prescient);\n        if (result) return result;\n        if (visited.get(child.key) === Status.COMPLETE) complete++;\n      }\n    }\n    // If the slice actually encompassed all children and they were all COMPLETE\n    // we can mark this node as COMPLETE\n    if (complete === num) {\n      visited.set(node.key, Status.COMPLETE);\n    }\n  } else {\n    // NOTE: we can instead rearrange the order of this block to search the best slice first instead\n    // of using up a discrepancy, effectively being more 'greedy' and making our visit pattern\n    // closer to best-first-search. The more greedy approach also yields slightly better results,\n    // but we instead use the more traditional ordering as it let's us find results which we can't\n    // find with best-first seach (ie. we get more solutions from 'non-greedy' BULB + best-first\n    // search than 'greedy' BULB + best-first search)\n\n    // Pull out the best slice from children\n    const best = children.splice(0, split);\n    let complete = 0;\n    // Use up a discrepancy by investigating the other slices\n    for (const child of children) {\n      if (child.score >= Infinity) {\n        path.push(child.key);\n        return {path, trace: child.state.trace};\n      }\n\n      const v = visited.get(child.key);\n      if (v === Status.COMPLETE) {\n        complete++;\n      } else {\n        // NOTE: Even if we will be at zero discrepancies and will only be expanding the already\n        // visited first slice we still need to recurse so that it has a chance check if it can mark\n        // itself COMPLETED instead of PARTIAL\n        const result =\n          bulbProbe(child, B, discrepancies - 1, visited, path.slice(), cutoff, prescient);\n        if (result) return result;\n        if (visited.get(child.key) === Status.COMPLETE) complete++;\n      }\n    }\n\n    // Preserve our discrepancy by choosing the best slice\n    for (const child of best) {\n      if (child.score >= Infinity) {\n        path.push(child.key);\n        return {path, trace: child.state.trace};\n      }\n\n      const v = visited.get(child.key);\n      if (v === Status.COMPLETE) {\n        // Track how many of our children are actually COMPLETE - if they all are\n        // and we're visiting all of our children than we can mark this node as COMPLETE\n        complete++;\n      } else {\n        // In this case, we need to explore the child even if it is PARTIAL visited as we now\n        // have discrepancies to spare which would cause us to explore into the other slices\n        const result =\n          bulbProbe(child, B, discrepancies, visited, path.slice(), cutoff, prescient);\n        if (result) return result;\n        if (visited.get(child.key) === Status.COMPLETE) complete++;\n      }\n    }\n\n    // If all of the children were COMPLETE we can mark this node as COMPLETE\n    if (complete === num) {\n      visited.set(node.key, Status.COMPLETE);\n    }\n  }\n\n  return undefined;\n}\n","{\n  \"A Feather of the Phoenix\": 3,\n  \"Archfiend's Oath\": 3,\n  \"Black Pendant\": 1,\n  \"Card Destruction\": 1,\n  \"Card Shuffle\": 0,\n  \"Convulsion of Nature\": 3,\n  \"Cyber Jar\": 0,\n  \"Different Dimension Capsule\": 0,\n  \"Giant Trunade\": 3,\n  \"Graceful Charity\": 1,\n  \"Heavy Storm\": 0,\n  \"Level Limit - Area B\": 2,\n  \"Pot of Greed\": 1,\n  \"Premature Burial\": 1,\n  \"Reload\": 3,\n  \"Reversal Quiz\": 1,\n  \"Royal Decree\": 0,\n  \"Royal Magical Library\": 3,\n  \"Sangan\": 0,\n  \"Spell Reproduction\": 3,\n  \"Spellbook Organization\": 0,\n  \"Thunder Dragon\": 3,\n  \"Toon Table of Contents\": 3,\n  \"Toon World\": 2,\n  \"Upstart Goblin\": 2\n}","{\n  \"facedown\": 0.9,\n  \"A Feather of the Phoenix\": [0, 1],\n  \"Archfiend's Oath\": [0, 1, 1],\n  \"Black Pendant\": [1, 1],\n  \"Card Destruction\": [0, 1],\n  \"Card Shuffle\": [0, 1],\n  \"Convulsion of Nature\": [0, 1],\n  \"Cyber Jar\": [0, 0.3333333333333333],\n  \"Different Dimension Capsule\": [0, 1],\n  \"Giant Trunade\": [1, 1.5],\n  \"Graceful Charity\": [0, 1.5],\n  \"Heavy Storm\": [0, 0],\n  \"Level Limit - Area B\": [0, 0.3333333333333333],\n  \"Pot of Greed\": [0, 1.5],\n  \"Premature Burial\": [0, 1],\n  \"Reload\": [0, 1],\n  \"Reversal Quiz\": [1, 1],\n  \"Royal Decree\": [0, 0],\n  \"Royal Magical Library\": [1.3, 4, 0.16666666666666666, 0.3333333333333333],\n  \"Sangan\": [0, 0.3333333333333333],\n  \"Spell Reproduction\": [0, 1],\n  \"Spellbook Organization\": [0, 1],\n  \"Thunder Dragon\": [0, 1],\n  \"Toon Table of Contents\": [0, 1],\n  \"Toon World\": [0, 1],\n  \"Upstart Goblin\": [0, 1]\n}","import {ARCHFIEND, DATA, Type, Location} from './data';\nimport {Formatter, Ids, ID, DeckID, FieldID} from './ids';\nimport {Random} from './random';\nimport {bestFirstSearch, bulbSearch, SearchResult} from './search';\nimport DECK from './deck.json';\nimport WEIGHTS from './weights.json';\n\n// Used to enable state verification sanity checking which has a large impact on performance.\n// NOTE: set DEBUG to anything, even false and it will be turn on verification (!!'false')\nconst DEBUG = !!process.env.DEBUG;\n\n// An 'immutable' State. State follows somewhat of a builder pattern, and once it is built it can be\n// turned into an IState. Because the `state` is no longer being mutated we can cache the `score`\n// and the toString representation in `key` to avoid work during search (ie. Schwartzian transform)\nexport interface IState {\n  key: string;\n  state: Readonly<State>;\n  score: number;\n}\n\n// Order the main locations are encoded when serialized (banished is handled separately)\nconst LOCATIONS = ['hand', 'monsters', 'spells', 'graveyard', 'deck'] as const;\n\n// Constants used when encoding/decoding State - SEP must be less than '0' and the other markers\n// must be less than SEP. URL-safe characters are prefered (though encodeURIComponent and\n// decodeURIComponent need to be used to display State encodings in general as several codes chosen\n// are not URL-safe)\nconst SEP = '.';\nconst SUMMONED_REVERSED = '-';\nconst SUMMONED = '\\'';\nconst REVERSED = '!';\n\n// A decklist is just a mapping from a card name to the number of cards present in the deck. While\n// the decklist is mostly flexible, the simulator requires decks conform to certain restrictions:\n//\n//  - only the cards implemented into the simulator can be used\n//  - decks *must* have a Reversal Quiz and Black Pendant\n//  - decks may only have a single Premature Burial and Black Pendant\n//  - decks must have exactly 40 cards to pass DEBUG verification\n//\n// Most Library FTK decklists will follow the same skeleton, and as such using `State.decklist`to\n// construct a decklist which just makes tweaks to the standard ratios is recommended.\nexport type Decklist = Readonly<Record<string, number>>;\n\n// The default decklist needs one more card to meet the minimum deck length requirement of 40 cards.\n// NOTE: unlike the other options, 'M' doesn't just swap out the one card but instead changes the\n// default decklist to instead be one which leverages Spellbook Organization and Card Shuffle.\nexport const OPTIONS = ['J', 'S', 'D', 'H', 'M', 'E'] as const;\nexport type Option = typeof OPTIONS[number];\n\n// The core game State. As mentioned above, this class is usually used in a pseudo-builder pattern\n// where handlers clone a State object, mutate it, and then 'freeze' it as an immutable IState.\n// State contains all the fields required for Library FTK (though note this is obviously not a\n// sufficient encapsulation of general-purpose Yu-Gi-Oh! duel state). The most glaring difference\n// (besides only tracking data for one player and not supporting phases) is that the hand,\n// Graveyard, banished zone, Monster Zones and Spell & Trap Zones are all sorted - in regular\n// Yu-Gi-Oh! the exact location of a card in a zone can be relevant, but in the limited subset of\n// Yu-Gi-Oh! required to simulate the Library FTK we only care about precise zones with respect to\n// the two Equip Spells (and in that case it only actually matters in the case of Tribute Summoning)\n// and we handle this with the addition of data on the ID and special cases adding/removing\n// monsters.\n//\n// In addition to the core required fields for simulating the game there is also an optional `trace`\n// field that tracks the human-readable description of all of the state transitions that occur. Note\n// that this information is preserved through cloning but does *not* round trip through\n// toString/fromString.\nexport class State {\n  readonly decklist?: Decklist;\n\n  random: Random;\n  lifepoints: number;\n  summoned: boolean;\n  monsters: FieldID[];\n  spells: FieldID[];\n  hand: ID[];\n  banished: DeckID[];\n  graveyard: ID[];\n  deck: DeckID[];\n  reversed: boolean;\n\n  trace?: string[];\n\n  static decklist(option: Option) {\n    const name = ID.decode(Formatter.unhuman(option)).name;\n\n    const count = (n: keyof typeof DECK) => {\n      if (option === 'M') {\n        switch (n) {\n        case 'A Feather of the Phoenix': return 2;\n        case 'Card Shuffle': return 2;\n        case 'Level Limit - Area B': return 0;\n        case 'Spell Reproduction': return 2;\n        case 'Spellbook Organization': return 3;\n        }\n      } else if (n === name) {\n        return 1;\n      }\n      return DECK[n];\n    };\n\n    const list: Record<string, number> = {};\n    for (const n in DECK) list[n] = count(n as keyof typeof DECK);\n    return list as Decklist;\n  }\n\n  static create(decklist: Decklist, random: Random, trace?: boolean) {\n    const deck: ID[] = [];\n    for (const name in decklist) {\n      for (let i = 0; i < decklist[name]; i++) deck.push(DATA[name].id);\n    }\n    random.shuffle(deck);\n\n    const state = new State(\n      decklist, random, 8000, false, [], [], [], [], [], deck, false, trace ? [] : undefined\n    );\n    state.draw(6, true);\n    return state;\n  }\n\n  constructor(\n    decklist: Decklist | undefined,\n    random: Random,\n    lifepoints: number,\n    summoned: boolean,\n    monsters: FieldID[],\n    spells: FieldID[],\n    hand: ID[],\n    banished: DeckID[],\n    graveyard: ID[],\n    deck: DeckID[],\n    reversed: boolean,\n    trace?: string[],\n  ) {\n    this.decklist = decklist;\n    this.random = random;\n    this.lifepoints = lifepoints;\n    this.summoned = summoned;\n    this.monsters = monsters;\n    this.spells = spells;\n    this.hand = hand;\n    this.banished = banished;\n    this.graveyard = graveyard;\n    this.deck = deck;\n    this.reversed = reversed;\n    this.trace = trace;\n  }\n\n  // Adds id to location and returns the index of id within the new location\n  // NOTE: you still must handle removing the id from the previous location\n  add(location: 'spells', id: FieldID): number;\n  add(location: 'banished', id: DeckID): number;\n  add(location: 'hand' | 'graveyard', id: ID): number;\n  add(location: Exclude<Location, 'deck' | 'monsters'>, id: ID /* | DeckID | FieldID */) {\n    let i = 0;\n    // We need to keep things sorted, but doing a linear scan of the already sorted array is faster\n    // than doing a binary search to find the new location because the length of the arrays in\n    // question is always < 40\n    for (; i < this[location].length; i++) {\n      if (this[location][i] >= id) {\n        this[location].splice(i, 0, id);\n        return i;\n      }\n    }\n    this[location].push(id);\n    return i;\n  }\n\n  // Removes the id from location at index i and returns the removed id\n  // NOTE: you still must handle adding the id to a new location\n  remove(location: 'spells', i: number): FieldID;\n  remove(location: 'banished', id: number): DeckID;\n  remove(location: 'hand' | 'graveyard', i: number): ID;\n  remove(location: Exclude<Location, 'deck' | 'monsters'>, i: number): ID | DeckID | FieldID;\n  remove(location: Exclude<Location, 'deck' | 'monsters'>, i: number) {\n    return this[location].splice(i, 1)[0];\n  }\n\n  // add, but for monsters. This needs to be special cased as reorganizing the monsters might\n  // require also rewriting the data of any Equip Spells if the monsters they were pointing to ended\n  // up at a new index after the sort.\n  // NOTE: you still must handle removing the id from the previous location\n  madd(id: ID | FieldID) {\n    const zone = this.add('monsters' as any, id); // \"I know what I'm doing\" (handle equips below)\n    for (let i = 0; i < this.spells.length; i++) {\n      const card = ID.decode(this.spells[i]);\n      if (!ID.facedown(this.spells[i]) && card.type === 'Spell' && card.subType === 'Equip') {\n        const data = ID.get(this.spells[i]);\n        // NOTE: only one of each equip so don't need to worry about sort order being affected\n        // PRECONDITION: ALL IDs for one equip while equipped sort ahead of the other while equipped\n        if (data >= zone) this.spells[i] = ID.set(card.id, data + 1);\n      }\n    }\n    return zone;\n  }\n\n  // remove, but for monsters. This also needs to be special cased for Equip Spells - instead of\n  // simply returning the id of the removed monster at index i we also return any equips that may\n  // have been equipped to it (to either reequip or to remove).\n  // NOTE: you still must handle adding the id (and equips) to a new location\n  mremove(i: number) {\n    const id = ID.id(this.remove('monsters' as any, i)); // \"I am very smrt\" (handle equips below)\n    const equips: ID[] = [];\n    const spells: FieldID[] = [];\n    for (const spell of this.spells) {\n      const card = ID.decode(spell);\n      if (!ID.facedown(spell) && card.type === 'Spell' && card.subType === 'Equip') {\n        const data = ID.get(spell);\n        // NOTE: only one of each equip so don't need to worry about sort order being affected\n        // PRECONDITION: ALL IDs for one equip while equipped sort ahead of the other while equipped\n        if (data > i) {\n          spells.push(ID.set(card.id, data - 1));\n        } else if (data === i) {\n          equips.push(card.id);\n        } else {\n          spells.push(spell);\n        }\n      } else {\n        spells.push(spell);\n      }\n    }\n    this.spells = spells;\n\n    return {id, equips};\n  }\n\n  // Set the data of the monster at index i. This may affect the sort order of the monster in\n  // question which might also affect the data of any Equip Cards that may be equipped to it.\n  mset(i: number, data = 0) {\n    const {id, equips} = this.mremove(i);\n    const zone = this.madd(ID.set(id, data));\n    for (const equip of equips) {\n      this.add('spells', ID.set(equip, zone));\n    }\n  }\n\n  // Summons the monster id. This is a simple wrapper around madd which handles also updateing the\n  // summoned bit. NOTE: You must ensure there is room in the Monster zones and that you have not\n  // already performed a Normal Summon this turn. You must also still must handle removing the id\n  // from the previous location\n  summon(id: ID | FieldID, special = false) {\n    this.summoned = this.summoned || !special;\n    return this.madd(id);\n  }\n\n  // Tribute a monster at index fi in the monster zone to summon a single-tribute monster at index\n  // hi from the hand. This method *does* handle moving the tributed monster to the graveyard and\n  // removing the summoned monster from the hand. NOTE: You must ensure the Tribute Summon is legal\n  tribute(fi: number, hi: number) {\n    const {id, equips} = this.mremove(fi);\n    this.add('graveyard', id);\n    for (const equip of equips) {\n      this.add('graveyard', equip);\n    }\n    if (equips.length) {\n      this.minor(`Sending ${Formatter.names(equips)} equipped to \"${ID.decode(id).name}\" to the Graveyard`);\n    }\n    const h = this.remove('hand', hi);\n    return this.summon(h);\n  }\n\n  // Mark any cards which were temporarily banished by Different Dimension Capsule's effect as\n  // permanently banished.\n  banish() {\n    // There is at most one temporarily banished card at a time and since '(' always sorts before\n    // any ID we simply need to check the first element\n    if (this.banished[0] && ID.facedown(this.banished[0])) {\n      const id = this.remove('banished', 0);\n      this.add('banished', ID.id(id));\n    }\n  }\n\n  // Add a 'major' trace action to the log. Major actions are used for primary player choices.\n  major(s: string) {\n    if (this.trace) this.trace.push(s);\n  }\n\n  // Add a 'minor' trace action to the log. Minor actions occur as a result of major actions.\n  minor(s: string) {\n    if (this.trace) this.trace.push(`  ${s}`);\n  }\n\n  // Discard the cards located at the sorted indices to the graveyard.\n  discard(indices: number[]) {\n    // PRECONDITION: sorted indices\n    let removed = 0;\n    for (const i of indices) {\n      const id = this.hand.splice(i - removed++, 1)[0];\n      this.add('graveyard', id);\n    }\n  }\n\n  // Add a Spell Counter to all face up Royal Magical Library cards that have less than 3 Spell\n  // Counters unless the card is at index ignore (this is necessary to avoid adding a counter to a\n  // Royal Magical Library on the turn it gets Special Summoned by Premature Burial).\n  inc(ignore?: number) {\n    for (let i = 0; i < this.monsters.length; i++) {\n      if (ignore === i) continue;\n      const id = this.monsters[i];\n      const card = ID.decode(id);\n      if (ID.facedown(id) || card.name !== 'Royal Magical Library') continue;\n      const data = ID.get(id);\n      if (data < 3) {\n        // Unfortunately, because the ID range is non-contiguous we theoretically might need to\n        // remove then add (and possibly juggle equips) each time (ie. mset) to guarantee the\n        // monsters array stays sorted and all the equips stay pointing to the correct targets.\n        // However, we can do a little better by noticing that the ID range *is* contiguous for all\n        // the IDs that already have data (ie. when incrementing from 1 -> 2 and 2 -> 3), so we can\n        // get away with modifying them in place. It would seem that for the ignore case we would\n        // need to fall back on doing an mset as well, but given that a card returned by Premature\n        // Burial cannot have counters the moment it is added as long as the raw ID sorts before or\n        // after the all the IDs of the same type with counters this is still safe (ie. the raw ID\n        // does not partition the data IDs, which is true in this case because the data IDs are\n        // contiguous)\n        if (data) {\n          this.monsters[i] = ID.set(card.id, data + 1);\n        } else {\n          this.mset(i, data + 1);\n        }\n        this.minor(`Add Spell Counter to \"${card.name}\" (${data} -> ${data + 1})`);\n      }\n    }\n  }\n\n  // Shuffle the deck, wiping out any knowledge of where cards were in the deck.\n  shuffle() {\n    this.deck = this.deck.map(ID.id);\n    this.random.shuffle(this.deck);\n    this.minor('Shuffle Deck');\n  }\n\n  // Reverse the deck (or return it to its original position if revert is true) if it is not already\n  // reversed.\n  reverse(revert = false) {\n    if (revert) {\n      if (!this.reversed) return;\n      this.reversed = false;\n      if (this.deck.length) {\n        this.deck.reverse();\n        if (!ID.known(this.deck[0])) this.deck[0] = ID.toggle(this.deck[0]) as DeckID;\n        this.minor(`Turn Deck back face-down (\"${ID.decode(this.deck[0]).name}\" now on bottom)`);\n      }\n    } else {\n      if (this.reversed) return;\n      this.reversed = true;\n      if (this.deck.length) {\n        this.deck.reverse();\n        const top = this.deck.length - 1;\n        if (!ID.known(this.deck[top])) this.deck[top] = ID.toggle(this.deck[top]) as DeckID;\n        this.minor(`Turn Deck face-up (\"${ID.decode(this.deck[top]).name}\" now on top)`);\n      }\n    }\n  }\n\n  // Return the top card of the deck if it is known (because the deck is face-up, the deck was\n  // stacked by A Feather of the Phoenix, or via process of elimination) for Archfiend's Oath. If\n  // quiz is true this method will instead determine if the *type* of the card that *will* be on\n  // top of the deck *after* Reversal Quiz resolves (ie. the current bottom of the deck) is known\n  known(quiz = false) {\n    if (!this.deck.length) return undefined;\n    const top = this.deck[this.deck.length - 1];\n    const bottom = this.deck[0];\n\n    if (this.reversed) {\n      if (!quiz) return top;\n      if (ID.known(bottom)) return bottom;\n    } else {\n      if (ID.known(top)) return top;\n    }\n\n    const unknown = new Set<ID>();\n    const types = new Set<Type>();\n\n    for (const id of this.deck) {\n      // Could technically have known cards are the bottom which would still allow us to determine the card\n      if (ID.known(id)) continue;\n\n      const card = ID.decode(id);\n      unknown.add(card.id);\n      types.add(card.type);\n\n      if (!quiz && unknown.size > 1) return undefined;\n      if (quiz && (unknown.size > 1 && types.size > 1)) return undefined;\n    }\n\n    return (quiz && this.reversed) ? bottom : top;\n  }\n\n  // Search for path from this state to the win condition. The cutoff should pretty much always be\n  // set to limit the number of states visited as pathological trees would likely result in an OOM.\n  // If width > 0 is specified then a BULB search will be performed instead of a best-first search -\n  // BULB search usually is slightly slower but produces slightly better paths and increased success\n  // rates, though performance is very much dependent on thw width and shape of the given tree.\n  search(\n    options: {cutoff?: number; prescient?: boolean; width?: number} = {}\n  ): {visited: number} | SearchResult & {visited: number} {\n    const node = {key: this.encode(!!this.trace), state: this, score: this.score()};\n    if (options.width) {\n      return bulbSearch(node, options.width, options.cutoff, options.prescient);\n    } else {\n      return bestFirstSearch(node, options.cutoff, options.prescient);\n    }\n  }\n\n  // Add fully-built-and-never-to-be-mutated-again state to the transition map\n  static transition(next: Map<string, IState>, state: Readonly<State>) {\n    const key = state.encode(!!state.trace);\n    next.set(key, {key, state, score: state.score()});\n    if (DEBUG) {\n      const errors = State.verify(state);\n      if (errors.length) {\n        const trace = state.trace ? `\\n\\n${state.trace.join('\\n')}\\n` : '';\n        throw new Error(`INVALID STATE ${state.encode()}:\\n\\n${errors.join('\\n')}${trace}`);\n      }\n    }\n  }\n\n  // prescient determines whether or not the search should be allowed to \"Fail to find\" Thunder\n  // Dragon and Toon Table of Contents searches when the top card is not known - no human player\n  // would ever do this, but because the search is effectively allowed to 'peek' ahead to evaluate\n  // the result of its action it can potentially leverage the searches to get a more favorable draw.\n  // Similarly, it removes the possibility of causing a shuffle after stacking the deck, which\n  // someone not trying to influence the unknowable RNG would never do.\n  // BUG: Technically this still allows for prescience by stacking the deck while the deck is\n  // reversed. To avoid this we would need to add additional data to flag whether a card is known\n  // from stacking vs. being reversed, but in practice this is not too problematic a loophole.\n  allowed(prescient: boolean, manipulation = false) {\n    if (prescient || this.reversed || !this.deck.length) return true;\n    return !manipulation && !ID.known(this.deck[this.deck.length - 1]);\n  }\n\n  // Compute all unique and relevant states that can be transitioned to from this state. In addition\n  // to removing symmetrical states, next() also eliminates the possibility for states with set\n  // Spell cards where it would not be advantageous to do so. This optimization means the\n  // pedantically all unique states are not representable, but correctness-wise all states which\n  // could lead to a solution are. See the comment on RELOAD in data.ts for more information.\n  next(prescient = true) {\n    if (this.lifepoints <= 0) return [];\n    const next = new Map<string, IState>();\n\n    // The only thing actionable on Monster cards is counters on Royal Magical Library. Note we\n    // don't dedupe removing counters from multiple libraries due to Equips potentially making\n    // things different (State.transition will dedupe if possible anyway)\n    for (let i = 0; i < this.monsters.length; i++) {\n      const id = this.monsters[i];\n      const card = ID.decode(id);\n      if (card.id !== Ids.RoyalMagicalLibrary) continue;\n      if (!ID.facedown(id) && ID.get(id) === 3 && this.deck.length) {\n        const s = this.clone();\n        s.major(`Remove 3 Spell Counters from \"${card.name}\"`);\n        s.mset(i);\n        s.draw();\n        State.transition(next, s);\n      }\n    }\n\n    const spells = new Set<FieldID>();\n    for (let i = 0; i < this.spells.length; i++) {\n      const id = this.spells[i];\n      if (spells.has(id)) continue;\n      spells.add(id);\n      const card = ID.decode(id);\n      // Reversal Quiz can *never* lead to a win in single-turn setups so is a waste to explore\n      // TODO: allow for exploring Reversal Quiz in multi-turn\n      if (card.id === Ids.ReversalQuiz) continue;\n      if (ID.facedown(id)) {\n        card.play(this, 'spells', i, next, card, prescient);\n      } else if (card.id === Ids.ArchfiendsOath && !ID.get(id)) {\n        ARCHFIEND(this, 'spells', i, next, card, prescient);\n      } else if (card.id === Ids.CardShuffle && !ID.get(id)) {\n        card.play(this, 'spells', i, next, card, prescient);\n      }\n    }\n\n    const hand = new Set<ID>();\n    for (let i = 0; i < this.hand.length; i++) {\n      const id = this.hand[i];\n      if (hand.has(id)) continue;\n      hand.add(id);\n      const card = ID.decode(id);\n      if (id === Ids.ReversalQuiz) {\n        // Reversal Quiz can *never* lead to a win in single-turn setups so is a waste to explore\n        // TODO: allow for exploring Reversal Quiz in multi-turn\n        continue;\n      } else if (id === Ids.ThunderDragon) {\n        if (this.allowed(prescient)) {\n          const targets: number[] = [];\n          for (let j = 0; j < this.deck.length && targets.length < 2; j++) {\n            if (ID.id(this.deck[j]) === Ids.ThunderDragon) targets.push(j);\n          }\n          if (targets.length === 2) {\n            const s = this.clone();\n            s.major(`Discard \"${card.name}\"`);\n            s.minor(`Add 2 \"${card.name}\" from Deck to hand`);\n            s.remove('hand', i);\n            s.add('graveyard', card.id);\n            // PRECONDITION: targets[0] < targets[1]\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n            s.add('hand', ID.id(s.deck.splice(targets[1] - 1, 1)[0]));\n            s.shuffle();\n            State.transition(next, s);\n          }\n          // NOTE: This also covers the case where there are 2 targets but we only retrieve 1\n          if (targets.length) {\n            const s = this.clone();\n            s.major(`Discard \"${card.name}\"`);\n            s.minor(`Add \"${card.name}\" from Deck to hand`);\n            s.remove('hand', i);\n            s.add('graveyard', card.id);\n            // Due to symmetry it doesn't matter which we choose\n            s.add('hand', ID.id(s.deck.splice(targets[0], 1)[0]));\n            s.shuffle();\n            State.transition(next, s);\n          } else if (this.allowed(prescient, true)) {\n            // Failure to find\n            const s = this.clone();\n            s.major(`Discard \"${card.name}\"`);\n            s.minor(`Fail to find \"${card.name}\" in Deck`);\n            s.remove('hand', i);\n            s.add('graveyard', card.id);\n            s.shuffle();\n            State.transition(next, s);\n          }\n        }\n\n        // Thunder Dragon can also possibly be Tribute Summoned\n        if (this.monsters.length && this.monsters.length < 5 && !this.summoned) {\n          card.play(this, 'hand', i, next, card, prescient);\n        }\n      } else if (card.type === 'Monster' && this.monsters.length < 5 && !this.summoned) {\n        card.play(this, 'hand', i, next, card, prescient);\n\n        // TODO: add support for setting Cyber Jar in multi-turn scenarios\n        // if (card.name === 'Cyber Jar') {\n        //   const set = this.clone();\n        //   set.major(`Set \"${card.name}\" face-down in Defense Position`);\n        //   set.summon(`(${id})` as FieldID);\n        //   set.remove('hand', i);\n        //   next.set(set.toString(), set);\n        // }\n      } else if (card.type !== 'Monster' && this.spells.length < 5) {\n        card.play(this, 'hand', i, next, card, prescient);\n      }\n    }\n\n    return Array.from(next.values()).sort(State.compare);\n  }\n\n  // We primarily sort by each State's score, though fallback on lifepoints (getting down to < 500\n  // LP is important for our win condition), deck length and whether the top card is known (helps\n  // reduce uncertainty about the deck state which is also required for our win condition).\n  //\n  // Ideally we would be able to incorporate all these tiebreakers directly into score such that we\n  // could rank order states regardless of where they appear in the tree (this would then allow us\n  // to do informed as opposed to chronological or discrepancy based backtracking), but its very\n  // difficult to come up with that type of metric.\n  static compare(a: IState, b: IState) {\n    return (b.score - a.score ||\n    a.state.lifepoints - b.state.lifepoints ||\n    a.state.deck.length - b.state.deck.length ||\n    (+ID.known(b.state.deck[b.state.deck.length - 1]) -\n      +ID.known(a.state.deck[a.state.deck.length - 1])) ||\n    +b.state.reversed - +a.state.reversed);\n  }\n\n  // Scoring function used to differentiate states among its siblings. At a high level:\n  //\n  //  - track the number of Royal Magical Library cards increase the score if we have spells that\n  //    can add counters to them\n  //  - score cards based on their current location and custom scoring functions (which should\n  //    usually return 0 if the card cannot be played). Further dock points from facedown spell\n  //    cards as they clog zones and can't be used for discards.\n  //\n  // Ultimately we want to encourage states that get us nearer to our win condition which involves\n  // spending lifepoints and drawing cards, so we are roughly trying to use score to capture the\n  // idea of 'draw potential'. The main difficulty is trying to capture the 'potential' aspect -\n  // calculating immediate draw potential/playability for the next turn is decently straightforward,\n  // but we want the score to also capture generic 'value' throughout the game (this is why a\n  // summoned/summonable Royal Magical Library is given the highest score - whether or not it can\n  // currently have counters added to it is less important than the potential for it to be used as a\n  // draw engine throughout the game as a force multiplier to the rest of our cards).\n  score() {\n    // If we have reached a winning state we can simply ensure this gets sorted\n    // to the front to ensure we don't bother expanding any sibling states.\n    if (this.end()) return Infinity; // TODO: Number.MAX_VALUE and then use enable -fast-math\n    let score = 0;\n\n    const libraries = {active: 0, total: 0};\n    for (const id of this.monsters) {\n      const card = ID.decode(id);\n      if (card.id === Ids.RoyalMagicalLibrary) {\n        libraries.total++;\n        if (ID.get(id) < 3) libraries.active++;\n      }\n      score += card.score(this, 'monsters', id);\n    }\n\n    const library =\n      libraries.active * WEIGHTS['Royal Magical Library'][3] +\n      libraries.total * WEIGHTS['Royal Magical Library'][2];\n    for (const id of this.spells) {\n      const card = ID.decode(id);\n      const n = card.score(this, 'spells', id);\n      if (!n) continue;\n      if (ID.facedown(id)) {\n        score += n * WEIGHTS.facedown;\n        score += library;\n      } else {\n        score += n;\n      }\n    }\n\n    const open = this.spells.length < 5;\n    for (const id of this.hand) {\n      const card = ID.decode(id);\n      if (card.type !== 'Monster' && !open) continue;\n      if (card.type === 'Monster' && this.summoned) continue;\n      score += card.score(this, 'hand', id);\n      if (card.type === 'Spell') score += library;\n    }\n\n    return score;\n  }\n\n  // Determine whether the win condition is acheivable from the current state. Somewhat confusingly\n  // this doesn't determine whether the current state is terminal, just whether a terminal state\n  // *can* be acheived via a short sequence of actions. This distinction is important as the search\n  // would otherwise spend a large amount of time near the leaf nodes trying to stumble upon the\n  // correct sequence of plays to win - instead we perform a very limited lookahead/unrolling to\n  // guide the search. NOTE: if this function does find a path to victory it will clobber the\n  // existing state in order to produce the correct trace. We don't really care about state being\n  // preserved at this point as we only care about securing a path to victory, though this means we\n  // may \"jump\" several actions ahead at the end once a path becomes clear.\n  //\n  // For our win condition we obviously need < 500 LP to ensure once the Reversal Quiz swap occurs\n  // the Black Pendant can burn our opponent to end the game, but we also need to at least have one\n  // monster (to equip the pendant to) and at least one card in our deck (to be able to reveal with\n  // Reversal Quiz) that we also happen to know the type of. We then track whether we have the Black\n  // Pendant and Reversal Quiz in our hand or on the field, and that we have sufficient Spell & Trap\n  // Zones to play the cards in (if they're not already face-down on the field).\n  //\n  // In addition to this straightforward win condition we also have logic for using A Feather of the\n  // Phoenix to secure a missing piece of the win condition. This is essentially an extra step of\n  // lookahead for a scenario that often comes up and which can drastically cut down on path length.\n  // The search can already handle using Spell Reproduction to recover a missing piece much more\n  // easily as the Spell gets added directly to the hand as opposed to having to stack the deck and\n  // then draw it.\n  end(lookahead = true) {\n    if (this.lifepoints > 500) return false;\n    if (!this.monsters.length || !this.deck.length) return false;\n    const known = this.known(true);\n    if (!known) return false;\n\n    const hand = {pendant: false, quiz: false, feather: -1, upstart: -1};\n    let discard = -1;\n    for (let i = 0; i < this.hand.length; i++) {\n      const id = this.hand[i];\n      if (id === Ids.BlackPendant) {\n        hand.pendant = true;\n      } else if (id === Ids.ReversalQuiz) {\n        hand.quiz = true;\n      } else if (id === Ids.AFeatherOfThePhoenix) {\n        hand.feather = i;\n      } else if (id === Ids.UpstartGoblin) {\n        hand.upstart = i;\n      } else {\n        discard = i;\n      }\n    }\n    if (hand.pendant && hand.quiz && this.spells.length <= 3) {\n      return this.win(known, true, {pendant: false, quiz: false});\n    }\n\n    let equip = true;\n    const spells = {pendant: false, quiz: false, feather: -1, upstart: -1};\n    for (let i = 0; i < this.spells.length; i++) {\n      const id = ID.id(this.spells[i]);\n      if (id === Ids.BlackPendant) {\n        spells.pendant = true;\n        if (!ID.facedown(id)) equip = false;\n      } else if (id === Ids.ReversalQuiz) {\n        spells.quiz = true;\n      } else if (id === Ids.AFeatherOfThePhoenix) {\n        spells.feather = i;\n      } else if (id === Ids.UpstartGoblin) {\n        spells.upstart = i;\n      }\n    }\n    if (spells.quiz && spells.pendant) {\n      return this.win(known, equip, {pendant: true, quiz: true});\n    }\n    if (hand.pendant && this.spells.length <= 4 && spells.quiz) {\n      return this.win(known, equip, {pendant: false, quiz: true});\n    }\n    if (hand.quiz && this.spells.length <= 4 && spells.pendant) {\n      return this.win(known, equip, {pendant: true, quiz: false});\n    }\n\n    if (!lookahead) return false;\n\n    // If we have one piece of the win condition AND A Feather of the Phoenix we can possibly\n    // recover the missing piece if its in the Graveyard AND we have zones (0-2 required) AND draw\n    // power. This is effectively performing a narrow one-turn \"lookahead\" - this is somewhat\n    // expensive but given we're so close to the win condition its worth doing extra work to try to\n    // terminate quicker. NOTE: Archfiend's Oath isn't sufficient as draw power here before we're\n    // already under 500 LP, and Graceful Charity/Pot of Greed complicate things because drawing too\n    // deep can effect the known card for Reversal Quiz (consider the case where the card was only\n    // known because it was previously stacked from another A Feather of the Phoenix).\n    if (!(hand.pendant || spells.pendant || hand.quiz || spells.quiz)) return false;\n    // Technically we could have multiple A Feather of the Phoenix (including one on hand and\n    // field), meaning we are being overly conservative here with the amount of zones we need and\n    // having another card for the discard card.\n    if (!(discard >= 0 && (hand.feather >= 0 || spells.feather >= 0))) return false;\n    if (this.spells.length > 5 - ((+hand.pendant + +hand.quiz) + +(hand.feather >= 0))) return false;\n\n    const hid = this.hand[discard];\n    const gid = (hand.pendant || spells.pendant) ? Ids.ReversalQuiz : Ids.BlackPendant;\n    const k = this.graveyard.indexOf(gid);\n    if (k < 0) return false;\n\n    if ((hand.upstart >= 0 || spells.upstart >= 0)) {\n      if (hand.feather >= 0) {\n        this.feather('hand', hand.feather, hid, gid, discard, k);\n      } else {\n        this.feather('spells', spells.feather, hid, gid, discard, k);\n      }\n\n\n      if (hand.upstart >= 0) {\n        const offset = +(discard < hand.upstart);\n        this.remove('hand', (hand.feather >= 0 && hand.feather < hand.upstart) ? hand.upstart - 1 - offset : hand.upstart - offset);\n        this.major('Activate \"Upstart Goblin\"');\n      } else {\n        this.remove('spells', (spells.feather >= 0 && spells.feather < spells.upstart) ? spells.upstart - 1 : spells.upstart);\n        this.major('Activate face-down \"Upstart Goblin\"');\n      }\n      this.add('graveyard', Ids.UpstartGoblin);\n      this.draw();\n      this.inc();\n\n      return this.win(known, equip, {pendant: spells.pendant, quiz: spells.quiz});\n    }\n\n    for (let i = 0; i < this.monsters.length; i++) {\n      const id = ID.id(this.monsters[i]);\n      // Since we will be playing A Feather of the Phoenix we only need a Library with 2 counters.\n      // TODO: we actually only need 1 counter if Black Pendant is face down...\n      if (id === Ids.RoyalMagicalLibrary && ID.get(this.monsters[i]) >= 2) {\n        if (hand.feather >= 0) {\n          this.feather('hand', hand.feather, hid, gid, discard, k);\n        } else {\n          this.feather('spells', spells.feather, hid, gid, discard, k);\n        }\n        this.major('Remove 3 Spell Counters from \"Royal Magical Library\"');\n        this.mset(i);\n        this.draw();\n        return this.win(known, equip, {pendant: spells.pendant, quiz: spells.quiz});\n      }\n    }\n\n    return false;\n  }\n\n  // Add description of the winning path to the trace without caring about making sure we properly\n  // update State (the search is done, it doesn't matter to us what the terminal State looks like)\n  win(known: DeckID, equip: boolean, facedown: {pendant: boolean; quiz: boolean}) {\n    if (equip) {\n      const monster = ID.decode(this.monsters[0]);\n      this.major(`${facedown.pendant ? 'Flip face-down \"Black Pendant\" and equip' : 'Equip \"Black Pendant\"'}  to \"${monster.name}\"`);\n    }\n    this.major(`Activate${facedown.quiz ? ' face-down' : ''} \"Reversal Quiz\"`);\n    // Filter out Reversal Quiz and Black Pendant from the messages about what gets sent to\n    // the Graveyard (we specifically add Black Pendants to the spells list).\n    const fn = (raw: ID | FieldID | DeckID) => {\n      const id = ID.id(raw);\n      return id !== Ids.ReversalQuiz && id !== Ids.BlackPendant;\n    };\n    const hand = this.hand.filter(fn);\n    if (hand.length) {\n      this.minor(`Send ${Formatter.names(hand)} from hand to Graveyard`);\n    }\n    const monsters = this.monsters.filter(fn);\n    const spells = this.spells.filter(fn);\n    spells.push(Ids.BlackPendant);\n    this.minor(`Send ${Formatter.names([...monsters, ...spells])} from field to Graveyard`);\n\n    for (const id of this.spells) {\n      const card = ID.decode(id);\n      if (card.id === Ids.ConvulsionOfNature) {\n        this.reverse(true);\n        break;\n      }\n    }\n    this.minor(`Call \"${ID.decode(known).type}\", reveal \"${ID.decode(this.deck[this.deck.length - 1]).name}\"`);\n    this.major(`After exchanging Life Points, opponent has ${this.lifepoints} LP and then takes 500 damage from \"Black Pendant\" being sent from the field to the Graveyard`);\n    return true;\n  }\n\n  // Actually active A Feather of the Phoenix at i from location, discarding the hid at j in the\n  // hand to return the gid at k in the graveyard.\n  feather(location: 'hand' | 'spells', i: number, hid: ID, gid: ID, j: number, k: number) {\n    this.major(`Activate${location === 'spells' ? ' face-down' : ''} \"A Feather of the Phoenix\"`);\n    this.minor(`Discard \"${ID.decode(hid).name}\"`);\n    this.minor(`Return \"${ID.decode(gid).name}\" in the Graveyard to the top of the Deck`);\n    this.remove('graveyard', k);\n    if (location === 'hand') {\n      this.discard(i < j ? [i, j] : [j, i]);\n    } else {\n      this.remove(location, i);\n      this.add('graveyard', Ids.AFeatherOfThePhoenix);\n      this.add('graveyard', this.remove('hand', j));\n    }\n    this.deck.push(ID.toggle(gid) as DeckID);\n    this.inc();\n  }\n\n  // Draw cards (or the opening hand if initial = true)\n  draw(n = 1, initial = false) {\n    if (n > this.deck.length) throw new Error('Deck out');\n    const ids = [];\n    for (let i = 0; i < n; i++) {\n      const id = ID.id(this.deck.pop()!);\n      ids.push(id);\n      this.add('hand', id);\n    }\n    const top = this.deck.length - 1;\n    if (this.reversed && this.deck.length && !ID.known(this.deck[top])) {\n      this.deck[top] = ID.toggle(this.deck[top]) as DeckID;\n    }\n    if (initial) {\n      this.major(`Opening hand contains ${Formatter.names(ids.sort(CMP))}`);\n    } else {\n      this.minor(`Draw ${Formatter.names(ids)}`);\n    }\n  }\n\n  clone() {\n    return new State(\n      this.decklist,\n      new Random(this.random.seed),\n      this.lifepoints,\n      this.summoned,\n      this.monsters.slice(),\n      this.spells.slice(),\n      this.hand.slice(),\n      this.banished.slice(),\n      this.graveyard.slice(),\n      this.deck.slice(),\n      this.reversed,\n      this.trace?.slice(),\n    );\n  }\n\n  debug(s: State, trace = true) {\n    if (this.random.seed !== s.random.seed) return 'random';\n    if (this.lifepoints !== s.lifepoints) return 'LP';\n    if (this.summoned !== s.summoned) return 'summoned';\n    if (this.reversed !== s.reversed) return 'reversed';\n    if (!equals(this.monsters, s.monsters)) return 'monsters';\n    if (!equals(this.spells, s.spells)) return 'spells';\n    if (!equals(this.hand, s.hand)) return 'hand';\n    if (!equals(this.banished, s.banished)) return 'banished';\n    if (!equals(this.graveyard, s.graveyard)) return 'graveyard';\n    if (!equals(this.deck, s.deck)) return 'monsters';\n    if (!(!trace || (this.trace === s.trace || (this.trace && s.trace && equals(this.trace, s.trace))))) return 'trace';\n    return '';\n  }\n\n  equals(s: State, trace = true) {\n    return (this.random.seed === s.random.seed &&\n      this.lifepoints === s.lifepoints &&\n      this.summoned === s.summoned &&\n      this.reversed === s.reversed &&\n      equals(this.monsters, s.monsters) &&\n      equals(this.spells, s.spells) &&\n      equals(this.hand, s.hand) &&\n      equals(this.banished, s.banished) &&\n      equals(this.graveyard, s.graveyard) &&\n      equals(this.deck, s.deck) &&\n      (!trace || (this.trace === s.trace ||\n        (this.trace && s.trace && equals(this.trace, s.trace)))));\n  }\n\n  // The encoding of State is actually the single most impactful function for performance as it\n  // is called on every State and, more importantly, is stored for the entirety of the search. It\n  // needs to be fast to create, fast to compare, and as small as possible as it directly impacts\n  // both memory usage and GC pressure.\n  //\n  // The returned string is ordered so that that the elements with the most entropy come first,\n  // meaning that equality checks can abort early when comparing strings. All the IDs are already\n  // guaranteed to be in the ASCII range (though are stored as numbers within State to benefit from\n  // V8 optimizations around Smis like PACKED_SMI_ELEMENTS), jowever, there are several additional\n  // choices made to save on space:\n  //\n  //  - We encode the random seed as hex, though keep lifepoints as decimal because 8000 still\n  //    requires 4 hex digits to encode. For self-contained play we could technically get away with\n  //    only encoding the first 2 digits of lifepoints given the deck can only spend multiples of\n  //    100 LP, but in open play its unlikely but still possible for other values to be relevant\n  //  - The summoned and reversed bits get packed into a single character which also serves as the\n  //    separator for the random seed and the lifepoints total\n  //  - banished gets appended to the very end so that it gets dropped if its empty, saving a\n  //    separator (we know banished can never contain a decimal, unlike the spells zone, so we can\n  //    always determine where lifepoints ends and banished begins)\n  //\n  // Finally, at the cost of no longer being able to decode the encoded output back to the original\n  // state, we can drop separators altogether, effectively turning the output into an elaborate hash\n  // code. This is perfectly acceptable for search, as it simply stores all of the States it\n  // encounters for deduping purposes, though we still provide the option for producing decodeable\n  // strings as this is still useful (eg. for sending States over the wire to Workers).\n  encode(decodeable = true) {\n    const sep = decodeable ? SEP : '';\n    // Using `join` here on an array instead of using a template string or string concatenation\n    // is deliberate as it results in V8 creating a flat string instead of a cons-string, the\n    // latter of which results in significantly higher memory usage. This is a V8 implementation\n    // detail and the approach to forcing a flattened string to be created may change over time.\n    // https://gist.github.com/mraleph/3397008\n    return [\n      String.fromCharCode(...this.hand), String.fromCharCode(...this.monsters),\n      String.fromCharCode(...this.spells), String.fromCharCode(...this.graveyard),\n      String.fromCharCode(...this.deck),\n      this.random.seed.toString(16) + (this.summoned && this.reversed\n        ? SUMMONED_REVERSED : this.summoned ? SUMMONED : this.reversed ? REVERSED : sep) +\n      this.lifepoints + String.fromCharCode(...this.banished),\n    ].join(sep);\n  }\n\n  static decode(s: string, opening?: boolean) {\n    const data: {[key in Exclude<Location, 'banished'>]: (ID | DeckID | FieldID)[]} =\n      {hand: [], monsters: [], spells: [], graveyard: [], deck: []};\n    let current = 0;\n    let i: number;\n    for (i = 0; i < s.length && current < LOCATIONS.length; i++) {\n      if (s[i] === SEP) {\n        current++;\n        continue;\n      }\n      data[LOCATIONS[current]].push(s.charCodeAt(i) as (ID | DeckID | FieldID));\n    }\n\n    // indexOf from index i, but we don't know the actual separator...\n    let j = i;\n    while (j < s.length && s[j] > SEP) j++;\n    const random = new Random(parseInt(s.slice(i, j), 16));\n\n    const summoned = s[j] === SUMMONED_REVERSED || s[j] === SUMMONED;\n    const reversed = s[j] === SUMMONED_REVERSED || s[j] === REVERSED;\n\n    i = j + 1;\n    j = s.indexOf(SEP, i);\n\n    const lifepoints = +s.slice(i, j < 0 ? undefined : j);\n    const banished: DeckID[] = [];\n    if (j >= 0) for (i = j + 1; i < s.length; i++) banished.push(s.charCodeAt(i) as DeckID);\n\n    const trace = opening\n      ? data.hand.length\n        ? [`Opening hand contains ${Formatter.names(data.hand)}`]\n        : []\n      : undefined;\n\n    return new State(\n      undefined,\n      random,\n      lifepoints,\n      summoned,\n      data.monsters as FieldID[],\n      data.spells as FieldID[],\n      data.hand as ID[],\n      banished,\n      data.graveyard as ID[],\n      data.deck as DeckID[],\n      reversed,\n      trace\n    );\n  }\n\n  toString() {\n    // See above about `join`, though for this encoding performance shouldn't really matter\n    return [\n      this.random.seed.toString(16).toUpperCase(), this.lifepoints, +this.summoned,\n      Formatter.encode(this.monsters), Formatter.encode(this.spells), Formatter.encode(this.hand),\n      Formatter.encode(this.banished), Formatter.encode(this.graveyard), Formatter.encode(this.deck),\n      +this.reversed,\n    ].join('|');\n  }\n\n  // Decodes State which was encoded from State.toString. Because the trace is not encoding in the\n  // toString representation the trace created fromString will not have a trace unless you specify\n  // that this is a state representing the opening hand and you wish to have a trace created.\n  static fromString(s: string, opening?: boolean) {\n    let i = 0;\n    let j = s.indexOf('|');\n    const random = new Random(parseInt(s.slice(0, j), 16));\n\n    i = j + 1;\n    j = s.indexOf('|', i);\n    const lifepoints = +s.slice(i, j);\n\n    i = j + 1;\n    const summoned = s[i] === '1';\n\n    i = i + 2;\n    j = s.indexOf('|', i);\n    const monsters = Formatter.decode(s.slice(i, j)) as FieldID[];\n\n    i = j + 1;\n    j = s.indexOf('|', i);\n    const spells = Formatter.decode(s.slice(i, j)) as FieldID[];\n\n    i = j + 1;\n    j = s.indexOf('|', i);\n    const hand = Formatter.decode(s.slice(i, j)) as ID[];\n\n    i = j + 1;\n    j = s.indexOf('|', i);\n    const banished = Formatter.decode(s.slice(i, j)) as DeckID[];\n\n    i = j + 1;\n    j = s.indexOf('|', i);\n    const graveyard = Formatter.decode(s.slice(i, j)) as ID[];\n\n    i = j + 1;\n    j = s.indexOf('|', i);\n    const deck = Formatter.decode(s.slice(i, j)) as DeckID[];\n\n    i = j + 1;\n    const reversed = s[i] === '1';\n\n    const trace = opening\n      ? hand.length\n        ? [`Opening hand contains ${Formatter.names(hand)}`]\n        : []\n      : undefined;\n\n    return new State(\n      undefined,\n      random,\n      lifepoints,\n      summoned,\n      monsters,\n      spells,\n      hand,\n      banished,\n      graveyard,\n      deck,\n      reversed,\n      trace\n    );\n  }\n\n  // Stitch together a path of encoded States and a trace\n  static display(path: string[], trace: string[]) {\n    const buf = [];\n\n    let major = 0;\n    for (const line of trace) {\n      const minor = line.startsWith('  ');\n      if (!minor) {\n        if (path[major - 1]) buf.push(`\\n${path[major - 1]}\\n`);\n        major++;\n      }\n      buf.push(line);\n    }\n\n    return buf.join('\\n');\n  }\n\n  // Perform basic (slow) sanity checks on State\n  static verify(s: State) {\n    const errors: string[] = [];\n    const pretty = (ids: (ID | FieldID | DeckID)[]) => ids.map(Formatter.pretty).join(', ');\n\n    if (s.lifepoints > 8000 || s.lifepoints <= 0) {\n      errors.push(`LP: ${s.lifepoints}`);\n    }\n\n    if (s.monsters.length > 5 || !equals(s.monsters.slice().sort(CMP), s.monsters)) {\n      errors.push(`Monsters: ${pretty(s.monsters)}`);\n    } else {\n      for (const id of s.monsters) {\n        const card = ID.decode(id);\n        if (card.type !== 'Monster' ||\n          ((ID.facedown(id) || card.id !== Ids.RoyalMagicalLibrary) && ID.get(id)) ||\n          ID.get(id) > 3) {\n          errors.push(`Monsters: ${pretty(s.monsters)}`);\n          break;\n        }\n      }\n    }\n\n    if (s.spells.length > 5 || !equals(s.spells.slice().sort(CMP), s.spells)) {\n      errors.push(`Spells: ${pretty(s.spells)}`);\n    } else {\n      for (const id of s.spells) {\n        const card = ID.decode(id);\n        const facedown = ID.facedown(id);\n        const data = ID.get(id);\n        if (card.type === 'Monster' || (facedown && data) ||\n          (card.id === Ids.ArchfiendsOath && data > 1) ||\n          (!facedown && (!(['Continuous', 'Equip'].includes(card.subType) ||\n              card.id === Ids.DifferentDimensionCapsule)))) {\n          errors.push(`Spells: ${pretty(s.spells)}`);\n          break;\n        } else if (!facedown && card.type === 'Spell' &&\n          card.subType === 'Equip' && !s.monsters[data]) {\n          errors.push(`Spells: ${pretty(s.spells)}`);\n          break;\n        }\n      }\n    }\n\n    if (s.hand.some(i => i !== ID.id(i)) || !equals(s.hand.slice().sort(CMP), s.hand)) {\n      errors.push(`Hand: ${pretty(s.hand)}`);\n    }\n\n    if (s.banished.length > 40 ||\n      !equals(s.banished.slice().sort(CMP), s.banished) ||\n      s.banished.filter(ID.facedown).length > 1) {\n      errors.push(`Banished: ${pretty(s.banished)}`);\n    }\n\n    if (s.graveyard.length > 40 ||\n      s.graveyard.some(i => i !== ID.id(i)) ||\n      !equals(s.graveyard.slice().sort(CMP), s.graveyard)) {\n      errors.push(`Graveyard: ${pretty(s.graveyard)}`);\n    }\n\n    if (s.deck.length > 40) {\n      errors.push(`Deck: ${pretty(s.deck)}`);\n    } else {\n      let pattern = 0; // expect (...)???(...)\n      for (const id of s.deck) {\n        const known = ID.known(id);\n        if (!known && pattern === 0) pattern = 1;\n        if (known && pattern === 1) pattern = 2;\n        if (!known && pattern === 2) {\n          errors.push(`Deck: ${pretty(s.deck)}`);\n          break;\n        }\n      }\n    }\n\n    const t = s.toString();\n    const f = State.fromString(t);\n    if (!f.equals(s, false)) errors.push(`toString/fromString:\\n${t} vs.\\n${f.toString()}`);\n\n    const e = s.encode();\n    const d = State.decode(e);\n    if (!d.equals(s, false)) errors.push(`encode/decode:\\n${e} vs.\\n${d.encode()}`);\n\n    const start = [];\n    if (s.decklist) {\n      for (const name in s.decklist) {\n        for (let i = 0; i < s.decklist[name]; i++) start.push(DATA[name].id);\n      }\n      start.sort(CMP);\n    }\n    const now = [\n      ...s.monsters.map(ID.id),\n      ...s.spells.map(ID.id),\n      ...s.hand,\n      ...s.banished.map(ID.id),\n      ...s.graveyard,\n      ...s.deck.map(ID.id),\n    ].sort(CMP);\n    if (start.length && !equals(start, now)) {\n      errors.push(`Mismatch: ${start.length} vs. ${now.length}\\n${Formatter.encode(start)}\\n${Formatter.encode(now)}\\n`);\n    } else if (now.length !== 40) {\n      errors.push(`Cards: ${now.length} (${Formatter.encode(now)})\\n`);\n    }\n\n    return errors;\n  }\n}\n\n// Fucking JS really doesn't have an Array.equals? smfh\nfunction equals<T>(a: T[], b: T[]) {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\n// Sigh, JS defaults to sorting arrays of numbers alphabetically because logic.\nexport const CMP = (a: number, b: number) => a - b;\n","import {Formatter, Ids, ID, DeckID, FieldID} from './ids';\nimport {State, IState, CMP} from './state';\nimport WEIGHTS from './weights.json';\n\n// Type/SubType/Attribute are pruned to just the values used by Library FTK\n// (also note that all monster cards in the deck are actually Effect Monsters)\nexport type Type = 'Monster' | 'Spell' | 'Trap';\nexport type SubType = 'Continuous' | 'Equip' | 'Normal' | 'Quick-Play';\nexport type Attribute = 'Dark' | 'Light';\n\n// The relevant areas of the field in question (the Fusion Deck and Field Spell Zone are unused)\nexport type Location = 'monsters' | 'spells' | 'hand' | 'banished' | 'graveyard' | 'deck';\n\n// Data contains basic data about each card as well as housing the main handler function which\n// determines which additional states can be transitioned to by playing said card. The `play`\n// function is passed a reference to the current state, whether the card is being played from the\n// hand or whether it is being activated from the Spell & Trap Zone, the index of where the card is\n// within its location, the transition map of subsequent states and a reference to the card itself.\n// Handlers are expected to add all legal transition states to the map, though may elide states\n// which are redundant (eg. due to symmetry) as a performance optimization. The `can` function\n// returns true if the card is able to be played from the location given the current state, and the\n// `score` function allows cards to have a custom score to inform the heuristic search algorithm\n// based on the current state.\nexport type Data = {\n  id: ID;\n  type: Type;\n  text: string;\n  score?(\n    state: Readonly<State>,\n    location: 'hand' | 'spells' | 'monsters',\n    id: FieldID,\n  ): number;\n  play(\n    state: Readonly<State>,\n    location: 'hand' | 'spells',\n    i: number,\n    next: Map<string, IState>,\n    card: Card,\n    prescient: boolean,\n  ): void;\n} & ({\n  type: 'Spell' | 'Trap';\n  subType: SubType;\n  can(state: Readonly<State>, location: 'hand' | 'spells' | 'monsters'): boolean;\n} | {\n  type: 'Monster';\n  attribute: Attribute;\n  level: number;\n  atk: number;\n  def: number;\n});\n\n// A Card is the reified basic data type built from CARDS\nexport type Card = Data & {\n  name: string;\n  score(\n    state: Readonly<State>,\n    location: 'hand' | 'spells' | 'monsters',\n    id: FieldID,\n  ): number;\n};\n\n// The Level 4 and lower Monsters all have the same activation. Note tributing Thunder Dragon or\n// setting Cyber Jar face-down/flipping it are handled elsewhere. Only face-up Attack Position and\n// face-down Defense Position are supported by the protocol - while Level Limit - Area B changes all\n// Monsters to Defense Position this makes no meaningful difference on whether or not we can achieve\n// the FTK (though obviously makes a large difference for protection in multi-turn scenarios).\nconst MONSTER: Data['play'] = (state, location, i, next, card) => {\n  const s = state.clone();\n  s.remove(location, i);\n  s.major(`Summon \"${card.name}\" in Attack Position`);\n  s.summon(card.id);\n  State.transition(next, s);\n};\n\n// Basic Spell activations all follow the same pattern, differing only in their effect fn.\nconst SPELL: (fn?: (s: State) => void) => Data['play'] = (fn?: (s: State) => void) =>\n  (state, location, i, next, card) => {\n    // We're avoiding doing `'can' in card` here because this is a hot function and its safe.\n    if (!(card as any).can(state, location, i)) return;\n\n    const s = state.clone();\n    s.remove(location, i);\n    s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    if (card.type === 'Spell' && card.subType === 'Continuous') {\n      // Flipping a face-down may require a sort so we always remove + add\n      s.add('spells', card.id);\n    } else {\n      s.add('graveyard', card.id);\n    }\n    if (fn) fn(s);\n    s.inc();\n    State.transition(next, s);\n  };\n\n// Actually activating Archfiend's Oath's *effect* is different than simply playing Archfiend's\n// Oath and can happen when you play the card or separately. There are also two difference scenarios\n// to cover - we either know the top-card of the deck and thus are paying the cost to be able to\n// draw the card, or we don't know the top-card and we are simply paying to help us reach the win\n// condition and to deck thin.\n// TODO: support probabilisitcally \"guessing\" the top card.\nexport const ARCHFIEND: Data['play'] = (state, location, i, next, card) => {\n  if (state.lifepoints <= 500 || !state.deck.length) return;\n\n  const play = location === 'hand' || ID.facedown(state[location][i]);\n  const prefix = play\n    ? `Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\" then pay`\n    : 'Pay';\n\n  if (state.known()) {\n    const known = state.clone();\n    known.major(`${prefix} 500 LP (${known.lifepoints} -> ${known.lifepoints - 500}) to activate effect of \"${card.name}\"`);\n    known.minor(`Declare \"${ID.decode(known.deck[known.deck.length - 1]).name}\"`);\n    known.lifepoints -= 500;\n    known.remove(location, i);\n    known.add('spells', ID.set(card.id, 1));\n    known.draw();\n    if (play) known.inc();\n    State.transition(next, known);\n  }\n\n  // If you just want to pay 500 you might simply guess something impossible and mill one\n  const unknown = state.clone();\n  unknown.major(`${prefix} 500 LP (${unknown.lifepoints} -> ${unknown.lifepoints - 500}) to activate effect of \"${card.name}\"`);\n  unknown.minor('Declare \"Blue-Eyes White Dragon\"');\n  unknown.lifepoints -= 500;\n  unknown.remove(location, i);\n  unknown.add('spells', ID.set(card.id, 1));\n  const reveal = ID.decode(unknown.deck.pop()!);\n  unknown.minor(`Excavate \"${reveal.name}\"`);\n  unknown.add('graveyard', reveal.id);\n  if (play) unknown.inc();\n  State.transition(next, unknown);\n};\n\n// Reload (and Card Destruction) requires that we have at least one card other than ourselves in our\n// hand and the same number we would be reloading for in our deck.\nconst CAN_RELOAD = (state: State, location: 'hand' | 'spells' | 'monsters') => {\n  const h = (location === 'hand' ? 1 : 0);\n  return state.hand.length > h && state.deck.length >= state.hand.length - h;\n};\n\n// Both Reversal Quiz and tributing Thunder Dragon can potentially proc Sangan's search effect.\nconst SANGAN = (s: State, next: Map<string, IState>, prescient: boolean) => {\n  if (!s.allowed(prescient)) return;\n  const targets = new Set<ID>();\n  for (let j = 0; j < s.deck.length; j++) {\n    const id = ID.id(s.deck[j]);\n    if (targets.has(id)) continue;\n    const card = ID.decode(id);\n    if (card.type === 'Monster' && card.atk <= 1500) {\n      const t = s.clone();\n      t.minor(`Add \"${ID.decode(id).name}\" from Deck to hand after \"Sangan\" was sent to the Graveyard`);\n      t.add('hand', ID.id(t.deck.splice(j, 1)[0]));\n      t.shuffle();\n      State.transition(next, t);\n    }\n  }\n  // Failure to find (mandatory effect)\n  if (!targets.size) {\n    const t = s.clone();\n    t.minor('Fail to find \"Sangan\" target in Deck');\n    t.shuffle();\n    State.transition(next, t);\n  }\n};\n\n// Reload / Card Destruction are handled a little bit unusually here. In Yu-Gi-Oh!, Spell cards may\n// be set before being played, but in the context of this simulation setting Spell cards serves only\n// to increase the depth and width of our game tree. One optimization is to only allow for setting\n// Spell cards if Reload or Card Destruction are Set or in the hand (as the only time it is\n// advantageous to have a card Set as opposed to in the hand where it can be more readily used as a\n// resource is to avoid them being reloaded/discarded by these two cards), however an even better\n// optimization is to simply defer actually setting any cards until one of these two cards are\n// activated. This has several benefits - superficially it makes for more realistic traces, but more\n// importantly it dramatically cuts down on tree depth and allows a better informed decision to be\n// made as all combinations of set cards can be evaluated at the same time to figure out which is\n// most optimal. One downside is that generating subsets is expensive and this has the potential to\n// create very wide and heterogenous nodes (which can cause the same problems as Different Dimension\n// Capsule), though ultimately results in about a 5%+ reduction in exhaustion and increase in overall\n// success rate.\nconst RELOAD: (fn: (s: State) => void, check?: boolean) => Data['play'] =\n  (fn: (s: State) => void, check?: boolean) => (state, location, i, next, card, prescient) => {\n    if (!CAN_RELOAD(state, location)) return;\n    if (check && !state.allowed(prescient)) return;\n\n    const d = state.clone();\n    d.remove(location, i);\n    d.add('graveyard', card.id);\n\n    // We can only set at most max cards before reloading, dependent on open zones and hand size\n    const hand = d.hand.filter(id => ID.decode(id).type !== 'Monster');\n    const h = (location === 'hand' ? 1 : 0);\n    const max = Math.min(5 - state.spells.length - h, hand.length, d.hand.length - 1);\n    for (let n = 1; n <= max; n++) {\n      for (const set of isubsets(d.hand, n, id => ID.decode(id).type !== 'Monster')) {\n        const s = d.clone();\n        const ids = [];\n        for (const [offset, j] of set.entries()) {\n          const id = d.hand[j];\n          ids.push(id);\n          s.add('spells', ID.toggle(id) as FieldID);\n          s.remove('hand', j - offset);\n        }\n        s.major(`Set ${Formatter.names(ids)} face-down then activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        const len = s.hand.length;\n        fn(s);\n        s.hand = [];\n        s.draw(len);\n        s.inc();\n        State.transition(next, s);\n      }\n    }\n    // The case where we don't set any cards beforehand\n    d.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n    const len = d.hand.length;\n    fn(d);\n    d.hand = [];\n    d.draw(len);\n    d.inc();\n    State.transition(next, d);\n  };\n\nexport const DATA: { [name: string]: Data } = {\n  'A Feather of the Phoenix': {\n    id: Ids.AFeatherOfThePhoenix,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Discard 1 card, then target 1 card in your Graveyard; return that target to the top of your Deck.',\n    can(state, location) {\n      return !!(state.graveyard.length && (state.hand.length >= (location === 'hand' ? 2 : 1)));\n    },\n    play(state, location, i, next) {\n      if (!this.can(state, location)) return;\n      const targets = {discard: new Set<ID>(), graveyard: new Set<ID>()};\n      for (let j = 0; j < state.hand.length; j++) {\n        const hid = state.hand[j];\n        if (targets.discard.has(hid)) continue;\n        if (location === 'hand' && i === j) continue;\n\n        for (let k = 0; k < state.graveyard.length; k++) {\n          const gid = state.graveyard[k];\n          if (targets.graveyard.has(gid)) continue;\n          targets.graveyard.add(gid);\n          const s = state.clone();\n          // A Feather of the Phoenix gets privileged logic due to lookahead in the win condition\n          s.feather(location, i, hid, gid, j, k);\n          State.transition(next, s);\n        }\n      }\n    },\n  },\n  'Archfiend\\'s Oath': {\n    id: Ids.ArchfiendsOath,\n    type: 'Spell',\n    subType: 'Continuous',\n    text: 'Once per turn: You can pay 500 Life Points, then declare 1 card name; excavate the top card of your Deck, and if it is the declared card, add it to your hand. Otherwise, send it to the Graveyard.',\n    can: (s, loc) => loc !== 'spells' || !!(s.lifepoints > 500 && s.deck.length),\n    score(state, location, id) {\n      const w = WEIGHTS['Archfiend\\'s Oath'];\n      const activatable =\n        location === 'spells' && state.lifepoints > 500 && state.deck.length && !ID.get(id);\n      return activatable ? w[2] : location === 'hand' ? w[1] : w[0];\n    },\n    play(state, location, i, next, card, prescient) {\n      ARCHFIEND(state, location, i, next, card, prescient);\n\n      const unactivated = state.clone();\n      unactivated.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      unactivated.remove(location, i);\n      unactivated.add('spells', card.id);\n      unactivated.inc();\n      State.transition(next, unactivated);\n    },\n  },\n  'Black Pendant': {\n    id: Ids.BlackPendant,\n    type: 'Spell',\n    subType: 'Equip',\n    text: 'The equipped monster gains 500 ATK. If this card is sent from the field to the Graveyard: Inflict 500 damage to your opponent.',\n    can: s => !!s.monsters.length,\n    play(state, location, i, next, card) {\n      for (let j = 0; j < state.monsters.length; j++) {\n        const s = state.clone();\n        s.remove(location, i);\n        s.major(`${location === 'spells' ? `Flip face-down \"${card.name}\" and equip` : `Equip \"${card.name}\"`} to \"${ID.decode(s.monsters[j]).name}\"`);\n        s.add('spells', ID.set(card.id, j));\n        s.inc();\n        State.transition(next, s);\n      }\n    },\n  },\n  'Card Destruction': {\n    id: Ids.CardDestruction,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Both players discard as many cards as possible from their hands, then each player draws the same number of cards they discarded.',\n    can: CAN_RELOAD,\n    play: RELOAD(s => {\n      for (const id of s.hand) {\n        s.add('graveyard', id);\n      }\n      s.minor(`Discard ${Formatter.names(s.hand)}`);\n    }),\n  },\n  'Card Shuffle': {\n    id: Ids.CardShuffle,\n    type: 'Spell',\n    subType: 'Continuous',\n    text: 'Once per turn: You can pay 300 Life Points; shuffle either your or your opponent\\'s Deck',\n    can: s => s.lifepoints > 300,\n    play(state, location, i, next, card, prescient) {\n      if (!this.can(state, location) || !state.allowed(prescient)) return;\n\n      const reuse = location === 'spells' && !ID.facedown(state[location][i]);\n      const s = state.clone();\n      if (reuse) {\n        s.major(`Activate effect of \"${card.name}\"`);\n      } else {\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      }\n\n      s.remove(location, i);\n      s.add('spells', ID.set(card.id, 1));\n      s.minor(`Pay 300 LP (${s.lifepoints} -> ${s.lifepoints - 300})`);\n      s.lifepoints -= 300;\n      s.shuffle();\n\n      if (!reuse) s.inc();\n      State.transition(next, s);\n    },\n  },\n  'Convulsion of Nature': {\n    id: Ids.ConvulsionOfNature,\n    type: 'Spell',\n    subType: 'Continuous',\n    text: 'Both players must turn their Decks upside down.',\n    can: s => !!s.deck.length,\n    score: s => WEIGHTS['Convulsion of Nature'][+(s.deck.length && !s.reversed)],\n    play: SPELL(s => s.reverse()),\n  },\n  'Cyber Jar': {\n    id: Ids.CyberJar,\n    type: 'Monster',\n    attribute: 'Dark',\n    level: 3,\n    atk: 900,\n    def: 900,\n    text: 'Rock/Flip/Effect – FLIP: Destroy all monsters on the field, then both players reveal the top 5 cards from their Decks, then Special Summon all revealed Level 4 or lower monsters in face-up Attack Position or face-down Defense Position, also add any remaining cards to their hand. (If either player has less than 5 cards in their Deck, reveal as many as possible).',\n    score: (state, location) => WEIGHTS['Cyber Jar'][+!(state.summoned || location === 'hand')],\n    // TODO: handle flipping Cyber Jar in multi-turn scenarios\n    play: MONSTER,\n  },\n  'Different Dimension Capsule': {\n    id: Ids.DifferentDimensionCapsule,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'After this card\\'s activation, it remains on the field. When this card is activated: Banish 1 card from your Deck, face-down. During your second Standby Phase after this card\\'s activation, destroy this card, and if you do, add that card to the hand.',\n    can: s => !!s.deck.length,\n    // TODO: support having the card actually return by adding counters to it on the field each turn\n    play(state, location, i, next, card, prescient) {\n      if (!state.allowed(prescient)) return;\n      const targets = new Set<DeckID>();\n      for (let j = 0; j < state.deck.length; j++) {\n        const id = state.deck[j];\n        if (targets.has(id)) continue;\n        const s = state.clone();\n        s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n        s.remove(location, i);\n        s.add('spells', card.id);\n        s.minor(`Banish ${ID.decode(s.deck[j]).name} from the deck face-down`);\n        // In this deck, all banishing is face-down banished, so the (ID) notation merely indicates\n        // that the card could possibly return from play if Different Dimension Capsule actually\n        // resolves. Reversal Quiz / Heavy Storm / Giant Trunade which prevent Different Dimension\n        // Capsule from resolving are responsible for clearing this data, resulting in the card\n        // being banished for good.\n        s.add('banished', ID.toggle(ID.id(s.deck.splice(j, 1)[0])) as DeckID);\n        s.shuffle();\n        s.inc();\n        State.transition(next, s);\n      }\n    },\n  },\n  'Giant Trunade': {\n    id: Ids.GiantTrunade,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Return all Spells/Traps on the field to the hand.',\n    can: (s, loc) => s.spells.length > (loc === 'hand' ? 0 : 1),\n    play: SPELL(s => {\n      // NOTE: The active Giant Trunade card has already been removed from hand/field\n      for (const id of s.spells) {\n        const card = ID.decode(id);\n        s.add('hand', card.id);\n        if (ID.facedown(id)) continue;\n        // We need to revert the effects of any Convulsion of Nature / Different Dimension Capsule\n        // cards that may be on the field.\n        if (card.id === Ids.ConvulsionOfNature) {\n          s.reverse(true);\n        } else if (card.id === Ids.DifferentDimensionCapsule) {\n          s.banish();\n        }\n      }\n      s.minor(`Return ${Formatter.names(s.spells)} to hand`);\n      s.spells = [];\n    }),\n  },\n  'Graceful Charity': {\n    id: Ids.GracefulCharity,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Draw 3 cards, then discard 2 cards.',\n    can: s => s.deck.length >= 3,\n    play(state, location, i, next, card) {\n      if (!this.can(state, location)) return;\n      const draw = state.clone();\n      draw.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      draw.remove(location, i);\n      draw.add('graveyard', card.id);\n      draw.draw(3);\n      // isubsets might still return redundant subsets but we count on state deduping to handle it\n      for (const [j, k] of isubsets(draw.hand, 2)) {\n        const s = draw.clone();\n        s.minor(`Discard \"${ID.decode(draw.hand[j]).name}\" and \"${ID.decode(draw.hand[k]).name}\"`);\n        s.discard([j, k]); // PRECONDITION: j < k\n        s.inc();\n        State.transition(next, s);\n      }\n    },\n  },\n  'Level Limit - Area B': {\n    id: Ids.LevelLimitAreaB,\n    type: 'Spell',\n    subType: 'Continuous',\n    text: 'Change all face-up Level 4 or higher monsters to Defense Position.',\n    can: (_, loc) => loc !== 'spells',\n    play: SPELL(),\n  },\n  'Pot of Greed': {\n    id: Ids.PotOfGreed,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Draw 2 cards.',\n    can: s => s.deck.length >= 2,\n    play: SPELL(s => s.draw(2)),\n  },\n  'Premature Burial': {\n    id: Ids.PrematureBurial,\n    type: 'Spell',\n    subType: 'Equip',\n    text: 'Activate this card by paying 800 Life Points, then target 1 monster in your Graveyard; Special Summon that target in Attack Position and equip it with this card. When this card is destroyed, destroy the equipped monster.',\n    can(state) {\n      if (!state.graveyard.length || state.monsters.length > 4 || state.lifepoints <= 800) return false;\n      for (const id of state.graveyard) {\n        const target = ID.decode(id);\n        if (target.type === 'Monster') return true;\n      }\n      return false;\n    },\n    score(state) {\n      if (!state.graveyard.length || state.monsters.length > 4 || state.lifepoints <= 800) return WEIGHTS['Premature Burial'][0];\n      let max = 0;\n      for (const id of state.graveyard) {\n        const target = ID.decode(id);\n        if (target.type !== 'Monster') continue;\n        max = Math.max(max, target.score(state, 'monsters', target.id));\n      }\n      return WEIGHTS['Premature Burial'][1] + max;\n    },\n    play(state, location, i, next, card) {\n      if (!state.graveyard.length || state.monsters.length > 4 || state.lifepoints <= 800) return;\n      const targets = new Set<ID>();\n      for (let j = 0; j < state.graveyard.length; j++) {\n        const id = state.graveyard[j];\n        if (targets.has(id)) continue;\n        const target = ID.decode(id);\n        if (target.type === 'Monster') {\n          targets.add(id);\n          const s = state.clone();\n          s.major(`Pay 800 LP (${s.lifepoints} -> ${s.lifepoints - 800}) to activate effect of \"${card.name}\"`);\n          s.minor(`Special Summon \"${target.name}\" in Attack Position from Graveyard`);\n          s.lifepoints -= 800;\n          s.remove('graveyard', j);\n          const zone = s.summon(id, true);\n          s.remove(location, i);\n          s.add('spells', ID.set(card.id, zone));\n          s.inc(zone);\n          State.transition(next, s);\n        }\n      }\n    },\n  },\n  'Heavy Storm': {\n    id: Ids.HeavyStorm,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Destroy all Spells/Traps on the field.',\n    can: (s, loc) => s.spells.length > (loc === 'hand' ? 0 : 1),\n    play: SPELL(s => {\n      // NOTE: The active Heavy Storm card has already been removed from hand/field\n      for (const id of s.spells) {\n        const card = ID.decode(id);\n        s.add('graveyard', card.id);\n        if (ID.facedown(id)) continue;\n        // We need to revert the effects of any Convulsion of Nature / Different Dimension Capsule\n        // cards that may be on the field, and also deal with destroyed monsters with Premature\n        // Burial equipped (and properly fixing up equip indices and pointers after Black Pendant)\n        if (card.id === Ids.ConvulsionOfNature) {\n          s.reverse(true);\n        } else if (card.id === Ids.BlackPendant) {\n          s.mset(ID.get(id));\n        } else if (card.id === Ids.PrematureBurial) {\n          const removed = s.mremove(ID.get(id));\n          s.add('graveyard', removed.id);\n          s.minor(`Sending \"${ID.decode(removed.id).name}\" to the Graveyard after its equipped \"${ID.decode(id).name}\" was destroyed`);\n        } else if (card.id === Ids.DifferentDimensionCapsule) {\n          s.banish();\n        }\n      }\n      s.minor(`Send ${Formatter.names(s.spells)} to Graveyard`);\n      s.spells = [];\n    }),\n  },\n  'Reload': {\n    id: Ids.Reload,\n    type: 'Spell',\n    subType: 'Quick-Play',\n    text: 'Send all cards from your hand to the Deck, then shuffle. Then, draw the same number of cards you added to the Deck.',\n    can: CAN_RELOAD,\n    play: RELOAD(s => {\n      s.deck.push(...s.hand);\n      s.minor(`Return ${Formatter.names(s.hand)} to Deck`);\n      s.shuffle();\n    }, true),\n  },\n  'Reversal Quiz': {\n    id: Ids.ReversalQuiz,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Send all cards from your hand and your field to the Graveyard, then call Spell, Trap, or Monster; reveal the top card of your Deck. If you called it right, both players exchange Life Points.',\n    can: s => !!(s.deck.length && (s.monsters.length || s.spells.length || s.hand.length)),\n    // State.end() already checks for using Reversal Quiz as the win condition, but Reversal Quiz\n    // also has a niche use that will probably never actually be relevant where it clears the field\n    // and procs Sangan. Because this ends up wiping out so many resources it will pretty much\n    // always sort to the very end of any transition set that includes it, but for completeness it\n    // needs to be supported.\n    // NOTE: we are not supporting the case where we actually guess correctly prematurely\n    play(state, location, _, next, self, prescient) {\n      if (!this.can(state, location)) return;\n      let sangan = false;\n      const s = state.clone();\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${self.name}\"`);\n      if (s.hand.length) {\n        s.minor(`Send ${Formatter.names(s.hand)} from hand to Graveyard`);\n      }\n      if (s.monsters.length || s.spells.length) {\n        s.minor(`Send ${Formatter.names([...s.monsters, ...s.spells])} from field to Graveyard`);\n      }\n\n      s.graveyard.push(...s.hand);\n      s.hand = [];\n      for (const id of s.monsters) {\n        const card = ID.decode(id);\n        if (card.id === Ids.Sangan) sangan = true;\n        s.graveyard.push(card.id);\n      }\n      s.monsters = [];\n      for (const id of s.spells) {\n        const card = ID.decode(id);\n        if (!ID.facedown(id)) {\n          if (card.id === Ids.ConvulsionOfNature) {\n            s.reverse(true);\n          } else if (card.id === Ids.DifferentDimensionCapsule) {\n            s.banish();\n          }\n        }\n        s.graveyard.push(card.id);\n      }\n      s.spells = [];\n      s.graveyard.sort(CMP);\n\n      const reveal = s.deck[s.deck.length - 1];\n      if (!ID.known(reveal)) s.deck[s.deck.length - 1] = ID.toggle(reveal) as DeckID;\n      // BUG: we are deliberately peeking here to ensure we call it wrong!\n      const card = ID.decode(reveal);\n      s.minor(`Call \"${card.type === 'Trap' ? 'Monster' : 'Trap'}\", reveal \"${card.name}\"`);\n\n      if (sangan) {\n        SANGAN(s, next, prescient);\n      } else {\n        State.transition(next, s);\n      }\n    },\n  },\n  'Royal Decree': {\n    id: Ids.RoyalDecree,\n    type: 'Trap',\n    subType: 'Continuous',\n    text: 'Negate all other Trap effects on the field.',\n    // TODO: handle flipping Royal Decree in multi-turn scenarios\n    can: (_, loc) => loc === 'hand',\n    play(state, location, i, next, card) {\n      const s = state.clone();\n      s.remove(location, i);\n      if (location === 'hand') {\n        s.major(`Set \"${card.name}\" face-down`);\n        s.add('spells', ID.toggle(card.id) as FieldID);\n      } // else {\n      //   s.major(`Activate face-down' \"${card.name}\"`);\n      //   s.add('spells', card.id);\n      // }\n      State.transition(next, s);\n    },\n  },\n  'Royal Magical Library': {\n    id: Ids.RoyalMagicalLibrary,\n    type: 'Monster',\n    attribute: 'Light',\n    level: 4,\n    atk: 0,\n    def: 2000,\n    text: 'Spellcaster/Effect – Each time a Spell is activated, place 1 Spell Counter on this card when that Spell resolves (max. 3). You can remove 3 Spell Counters from this card; draw 1 card.',\n    // It is hard to know how to score this, but it's pretty much always the case that having a\n    // Library in the Monster Zone is hugely beneficial and even having it in the hand is useful to\n    // then be able to discard it (and bring it back via Premature Burial).\n    score: (_, location) => WEIGHTS['Royal Magical Library'][+(location === 'monsters')],\n    // NOTE: draw effect handled directly in State#next, and all spells use Stat#inc to update counters\n    play: MONSTER,\n  },\n  'Sangan': {\n    id: Ids.Sangan,\n    type: 'Monster',\n    attribute: 'Dark',\n    level: 3,\n    atk: 1000,\n    def: 600,\n    text: 'Fiend/Effect – If this card is sent from the field to the Graveyard: Add 1 monster with 1500 or less ATK from your Deck to your hand.',\n    // Should be very low - the score should reflect that ultimately it is incredibly unlikely to\n    // proc Sangan and then actually get the Royal Magical Library target onto the field.\n    score: (state, location) => WEIGHTS['Sangan'][+!(state.summoned || location === 'hand')],\n    // NOTE: graveyard effect is handled in Thunder Dragon/Reversal Quiz\n    play: MONSTER,\n  },\n  'Spell Reproduction': {\n    id: Ids.SpellReproduction,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Send 2 Spells from your hand to the Graveyard, then target 1 Spell in your Graveyard; add it to your hand.',\n    can(state, location) {\n      const graveyard = state.graveyard.filter(id => ID.decode(id).type === 'Spell').length;\n      const hand = state.hand.filter(id => ID.decode(id).type === 'Spell').length > (location === 'hand' ? 2 : 1);\n      return !!(graveyard && hand);\n    },\n    // FIXME: for some reason using the default +this.can ruins the heuristic\n    score(state, location) {\n      return WEIGHTS['Spell Reproduction'][+!!(state.graveyard.length && state.hand.length > (location === 'hand' ? 2 : 1))];\n    },\n    play(state, location, i, next, card) {\n      if (!(state.graveyard.length && state.hand.length > (location === 'hand' ? 2 : 1))) return;\n\n      let spells!: Set<[number, number]>;\n      const targets = new Set<ID>();\n      for (let g = 0; g < state.graveyard.length; g++) {\n        const id = state.graveyard[g];\n        if (targets.has(id)) continue;\n        if (ID.decode(id).type === 'Spell') {\n          targets.add(id);\n          if (!spells) {\n            spells = new Set();\n            for (const [j, k] of isubsets(state.hand, 2)) {\n              if (location === 'hand' && (i === j || i === k)) continue;\n              if (ID.decode(state.hand[j]).type !== 'Spell') continue;\n              if (ID.decode(state.hand[k]).type !== 'Spell') continue;\n              spells.add([j, k]);\n            }\n            if (!spells.size) return;\n          }\n          // There might still return redundant subsets but we count on state deduping to handle it\n          for (const [j, k] of spells) {\n            const s = state.clone();\n            s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n            s.minor(`Discard \"${ID.decode(s.hand[j]).name}\" and \"${ID.decode(s.hand[k]).name}\"`);\n            const gid = s.remove('graveyard', g);\n            if (location === 'hand') {\n              s.discard([i, j, k].sort(CMP));\n            } else {\n              s.remove(location, i);\n              s.add('graveyard', card.id);\n              s.discard([j, k]); // PRECONDITION: j < k\n            }\n            s.minor(`Add \"${ID.decode(gid).name}\" in the Graveyard to hand`);\n            s.add('hand', gid);\n            s.inc();\n            State.transition(next, s);\n          }\n        }\n      }\n    },\n  },\n  'Spellbook Organization': {\n    id: Ids.SpellbookOrganization,\n    type: 'Spell',\n    // FIXME: chaining like Reload (can both be chained at the same Spell Speed?)\n    subType: 'Quick-Play',\n    text: 'Look at the top 3 cards of your Deck, then return them to the top of the Deck in any order.',\n    can: s => s.deck.length > 2,\n    play(state, location, i, next, card) {\n      if (!this.can(state, location)) return;\n      const s = state.clone();\n      s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n      s.remove(location, i);\n      s.add('graveyard', card.id);\n      s.minor(`Reveal ${Formatter.names(s.deck.slice(s.deck.length - 3).reverse())}`);\n      for (const [j, k, l] of PERMUTATIONS) {\n        const t = s.clone();\n        const ordered =\n          [t.deck[t.deck.length - j], t.deck[t.deck.length - k], t.deck[t.deck.length - l]];\n        t.minor(`Return ${Formatter.names(ordered)} to the Deck`);\n        for (let m = 0; m < ordered.length; m++) {\n          t.deck[t.deck.length - 1 - m] =\n            ID.facedown(ordered[m]) ? ordered[m] : ID.toggle(ordered[m]) as DeckID;\n        }\n        t.inc();\n        // We're just going off a precomputation of the permutations of 3 indexes so its entirely\n        // possibly we will be adding duplicate states that will then be deduped by the standard\n        // State deduplication logic\n        State.transition(next, t);\n      }\n    },\n  },\n  'Thunder Dragon': {\n    id: Ids.ThunderDragon,\n    type: 'Monster',\n    attribute: 'Light',\n    level: 5,\n    atk: 1600,\n    def: 1500,\n    text: 'Thunder/Effect – You can discard this card; add up to 2 \"Thunder Dragon\" from your Deck to your hand.',\n    // Thunder Dragon isn't really worth anything on the field (it can indirectly proc Sangan but\n    // getting value out of that is even more convoluted than the Reversal Quiz Sangan proc\n    // scenario) and thus purely is useful as discard fodder / deck thinning / manipulating the deck\n    score: (state, location) => WEIGHTS['Thunder Dragon'][+(state.deck.length && location === 'hand')],\n    // NOTE: discard effect handled directly in State#next\n    play(state, _, i, next, self, prescient) {\n      for (let j = 0; j < state.monsters.length; j++) {\n        const s = state.clone();\n        const target = ID.decode(state.monsters[j]);\n        s.major(`Tribute \"${target.name}\" to Summon \"${self.name}\"`);\n        // Tributing is incidentally the only thing that makes us keep track of where equip cards\n        // are assigned, as otherwise we could always just say they are associated with the monster\n        // in the first Zone.\n        s.tribute(j, i);\n        if (target.id === Ids.Sangan) {\n          SANGAN(s, next, prescient);\n        } else {\n          State.transition(next, s);\n        }\n      }\n    },\n  },\n  'Toon Table of Contents': {\n    id: Ids.ToonTableOfContents,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Add 1 \"Toon\" card from your Deck to your hand.',\n    can: () => true,\n    play(state, location, i, next, card, prescient) {\n      if (!state.allowed(prescient)) return;\n      const targets = new Set<ID>();\n      for (let j = 0; j < state.deck.length; j++) {\n        const target = ID.decode(state.deck[j]);\n        if (targets.has(target.id)) continue;\n        if (target.name.startsWith('Toon')) {\n          targets.add(target.id);\n          const s = state.clone();\n          s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n          s.minor(`Add \"${target.name}\" from Deck to hand`);\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.add('hand', ID.id(s.deck.splice(j, 1)[0]));\n          s.shuffle();\n          s.inc();\n          State.transition(next, s);\n        }\n      }\n      // Failure to find\n      if (!targets.size) {\n        if (state.allowed(prescient, true)) {\n          const s = state.clone();\n          s.major(`Activate${location === 'spells' ? ' face-down' : ''} \"${card.name}\"`);\n          s.minor('Fail to find \"Toon\" card in Deck');\n          s.remove(location, i);\n          s.add('graveyard', card.id);\n          s.shuffle();\n          s.inc();\n          State.transition(next, s);\n        }\n      }\n    },\n  },\n  'Toon World': {\n    id: Ids.ToonWorld,\n    type: 'Spell',\n    subType: 'Continuous',\n    text: 'Activate this card by paying 1000 Life Points.',\n    can: s => s.lifepoints > 1000,\n    play: SPELL(s => {\n      s.minor(`Pay 1000 LP (${s.lifepoints} -> ${s.lifepoints - 1000})`);\n      s.lifepoints -= 1000;\n    }),\n  },\n  'Upstart Goblin': {\n    id: Ids.UpstartGoblin,\n    type: 'Spell',\n    subType: 'Normal',\n    text: 'Draw 1 card, then your opponent gains 1000 Life Points.',\n    can: s => !!s.deck.length,\n    // NOTE: we don't care about our opponent's life points\n    play: SPELL(s => s.draw()),\n  },\n};\n\n// Convert the raw card Data into Cards\nexport const CARDS: Record<ID, Card> = {};\nfor (const name in DATA) {\n  const card = DATA[name];\n  const score = 'can' in card\n    ? (s: Readonly<State>, loc: 'hand' | 'spells' | 'monsters') =>\n      ((WEIGHTS as any)[name])[+card.can(s, loc)]\n    : () => 0;\n  CARDS[card.id] = {score, ...card, name};\n}\n\n// Basic k-subset function required by Graceful Charity and Spell Reproduction to determine\n// discard targets (though they use the isubsets method below for further deduping). This is also\n// called several times by Reload / Card Destruction to determine possible sets before activation.\n// TODO: a more generic subsets function instead of a k-subsets function would probably\n// improve performance of Reload / Card Destruction.\nfunction subsets<T>(s: T[], k: number): T[][] {\n  if (k > s.length || k <= 0) return [];\n  if (k === s.length) return [s];\n  if (k === 1) {\n    const ss = [];\n    for (const e of s) ss.push([e]);\n    return ss;\n  }\n\n  const ss = [];\n  for (let i = 0; i < s.length - k + 1; i++) {\n    const head = s.slice(i, i + 1);\n    const tail = subsets(s.slice(i + 1), k - 1);\n    for (const t of tail) {\n      ss.push(head.concat(t));\n    }\n  }\n  return ss;\n}\n\n// Instead of subsets of an array we actually want (a) the unique subsets and (b) the *indices* of\n// such unique subsets. This function doesn't quite accomplish the former: 2-subsets of [A, A, B, B]\n// will still return [0, 1], [0, 2], [1, 2], [2, 3] instead of [0, 1], [1, 2], [2, 3], though these\n// redundant subsets can be deduped by the higher level symmetry detection mechanisms.\nfunction isubsets<T>(s: T[], k: number, filter?: (t: T) => boolean): number[][] {\n  // NOTE: this still potentially returns redundant subsets\n  const unique = new Map<T, number>();\n  const is: number[] = [];\n  for (let i = 0; i < s.length; i++) {\n    if (filter && !filter(s[i])) continue;\n    const u = unique.get(s[i]);\n    if (u && u >= k) continue;\n    unique.set(s[i], (u || 0) + 1);\n    is.push(i);\n  }\n  return subsets(is, k);\n}\n\n// Spell Reproduction always just needs the permutations of the top 3 cards of the deck. Deduping\n// by the actual cards isn't necessary in the common cases its much faster to just do less work\n// and let State deduplication logic handle dealing with symmetry.\nconst PERMUTATIONS = [\n  [1, 2, 3], [2, 1, 3], [3, 1, 2],\n  [1, 3, 2], [2, 3, 1], [3, 2, 1],\n];\n","import * as workerpool from '~/.parcel/workerpool';\n\nimport {State, Random} from '~/.parcel/src';\n\nworkerpool.worker({\n  search: (s: string, seed: number, cutoff: number, prescient = false, width = 0) => {\n    const state = State.decode(s);\n    // We don't know the actual state of the deck, so we reseed and shuffle\n    state.random = new Random(seed);\n    state.shuffle();\n\n    try {\n      const result = state.search({cutoff, prescient, width});\n      return 'path' in result ? result.path.length : 0;\n    } catch (err) {\n      if (err instanceof RangeError) return -1;\n      throw err;\n    }\n  },\n});\n"],"names":["root","factory","self","this","__webpack_modules__","module","__unused_webpack_exports","__webpack_require__","Promise","WorkerHandler","environment","DEBUG_PORT_ALLOCATOR","Pool","script","options","workers","tasks","forkArgs","forkOpts","debugPortStart","nodeWorker","workerType","maxQueueSize","Infinity","maxWorkers","isNumber","isInteger","TypeError","validateMaxWorkers","Math","max","cpus","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","bind","ensureWorkerThreads","value","round","prototype","exec","method","params","Array","isArray","resolver","defer","length","Error","task","timeout","push","originalTimeout","promise","delay","indexOf","call","String","proxy","arguments","pool","then","methods","forEach","slice","worker","_getWorker","me","shift","pending","terminated","_removeWorker","i","busy","_createWorkerHandler","releasePort","debugPort","_removeWorkerFromList","resolve","reject","terminate","err","index","splice","force","removeWorker","promises","termPromise","terminateAndNotify","all","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","nextAvailableStartingAt","exports","handler","parent","SyntaxError","_onSuccess","_onFail","resolved","rejected","_process","onSuccess","onFail","s","_then","f","_resolve2","result","fn","_reject2","error","cancel","CancellationError","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","message","stack","remaining","results","p","constructor","name","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","minLen","_arrayLikeToArray","n","Object","toString","from","test","_unsupportedIterableToArray","F","done","e","_e","normalCompletion","didErr","step","next","_e2","arr","len","arr2","_typeof","obj","requireFoolWebpack","TERMINATE_METHOD_ID","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","code","setupBrowserWorker","isBrowserWorker","on","event","addEventListener","data","send","postMessage","setupWorkerThreadWorker","stdout","stderr","isWorkerThread","kill","disconnect","setupProcessWorker","child_process","fork","isChildProcess","resolveForkOptions","opts","processExecArgv","$d6KlF","execArgv","join","inspectorActive","debugBrk","arg","assign","concat","_options","onError","id","processing","undefined","create","platform","Blob","window","URL","createObjectURL","blob","type","__dirname","getDefaultWorker","setupWorker","ready","requestQueue","response","_step","_iterator","request","dispatchQueuedRequests","isEvent","payload","terminating","temp","props","keys","objectToError","exitCode","signalCode","spawnargs","spawnfile","terminationHandler","lastId","cleanup","removeAllListeners","killed","cleanExitTimeout","once","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","DebugPortAllocator","ports","starting","port","isNode","nodeProcess","versions","node","worker_threads","tryRequireFoolWebpack","isMainThread","connected","Window","navigator","hardwareConcurrency","eval","__unused_webpack_module","exit","parentPort","convertError","getOwnPropertyNames","reduce","product","defineProperty","enumerable","isPromise","run","args","Function","apply","currentRequestId","register","hasOwnProperty","emit","add","__webpack_module_cache__","moduleId","cachedModule","__webpack_exports__","workerEmit","define","amd","$98afc9c033b94801$var$cachedSetTimeout","$98afc9c033b94801$var$cachedClearTimeout","$98afc9c033b94801$var$process","$98afc9c033b94801$var$defaultSetTimout","$98afc9c033b94801$var$defaultClearTimeout","$98afc9c033b94801$var$runTimeout","fun","e1","$98afc9c033b94801$var$currentQueue","$98afc9c033b94801$var$queue","$98afc9c033b94801$var$draining","$98afc9c033b94801$var$queueIndex","$98afc9c033b94801$var$cleanUpNextTick","$98afc9c033b94801$var$drainQueue","marker","$98afc9c033b94801$var$runClearTimeout","$98afc9c033b94801$var$Item","array","$98afc9c033b94801$var$noop","nextTick","title","browser","env","argv","version","addListener","off","removeListener","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$f1966b1ca856a682$var$LevelLimitAreaB","$f1966b1ca856a682$var$BlackPendant","$f1966b1ca856a682$var$CardDestruction","$f1966b1ca856a682$var$DifferentDimensionCapsule","$f1966b1ca856a682$var$RoyalDecree","$f1966b1ca856a682$var$AFeatherOfThePhoenix","$f1966b1ca856a682$var$GracefulCharity","$f1966b1ca856a682$var$HeavyStorm","$f1966b1ca856a682$var$CyberJar","$f1966b1ca856a682$var$PrematureBurial","$f1966b1ca856a682$var$RoyalMagicalLibrary","$f1966b1ca856a682$var$SpellbookOrganization","$f1966b1ca856a682$var$CardShuffle","$f1966b1ca856a682$var$ArchfiendsOath","$f1966b1ca856a682$var$PotOfGreed","$f1966b1ca856a682$var$ReversalQuiz","$f1966b1ca856a682$var$Reload","$f1966b1ca856a682$var$Sangan","$f1966b1ca856a682$var$GiantTrunade","$f1966b1ca856a682$var$UpstartGoblin","$f1966b1ca856a682$var$ConvulsionOfNature","$f1966b1ca856a682$var$ToonWorld","$f1966b1ca856a682$var$ToonTableOfContents","$f1966b1ca856a682$var$ThunderDragon","$f1966b1ca856a682$var$SpellReproduction","$f1966b1ca856a682$var$RoyalMagicalLibrary1","$f1966b1ca856a682$var$RoyalMagicalLibrary2","$f1966b1ca856a682$var$RoyalMagicalLibrary3","$f1966b1ca856a682$var$LIBRARY","$f1966b1ca856a682$var$ArchfiendsOath1","$f1966b1ca856a682$var$CardShuffle1","$f1966b1ca856a682$var$DifferentDimensionCapsule1","$f1966b1ca856a682$var$BlackPendant0","$f1966b1ca856a682$var$BlackPendant4","$f1966b1ca856a682$var$PrematureBurial0","$f1966b1ca856a682$var$PrematureBurial4","$f1966b1ca856a682$var$raw","RangeError","$f1966b1ca856a682$export$8be180ec26319f9f","facedown","toggle","known","get","set","decode","$3f407bfbaff96bd8$export$5f768699f44cc740","$f1966b1ca856a682$export$a06636add2a09fd8","encode","ids","human","ok","unhuman","fromCharCode","charCodeAt","startsWith","pretty","card","names","map","last","pop","$f1966b1ca856a682$export$74a5f1f991c6ff51","LevelLimitAreaB","BlackPendant","CardDestruction","DifferentDimensionCapsule","RoyalDecree","AFeatherOfThePhoenix","GracefulCharity","HeavyStorm","CyberJar","PrematureBurial","RoyalMagicalLibrary","SpellbookOrganization","CardShuffle","ArchfiendsOath","PotOfGreed","ReversalQuiz","Reload","Sangan","GiantTrunade","UpstartGoblin","ConvulsionOfNature","ToonWorld","ToonTableOfContents","ThunderDragon","SpellReproduction","$782a6aad0330efbf$export$a92776769f460054","imul","seed","min","floor","z","shuffle","j","sample","remove","val","$5a5a9bfac008f7fc$var$LIMIT","pow","$5a5a9bfac008f7fc$var$BigMap","maps","Map","size","has","k","v","m","$5a5a9bfac008f7fc$export$5e4ee20a01d37dcd","cutoff","prescient","hash","$5a5a9bfac008f7fc$var$bestFirstProbe","visited","path","key","children","state","child","score","trace","Status","$5a5a9bfac008f7fc$export$956b17b249580664","B","discrepancies","$5a5a9bfac008f7fc$var$Status","COMPLETE","$5a5a9bfac008f7fc$var$bulbProbe","PARTIAL","num","split","ceil","best","complete","child1","$42c830becbbf56a6$exports","JSON","parse","$1941ff6a16e33f52$exports","$9203c8d4d5baef73$var$DEBUG","$9203c8d4d5baef73$var$LOCATIONS","$9203c8d4d5baef73$var$SEP","$9203c8d4d5baef73$var$SUMMONED_REVERSED","$9203c8d4d5baef73$var$SUMMONED","$9203c8d4d5baef73$var$REVERSED","$9203c8d4d5baef73$export$8eb3892b442747bd","$9203c8d4d5baef73$export$7254cc27399e90bd","option","count","$parcel$interopDefault","list","decklist","random","deck","$3f407bfbaff96bd8$export$15a2497367026b23","draw","lifepoints","summoned","monsters","spells","hand","banished","graveyard","reversed","location","madd","zone","subType","mremove","equips","spell","mset","equip","summon","special","tribute","fi","hi","minor","h","banish","major","discard","indices","removed","inc","ignore","reverse","revert","top","quiz","bottom","unknown","Set","types","search","width","errors","verify","allowed","manipulation","clone","transition","i1","play","$3f407bfbaff96bd8$export$946abfc123082306","i2","targets","values","sort","compare","a","b","end","libraries","active","total","library","id1","open","id2","lookahead","pendant","feather","upstart","win","hid","gid","offset","monster","raw","initial","$9203c8d4d5baef73$export$2336313834642df","debug","$9203c8d4d5baef73$var$equals","equals","decodeable","sep","opening","current","parseInt","toUpperCase","buf","line","includes","some","pattern","t","fromString","d","start","now","$3f407bfbaff96bd8$var$MONSTER","$3f407bfbaff96bd8$var$SPELL","can","prefix","reveal","$3f407bfbaff96bd8$var$CAN_RELOAD","$3f407bfbaff96bd8$var$SANGAN","atk","$3f407bfbaff96bd8$var$RELOAD","check","$3f407bfbaff96bd8$var$isubsets","entries","text","loc","w","unactivated","reuse","attribute","level","def","_","target","sangan","g","l","$3f407bfbaff96bd8$var$PERMUTATIONS","ordered","$3f407bfbaff96bd8$var$subsets","ss","head","tail","unique","is","u","$jrnC5"],"version":3,"file":"worker.e0372c96.js.map"}
{"mappings":"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","sources":["html/trace/trace.ts"],"sourcesContent":["import {State, Random, ID, DeckID, DATA} from '../../src';\nimport {createElement, track, renderState} from '../common';\n\nconst render = (s: State, rendered: HTMLElement, banished: DeckID[] = [], graveyard: ID[] = []) => {\n  rendered.appendChild(renderState(s, banished, graveyard));\n\n  const wrapper = createElement('div', 'wrapper');\n  const details = createElement('details');\n  const summary = createElement('summary');\n\n  let code = createElement('code');\n  let pre = createElement('pre');\n  pre.textContent = s.toString();\n  code.appendChild(pre);\n  summary.appendChild(code);\n  details.appendChild(summary);\n\n  code = createElement('code');\n  pre = createElement('pre');\n  pre.textContent = s.next().map(({key, score}) => `${key} = ${score.toFixed(2)}`).join('\\n');\n  code.appendChild(pre);\n  details.appendChild(code);\n  wrapper.appendChild(details);\n  rendered.appendChild(wrapper);\n\n  return rendered;\n};\n\nconst win = (path: string[], trace: string[]) => {\n  const banished: DeckID[] = [];\n  const graveyard: ID[] = [];\n\n  const root = createElement('div');\n\n  let div = createElement('div', 'trace');\n  let last = '';\n  let major = 0;\n  let ul = createElement('ul');\n  for (const line of trace) {\n    const minor = line.startsWith('  ');\n    if (!minor) {\n      if (major) {\n        div.appendChild(ul);\n        ul = createElement('ul');\n        root.appendChild(div);\n        div = createElement('div', 'trace');\n      }\n\n      if (path[major - 1]) {\n        const s = State.fromString(path[major - 1]);\n        const activated =\n          last.startsWith('Activate') ? DATA[/\"(.*?)\"/.exec(last)![1]].id\n          : last.startsWith('Set') ? DATA[/then activate(?: face-down)? \"(.*?)\"/.exec(last)![1]].id\n          : undefined;\n        track(s.banished, banished, activated);\n        track(s.graveyard, graveyard, activated);\n\n        const rendered = createElement('div', 'state');\n        root.appendChild(render(s, rendered, banished, graveyard));\n      }\n      last = line;\n      major++;\n\n      const span = createElement('span');\n      span.innerHTML = line.replace(/\"(.*?)\"/g, (_, g: string) => `\"<b>${g}</b>\"`);\n      div.appendChild(span);\n    } else {\n      const li = createElement('li');\n      li.textContent = line;\n      ul.appendChild(li);\n    }\n  }\n  root.appendChild(div);\n\n  return root;\n};\n\nconst lose = (s: State) => {\n  const rendered = createElement('div', 'state');\n\n  const div = createElement('div', 'trace');\n  const span = createElement('span');\n  span.innerHTML = s.trace![0].replace(/\"(.*?)\"/g, (_, g: string) => `\"<b>${g}</b>\"`);\n  div.appendChild(span);\n  rendered.appendChild(div);\n  return render(s, rendered);\n};\n\nconst num = (window.location.hash && +window.location.hash.slice(1)) ||\n  (window.location.search && +window.location.search.slice(1)) ||\n  ~~(Math.random() * (2 ** 31 - 1));\nconst state = State.create(new Random(Random.seed(num)), true);\nconst result = state.search({cutoff: 1e7, prescient: false, width: 0.5});\n\nconst content = document.getElementById('content')!;\nwhile (content.firstChild) content.removeChild(content.firstChild);\n\nif (!('path' in result)) {\n  const div = createElement('div');\n  div.textContent = `Unsuccessfully searched ${result.visited} states.`;\n  content.appendChild(div);\n  content.appendChild(createElement('br'));\n  content.appendChild(lose(state));\n} else {\n  const div = createElement('div');\n  div.textContent = `Found a path of length ${result.path.length} after searching ${result.visited} states:`;\n  content.appendChild(div);\n  content.appendChild(createElement('br'));\n  content.appendChild(win(result.path, result.trace!));\n}\n"],"names":["$4728382ffb959750$var$render","s","rendered","banished","graveyard","appendChild","$iPHaw","renderState","wrapper","createElement","details","summary","code","pre","textContent","toString","next","map","key","score","toFixed","join","$4728382ffb959750$var$num","window","location","hash","slice","search","Math","random","$4728382ffb959750$var$state","$l7khe","State","create","Random","seed","$4728382ffb959750$var$result","cutoff","prescient","width","$4728382ffb959750$var$content","document","getElementById","firstChild","removeChild","div","path","length","visited","trace","root","last","major","ul","line","startsWith","li","fromString","activated","DATA","exec","id","undefined","track","span","innerHTML","replace","_","g","$4728382ffb959750$var$win","$4728382ffb959750$var$lose"],"version":3,"file":"index.66f9c984.js.map"}